-----------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /home/damiancclarke/investigacion/Activa/Twins/Log/Twin_Regressions.log
  log type:  text
 opened on:  22 May 2014, 15:47:04

. use "$Data/DHS_twins", clear

. 
. replace bmi=. if bmi>50
(67938 real changes made, 67938 to missing)

. replace height=. if height>240
(55830 real changes made, 55830 to missing)

. replace height=. if height<80
(3636 real changes made, 3636 to missing)

. replace educ=. if age<6
(1381441 real changes made, 1381441 to missing)

. replace educ=. if educ>25
(0 real changes made)

. replace educf=. if educf>25
(2548 real changes made, 2548 to missing)

. replace birthspacing=. if birthspacing<8|birthspacing==999
(3064 real changes made, 3064 to missing)

. 
. tab _cou, gen(_country)

   country (numeric code) |      Freq.     Percent        Cum.
--------------------------+-----------------------------------
                  Albania |     12,766        0.19        0.19
                  Armenia |     30,007        0.45        0.64
               Azerbaijan |     13,565        0.20        0.84
               Bangladesh |    203,857        3.04        3.89
                    Benin |     95,989        1.43        5.32
                  Bolivia |    161,456        2.41        7.73
                   Brazil |     53,232        0.79        8.52
             Burkina-Faso |    140,498        2.10       10.62
                  Burundi |     36,406        0.54       11.17
                 Cambodia |    118,958        1.78       12.94
                 Cameroon |     86,954        1.30       14.24
 Central-African-Republic |     16,936        0.25       14.49
                     Chad |     47,187        0.70       15.20
                 Colombia |    233,372        3.48       18.68
                  Comoros |      7,913        0.12       18.80
        Congo-Brazzaville |     48,635        0.73       19.53
Congo-Democratic-Republic |     29,548        0.44       19.97
            Cote-d-Ivoire |     74,014        1.11       21.07
       Dominican-Republic |    171,678        2.56       23.64
                  Ecuador |     11,835        0.18       23.81
                    Egypt |    294,830        4.40       28.21
              El-Salvador |      6,383        0.10       28.31
                 Ethiopia |    129,595        1.94       30.24
                    Gabon |     39,987        0.60       30.84
                    Ghana |     67,676        1.01       31.85
                Guatemala |     53,451        0.80       32.65
                   Guinea |     50,058        0.75       33.40
                   Guyana |     15,852        0.24       33.63
                    Haiti |     92,827        1.39       35.02
                 Honduras |     99,356        1.48       36.50
                    India |    800,833       11.96       48.46
                Indonesia |    538,817        8.05       56.51
                   Jordan |    125,811        1.88       58.39
               Kazakhstan |     14,972        0.22       58.61
                    Kenya |    101,418        1.51       60.12
          Kyrgyz-Republic |      8,781        0.13       60.25
                  Lesotho |     29,137        0.44       60.69
                  Liberia |     39,387        0.59       61.28
               Madagascar |    109,847        1.64       62.92
                   Malawi |    164,935        2.46       65.38
                 Maldives |     20,136        0.30       65.68
                     Mali |    150,720        2.25       67.93
                   Mexico |     22,676        0.34       68.27
                  Moldova |      9,903        0.15       68.42
                  Morocco |     80,669        1.20       69.62
               Mozambique |    101,179        1.51       71.13
                  Namibia |     47,840        0.71       71.85
                    Nepal |    111,120        1.66       73.51
                Nicaragua |     70,977        1.06       74.57
                    Niger |     87,107        1.30       75.87
                  Nigeria |    179,246        2.68       78.54
                 Pakistan |     66,418        0.99       79.53
                 Paraguay |     15,346        0.23       79.76
                     Peru |    189,917        2.84       82.60
              Philippines |    127,450        1.90       84.50
                   Rwanda |    109,753        1.64       86.14
    Sao-Tome-and-Principe |      7,620        0.11       86.25
                  Senegal |    145,057        2.17       88.42
             Sierra-Leone |     21,136        0.32       88.74
             South-Africa |     22,934        0.34       89.08
                Sri-Lanka |     17,705        0.26       89.34
                    Sudan |     25,805        0.39       89.73
                Swaziland |     11,410        0.17       89.90
                 Tanzania |    164,843        2.46       92.36
                 Thailand |     17,803        0.27       92.63
                     Togo |     37,051        0.55       93.18
      Trinidad-and-Tobago |      7,837        0.12       93.30
                  Tunisia |     16,463        0.25       93.54
                   Turkey |     59,996        0.90       94.44
                   Uganda |    120,935        1.81       96.24
                  Ukraine |      8,007        0.12       96.36
               Uzbekistan |      9,650        0.14       96.51
                  Vietnam |     29,900        0.45       96.95
                    Yemen |     29,803        0.44       97.40
                   Zambia |     92,092        1.38       98.77
                 Zimbabwe |     82,134        1.23      100.00
--------------------------+-----------------------------------
                    Total |  6,697,397      100.00

. tab year_birth, gen(_yb)

   Mother's |
    year of |
      birth |      Freq.     Percent        Cum.
------------+-----------------------------------
       1935 |         28        0.00        0.00
       1936 |        642        0.01        0.01
       1937 |      5,153        0.08        0.09
       1938 |      9,648        0.14        0.23
       1939 |     11,907        0.18        0.41
       1940 |     17,946        0.27        0.68
       1941 |     17,568        0.26        0.94
       1942 |     29,411        0.44        1.38
       1943 |     37,975        0.57        1.95
       1944 |     44,000        0.66        2.60
       1945 |     54,788        0.82        3.42
       1946 |     62,891        0.94        4.36
       1947 |     72,415        1.08        5.44
       1948 |     82,877        1.24        6.68
       1949 |     92,797        1.39        8.06
       1950 |    117,391        1.75        9.82
       1951 |    111,386        1.66       11.48
       1952 |    135,822        2.03       13.51
       1953 |    135,386        2.02       15.53
       1954 |    153,659        2.29       17.82
       1955 |    162,991        2.43       20.26
       1956 |    178,668        2.67       22.92
       1957 |    195,500        2.92       25.84
       1958 |    212,495        3.17       29.02
       1959 |    215,348        3.22       32.23
       1960 |    253,270        3.78       36.01
       1961 |    218,691        3.27       39.28
       1962 |    257,926        3.85       43.13
       1963 |    250,867        3.75       46.88
       1964 |    246,665        3.68       50.56
       1965 |    247,614        3.70       54.26
       1966 |    230,797        3.45       57.70
       1967 |    213,281        3.18       60.89
       1968 |    231,401        3.46       64.34
       1969 |    203,061        3.03       67.37
       1970 |    224,706        3.36       70.73
       1971 |    182,932        2.73       73.46
       1972 |    191,406        2.86       76.32
       1973 |    174,972        2.61       78.93
       1974 |    156,908        2.34       81.27
       1975 |    157,900        2.36       83.63
       1976 |    143,151        2.14       85.77
       1977 |    124,695        1.86       87.63
       1978 |    123,093        1.84       89.47
       1979 |    105,509        1.58       91.04
       1980 |    110,410        1.65       92.69
       1981 |     84,190        1.26       93.95
       1982 |     81,306        1.21       95.16
       1983 |     69,486        1.04       96.20
       1984 |     56,404        0.84       97.04
       1985 |     49,259        0.74       97.78
       1986 |     40,873        0.61       98.39
       1987 |     29,234        0.44       98.82
       1988 |     25,825        0.39       99.21
       1989 |     16,490        0.25       99.46
       1990 |     14,157        0.21       99.67
       1991 |      9,177        0.14       99.81
       1992 |      6,513        0.10       99.90
       1993 |      3,531        0.05       99.96
       1994 |      1,821        0.03       99.98
       1995 |        866        0.01      100.00
       1996 |        287        0.00      100.00
       1997 |         31        0.00      100.00
------------+-----------------------------------
      Total |  6,697,397      100.00

. tab age, gen(_age)

Child's age |
   in years |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |    316,192        4.72        4.72
          1 |    302,729        4.52        9.24
          2 |    296,976        4.43       13.68
          3 |    300,959        4.49       18.17
          4 |    298,118        4.45       22.62
          5 |    291,951        4.36       26.98
          6 |    319,424        4.77       31.75
          7 |    303,176        4.53       36.28
          8 |    304,502        4.55       40.82
          9 |    278,274        4.15       44.98
         10 |    303,572        4.53       49.51
         11 |    262,120        3.91       53.42
         12 |    285,399        4.26       57.68
         13 |    260,939        3.90       61.58
         14 |    250,923        3.75       65.33
         15 |    239,339        3.57       68.90
         16 |    227,965        3.40       72.31
         17 |    209,195        3.12       75.43
         18 |    210,847        3.15       78.58
         19 |    174,779        2.61       81.19
         20 |    184,612        2.76       83.94
         21 |    147,046        2.20       86.14
         22 |    146,634        2.19       88.33
         23 |    125,759        1.88       90.21
         24 |    112,178        1.67       91.88
         25 |    106,656        1.59       93.47
         26 |     84,864        1.27       94.74
         27 |     70,533        1.05       95.79
         28 |     61,969        0.93       96.72
         29 |     46,304        0.69       97.41
         30 |     44,000        0.66       98.07
         31 |     29,183        0.44       98.50
         32 |     24,366        0.36       98.87
         33 |     18,578        0.28       99.14
         34 |     14,152        0.21       99.36
         35 |     11,153        0.17       99.52
         36 |      8,560        0.13       99.65
         37 |      6,775        0.10       99.75
         38 |      5,266        0.08       99.83
         39 |      3,894        0.06       99.89
         40 |      2,751        0.04       99.93
         41 |      1,919        0.03       99.96
         42 |      1,196        0.02       99.98
         43 |        826        0.01       99.99
         44 |        441        0.01       99.99
         45 |        226        0.00      100.00
         46 |        105        0.00      100.00
         47 |         43        0.00      100.00
         48 |         15        0.00      100.00
         49 |          5        0.00      100.00
         50 |          7        0.00      100.00
         51 |          1        0.00      100.00
         52 |          1        0.00      100.00
------------+-----------------------------------
      Total |  6,697,397      100.00

. tab contracep_intent, gen(_contracep)

contraceptive use and intention |      Freq.     Percent        Cum.
--------------------------------+-----------------------------------
            using modern method |  2,202,376       33.17       33.17
       using traditional method |    501,290        7.55       40.72
non-user - intends to use later |  1,502,563       22.63       63.35
         does not intend to use |  2,433,037       36.65      100.00
                  never had sex |          1        0.00      100.00
--------------------------------+-----------------------------------
                          Total |  6,639,267      100.00

. tab bord, gen(_bord)

    Child's |
birth order |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |  1,848,161       27.60       27.60
          2 |  1,486,566       22.20       49.79
          3 |  1,095,137       16.35       66.14
          4 |    772,132       11.53       77.67
          5 |    536,110        8.00       85.68
          6 |    367,741        5.49       91.17
          7 |    244,693        3.65       94.82
          8 |    156,114        2.33       97.15
          9 |     93,046        1.39       98.54
         10 |     51,971        0.78       99.32
         11 |     25,849        0.39       99.70
         12 |     11,959        0.18       99.88
         13 |      4,654        0.07       99.95
         14 |      1,922        0.03       99.98
         15 |        798        0.01       99.99
         16 |        331        0.00      100.00
         17 |        114        0.00      100.00
         18 |         55        0.00      100.00
         19 |         24        0.00      100.00
         20 |         11        0.00      100.00
         21 |          3        0.00      100.00
         22 |          1        0.00      100.00
         23 |          1        0.00      100.00
         24 |          1        0.00      100.00
         25 |          1        0.00      100.00
         26 |          1        0.00      100.00
         27 |          1        0.00      100.00
------------+-----------------------------------
      Total |  6,697,397      100.00

. local base malec _country* _yb* _age* _contracep* `add'

. drop if twinfamily>2
(6723 observations deleted)

. 
. gen cat="Low Inc, Singleton" if twind==0 & inc_status=="L"
(2797625 missing values generated)

. replace cat="Low Inc, Twin" if twind==1 & inc_status=="L"
(96511 real changes made)

. replace cat="Mid Inc, Single" if twind==0 & inc_status!="L"
(2646406 real changes made)

. replace cat="Mid Inc, Twin" if twind==1 & inc_status!="L"
(54708 real changes made)

. encode cat, gen(catnum)

. 
. save "$Data/DHS_twins_mortality", replace
file ~/investigacion/Activa/Twins/Data/DHS_twins_mortality.dta saved

. 
. keep if _merge==3
(2889332 observations deleted)

. 
. *******************************************************************************
. *** (2) Summary Stats
. *******************************************************************************
. if `sumstats'==1 {
.         
.         if c(os)=="Windows" local format png
.         else if c(os)=="Unix" local format eps
.         ***************************************************************************
.         *** (2a) Tables
.         ***************************************************************************
.         * (A) By twins
.         local opts cells("count mean sd min max")
.         local sep &             
.         local numkids "Number of Children (Education)"
.         local numkidsF "Number of Children (Ever Born)"
.         local nummothers "Number of Mothers"
.         local numcountry "Number of Countries"
. 
.         foreach num of numlist 1(1)4 {
  2.                 cap drop count 
  3.                 gen count = 1 `cond'
  4.                 replace count=. if catnum!=`num'
  5.                 foreach var of local sumstatsC {
  6.                         replace count=. if `var'==.
  7.                 }
  8.                 count if count==1
  9.                 local kk = "`: display %9.0fc r(N)'"
 10. 
.                 local numkids "`numkids' `sep'" "`kk'"
 11. 
.                 bys id: gen n=_n
 12.                 count if count==1&n==1
 13.                 local mm = "`: display %9.0fc r(N)'"
 14.                 local nummothers "`nummothers' `sep'" "`mm'"
 15.                 drop n
 16. 
.                 bys _cou count: gen n=_n
 17.                 count if count==1&n==1
 18.                 if `num'==1|`num'==3 {
 19.                         local numcountry "`numcountry' `sep' `r(N)'`sep'`r(N)' "
 20.                 }
 21.                 drop n
 22.         }
. 
.         count `cond'
.         local kidcount = "`: display %9.0fc r(N)'"
.         sum twind
.         scalar at = "`: display %7.4f r(mean)'"
.         scalar as = "`: display %7.4f r(sd)'"   
.         sum twind if inc_status=="L"
.         scalar lt = "`: display %7.4f r(mean)'"
.         scalar ls = "`: display %7.4f r(sd)'"
.         sum twind if inc_status!="L"
.         scalar mt = "`: display %7.4f r(mean)'"
.         scalar ms = "`: display %7.4f r(sd)'"
. 
.         sum bord if twind==1
.         scalar abm = "`: display %7.3f r(mean)'"
.         scalar abs = "`: display %7.3f r(sd)'"
.         sum bord if twind==1 & inc_status=="L"
.         scalar lbm = "`: display %7.3f r(mean)'"
.         scalar lbs = "`: display %7.3f r(sd)'"
.         sum bord if twind==1 &  inc_status!="L"
.         scalar mbm = "`: display %7.3f r(mean)'"
.         scalar mbs = "`: display %7.3f r(sd)'"
. 
. 
.         preserve
.         gen exceedfam=idealfam==1
.         keep `cond'
.         collapse $sumstatsM, by(id cat)
.         count
.         local mothercount = "`: display %9.0fc r(N)'"
.         
.         estpost tabstat $sumstatsM, by(cat) statistics(mean sd) listwise ///
>          columns(statistics)
.         esttab using "$Tables/Summary/`Sum'.txt", replace main(mean) aux(sd) /*
>         */ nostar unstack noobs nonote nomtitle nonumber
.         restore
. 
.         estpost tabstat $sumstatsC, by(cat) statistics(mean sd) listwise ///
>          columns(statistics)
.         esttab using "$Tables/Summary/`SumC'.txt", replace main(mean) aux(sd) /*
>         */ nostar unstack noobs nonote nomtitle nonumber
. 
.         preserve
.         use "$Data/DHS_twins_mortality.dta", clear
.         estpost tabstat $sumstatsF, by(cat) statistics(mean sd) listwise ///
>          columns(statistics)
.         esttab using "$Tables/Summary/`SumF'.txt", replace main(mean) aux(sd) /*
>         */ nostar unstack noobs nonote nomtitle nonumber
. 
.         foreach num of numlist 1(1)4 {
  2.                 cap drop count
  3.                 gen count = 1 `cond'
  4.                 replace count=. if catnum!=`num'
  5.                 foreach var of local sumstatsF {
  6.                         replace count=. if `var'==.
  7.                 }
  8.                 count if count==1
  9.                 local kk = "`: display %9.0fc r(N)'"
 10. 
.                 local numkidsF "`numkidsF' `sep'" "`kk'"
 11.         }
.         count `cond'
.         local kidcountF = "`: display %9.0fc r(N)'"
.         
.         clear
.         restore
. 
. 
.         file open resfile using "$Tables/Summary/Count.txt", write replace
.         file write resfile "`numcountry' & 67 \\" _n
.         file write resfile "`nummothers' & `mothercount' \\" _n
.         file write resfile "`numkids' & `kidcount' \\" _n
.         file write resfile "`numkidsF' & `kidcountF' \\" _n
.         
.         file write resfile "Fraction Twin & \multicolumn{2}{c}{ `=scalar(lt)'" ///
>           "}& \multicolumn{2}{c}{ `=scalar(mt)' } & `=scalar(at)'\\" _n
.         file write resfile "& \multicolumn{2}{c}{(`=scalar(ls)')" ///
>           "}& \multicolumn{2}{c}{(`=scalar(ms)')} & (`=scalar(as)')\\" _n
.         file write resfile "Birth Order Twin & \multicolumn{2}{c}{ `=scalar(lbm)'" ///
>           "}& \multicolumn{2}{c}{ `=scalar(mbm)' }& `=scalar(abm)'\\" _n
.         file write resfile "& \multicolumn{2}{c}{(`=scalar(lbs)')" ///
>           "}& \multicolumn{2}{c}{(`=scalar(mbs)')}& (`=scalar(abs)')\\" _n
.         file write resfile "`mothercount'"
.         file close resfile
. 
.         preserve
.         decode _cou, gen(WBcountry)
.         gen colvar=inc_status=="L"
.         collapse colvar, by(WBcountry _year)
.         gen income="Low" if colvar==1
.         replace income="Middle" if colvar==0
.         drop colvar
.         order WBcountry income _year
.         sort WBc _year
.         outsheet using "$Tables/Summary/Countries.csv", delimit(;) nonames replace
.         restore
.         
.    ***************************************************************************
.         *** (2b) Graphical
.         *** graph 1: total births by family type (twins vs non-twins)
.         *** graph 2: total births by family type for families who exceed desired
.         *** graph 3: Proportion of twins by birth order
.         *** graph 4: Desired family size
.         *** graphs 5-7: Desired family size by mother's characteristics
.         ***************************************************************************
.         if `graphs'==1 {
. 
.         twoway kdensity fert if twinfamily>0&twinfamily!=., lpattern(dash) bw(2) || ///
>           kdensity fert if twinfamily==0, bw(2) scheme(s1color) ytitle("Density") ///
>           legend(label(1 "Twin Family") label(2 "Singleton Family")) ///
>           title("Total births by Family Type") xtitle("total children ever born") 
.         graph save "$Graphs/`famsize'", replace
.         graph export "$Graphs/`famsize'.`format'", as(`format') replace
. 
. 
.         twoway kdensity fert if twinfamily>0&twinfamily!=. & fert > idealnumkids, ///
>           bw(2) lpattern(dash) || kdensity fert if twinfamily==0 & ///
>           fert > idealnumkids & twin_bord >= idealnumkids, bw(2) scheme(s1color) ///
>           legend(label(1 "Twin Family") label(2 "Singleton Family")) ///
>           ytitle("Density") title("Total births by Family Type") ///
>           xtitle("total children ever born") ///
>           subtitle("For families who exceed desired family size")
.         graph save "$Graphs/`famsize_e'", replace
.         graph export "$Graphs/`famsize_e'.`format'", as(`format') replace
. 
.         
.         local note1 "Single births are 1-frac(twins). "
.         local note2 "Total fraction of twins is represented by the solid line."
.         local gnote "`note1' `note2'"
.         sum twind
.         local twinave=r(mean)   
.         preserve
.         collapse twind [pw=sweight], by(bord)
.         gen twinave=`twinave'   
.         line twind bord if bord<11, lpattern(dash) title("Twinning by birth order") ///
>           ytitle("Fraction twins") xtitle("Birth Order") yline(0.0189) ///
>           note(`gnote') scheme(s1color)
.         graph save "$Graphs/`twinbord'", replace
.         graph export "$Graphs/`twinbord'.`format'", as(`format') replace
. 
.         twoway bar twind bord if bord<11 || ///
>         line twinave bord if bord<11, title("Twinning by birth order") ///
>           ytitle("Fraction twins") xtitle("Birth Order")  ///
>           note(`gnote') scheme(s1color)
.         graph save "$Graphs/`twinbord'_hist", replace
.         graph export "$Graphs/`twinbord'_hist.`format'", as(`format') replace
.         restore
. 
.         
.         local n1 "Total sample of families is 1,586,899.  2.61% of families report "
.         local n2 "'up to god', and 4.39% provide"
.         local n3 "a non-numeric response. These are omitted here."      
.         preserve
.         collapse idealnumkids [pw=sweight], by(id)
.         gen idealnum=idealnumkids if idealnumkids<=9
.         replace idealnum=9 if idealnumkids>10 & idealnumkids<=30
.         lab def n 0 "0" 1 "1" 2 "2" 3 "3" 4 "4" 5 "5" 6 "6" 7 "7" 8 "8" 9 "9+"
.         lab val idealnum n
.         hist idealnum,  note("`n1' `n2'" "`n3'") frac scheme(s1color) ///
>           xtitle("Ideal Family Size") title("Self Reported Ideal Family Size") ///
>           xla(0/9, valuelabel) bcolor(navy)
.         graph save "$Graphs/`idealfam'", replace
.         graph export "$Graphs/`idealfam'.`format'", as(`format') replace
.         restore
. 
.         foreach c of varlist agemay agefirstbirth fert {
  2.                 preserve
  3.                 if `"`c'"'=="agemay" {
  4.                         local cond agemay>=15&agemay<=45
  5.                         local char "Age of mother at time of question"
  6.                 }
  7.                 else if `"`c'"'=="agefirstbirth" {
  8.                         local cond agefirstbirth>=15&agefirstbirth<45
  9.                         local char "Age of Mother at First birth"
 10.                 }
 11.                 else if `"`c'"'=="fert"{
 12.                         local cond fert<=10
 13.                         local char "Total births at time of question"
 14.                 }
 15.                 bys id: gen num=_n
 16.                 keep if num==1
 17.                 collapse idealnumkids [pw=sweight], by(`c')
 18.                 if `"`c'"'=="fert" {
 19.                         sort idealnumkids
 20.                         gen vert=fert
 21.                         twoway line idealnumkids `c' if `cond' || line vert `c' if `cond', ///
>                         lpattern(dash) lcolor(black) title("Ideal Family Size by `char'")  ///
>                         scheme(s1color) ytitle("Average Desired Family Size") ///
>                         legend(label(1 "Ideal Number of Kids") label(2 "45 degrees")) ///         
>                         xtitle("`char'")
 22.                 }               
 23.                 else {  
 24.                         line idealnumkids `c' if `cond', title("Ideal Family Size by `char'") ///
>                         scheme(s1color) xtitle("`char'") ytitle("Average Desired Family Size")
 25.                 }
 26.            graph save "$Graphs/idealfam_`c'", replace
 27.            graph export "$Graphs/idealfam_`c'.`format'", as(`format') replace
 28.                 restore
 29.         }
. 
.         local ii=1
.         foreach condition in income=="low" income=="mid" income=="low"|income=="mid" {
  2.                 if `ii'==1 local name "Low"
  3.                 else if `ii'==2 local name "Middle"
  4.                 else if `ii'==3 local name "All"
  5.                 preserve
  6.                 gen attend1=1 if attendance==1|attendance==2
  7.                 replace attend1=0 if attendance==0
  8.                 gen attend2=1 if attendance==2
  9.                 replace attend2=0 if attendance==1|attendance==0
 10.                 keep `cond'&`condition'
 11.                 collapse attend1 attend2 educ, by(age)
 12.                 drop if age>19
 13.                 gen theoretical=age-5
 14.                 twoway line educ age if age>5 || line theoretical age if age>5, /*
>                 */ title("Education by Age Group") subtitle("`name' Income") /*
>                 */ xtitle("Child's age in years") ytitle("Education") scheme(s1color)
 15.                 graph export "$Graphs/EducAge`name'.eps", as(eps) replace
 16.                 twoway bar attend1 age if age>5, scheme(s1color) bcolor(navy) /*
>                 */ title("Attendance by Age Group") subtitle("`name' Income") /*
>                 */ xtitle("Child's age in years") ytitle("Proportion Attending") /*
>                 */ note("Attendance refers to children who report always or sometimes attending")
 17.                 graph export "$Graphs/Attend1`name'.eps", as(eps) replace
 18.                 twoway bar attend2 age if age>5, scheme(s1color) bcolor(navy) /*
>                 */ title("Attendance by Age Group") subtitle("`name' Income") /*
>                 */ xtitle("Child's age in years") ytitle("Proportion Always Attending") /*
>                 */ note("Attendance refers to children who report always attending")
 19.                 graph export "$Graphs/Attend2`name'.eps", as(eps) replace
 20.                 restore
 21.                 local ++ii
 22.         }       
.         }
. }

. 
. if `sumstats2'==1 {
. 
.         *****************************************************************************
.         *** (2d) Descriptive of desired
.         *****************************************************************************
.         estpost tab idealfam `cond'
.         esttab using "$Tables/Summary/Ideal.xls", cells("b pct") replace
.         estpost tab idealfam `cond'&twinfam==0
.         esttab using "$Tables/Summary/Ideal.xls", cells("b pct") append
.         estpost tab idealfam `cond'&twinfam>=1
.         esttab using "$Tables/Summary/Ideal.xls", cells("b pct") append
.         foreach num in `gplus' {
  2.                 estpost tab idealnumkids `cond'&`num'_plus==1&twin_`num'_fam==0
  3.                 esttab using "$Tables/Summary/Ideal.xls", cells("b pct") append
  4. 
.                 estpost tab idealnumkids `cond'&`num'_plus==1&twin_`num'_fam==1
  5.                 esttab using "$Tables/Summary/Ideal.xls", cells("b pct") append
  6.         }
. 
.         local t=2       
.         foreach n in `gplus' {
  2.                 gen threshold`n'=(twin_`n'_fam==1 & idealnumkids==`t')
  3.                 replace threshold`n'=. if twin_`n'_fam==0
  4.                 local ++t
  5.         }
.         gen threshold2_5=1 if thresholdtwo==1|thresholdthree==1|thresholdfour==1|/*
>         */thresholdfive==1
.         replace threshold2_5=0 if thresholdtwo==0|thresholdthree==0|/*
>         */thresholdfour==0|thresholdfive==0
. 
.         preserve
. 
.         gen inclevel="L" if inc_status=="L"
.         replace inclevel="M" if inc_status=="LM"|inc_status=="UM"
.         keep threshold* id inclevel
.         collapse threshold*, by(id inclevel)
.         
.         estpost tabstat threshold2_5 thresholdt* thresholdfour thresholdfive, /*
>         */ by(inclevel) statistics(mean sd count) columns(statistics)
.         mat counts = e(count)
. 
.         esttab using "$Tables/Summary/Threshold.txt", replace main(mean) aux(sd) /*
>         */ nostar unstack nonote nomtitle nonumber
.         esttab matrix(counts) using "$Tables/Summary/Threshold.txt", append
.         
.         restore
.         
.    *****************************************************************************
.         *** (2e) Descriptive of maternal health
.         *****************************************************************************   
.         if `graphs2'==1 {
.                 preserve
.                 collapse height weightk bmi [pw=sweight] `cond', by(id)
.                 hist weightk if weightk>30&weightk<200, frac scheme(s1color) ///
>                   xtitle("Weight in kg") title("Mother's Weight at time of Survey")
.                 graph export "$Graphs/MotherWeight.eps", as(eps) replace
.                 hist height, frac scheme(s1color) ///
>                   xtitle("Height in cm") title("Mother's Height at time of Survey")
.                 graph export "$Graphs/MotherHeight.eps", as(eps) replace
.                 hist bmi, frac scheme(s1color) ///
>                   xtitle("BMI") title("Mother's BMI at time of Survey") ///
>                   note("BMI is experessed as weight in kg squared/height in km")
.                 graph export "$Graphs/MotherBMI.eps", as(eps) replace
.                 restore
.         }       
. 
.         gen lowheight=height<157.48
.         replace lowheight=. if height==.
.         gen lowweight=bmi<18.5
.         replace lowweight=. if bmi==.
.         
.         estpost tab lowheight `cond'
.         esttab using "$Tables/Summary/Health.xls", cells("b pct") replace
.         estpost tab lowweight `cond'
.         esttab using "$Tables/Summary/Health.xls", cells("b pct") append
. }

. 
. if `trends'==1 {
.         foreach inc in all low mid {
  2.                 if "`inc'"=="all" local cex
  3.                 else if "`inc'"=="low"|"`inc'"=="mid" local cex &income=="`inc'"        
  4.                 **************************************************************************
.                 *** (2f) Trends in education/fertility
.                 **************************************************************************
.                 preserve
  5.                 keep `cond'&age>15`cex'
  6.                 collapse educ `w', by(child_yob)
  7.                 sort child_yob
  8.                 twoway line educ child_yob, /* 
>                 */ title("Average years of Education by Birth Cohort") scheme(s1color) /*
>                 */ xtitle("DHS Birth Cohort") ytitle("Years of Education")
  9.                 graph export "$Graphs/eductrend_kids_`inc'.eps", as(eps) replace
 10.                 restore
 11. 
.                 preserve
 12.                 keep `cond'`cex'
 13.                 bys id: gen keepcrit=_n
 14.                 keep if keepcrit==1
 15.                 collapse educf `w', by(year_birth)
 16.                 sort year_birth
 17.                 twoway line educf year_birth if year_birth>=1940&year_birth<1997, /* 
>                 */ title("Average years of Education by Birth Cohort") scheme(s1color) /*
>                 */ xtitle("DHS Birth Cohort") ytitle("Years of Education")
 18.                 graph export "$Graphs/eductrend_`inc'.eps", as(eps) replace
 19.                 restore
 20. 
.                 
.                 foreach aa of numlist 0 35 {
 21.                         if `aa'==0 local title "Fertility (All women)"
 22.                         if `aa'==35 local title "Fertility (Women aged 35+)"
 23.                         preserve
 24.                         keep `cond'&agemay>`aa'`cex'
 25.                         bys id: gen keepcrit=_n
 26.                         keep if keepcrit==1
 27.                         collapse fert idealnumkids `w', by(year_birth)
 28.                         sort year_birth
 29.                         twoway line fert year_bi, lpattern(dash) || line idealnumkids year_birth, /*
>                         */ scheme(s1color) legend(label(1 "Fertility per Woman") /*
>                         */ label(2 "Desired Fertility")) title(`title') ytitle("Births per Woman")
 30.                         graph export "$Graphs/ferttrend_`aa'_`inc'.eps", as(eps) replace
 31.                         restore
 32.                 }
 33.         }
. }

. 
. 
. ********************************************************************************
. **** (3) Twin predict regressions
. ********************************************************************************
. if `twin'== 1 {
.         local out "$Tables/Twin/`TwinPred'.xls"
.         fvset base 1 _cou
.         fvset base 1 child_yob
.         
.         eststo: reg twind100 $twinpredict `wt', `se'
. 
.         foreach inc in =="L" !="L"  {
  2.                 eststo: reg twind100 $twinpredict `wt' if inc_status`inc', `se'
  3.         }
.         
.         local cond1 child_yob>1989
.         local cond2 child_yob<=1989
. 
.         foreach condtn in cond1 cond2 {
  2.                 eststo: reg twind100 $twinpredict `wt' if ``condtn'', `se'
  3.         }
. 
.         eststo: reg twind100 $twinpredict /*antenatal*/ prenate* `wt', `se'
. 
.         estout est1 est2 est3 est4 est5 est6 using `out', keep($twinout /*ante**/ pre*) ///
>           title("Probability of Giving Birth to Twins (DHS)") ///
>           varlabels(motherage "Age" motheragesq "Age Squared"  agefirstbirth ///
>           "Age First Birth" educf "Education (years)" educfyrs_sq  ///
>           "Education squared" height "Height" bmi "BMI") `estopt' replace ///
>           note("Notes: All specifications include a full set of year of birth and" ///
>           " country dummies, and are estimated as linear probability models. " ///
>           "Twin is multiplied by 100 for presentation.  Height is measured in cm" ///
>           " and BMI is weight in kg divided by height in metres squared. l" ///
>           " Prenatal care variables are only recoreded for recent births.  As" ///
>           " such, column (6) is estimated only for that subset of births where " ///
>           "these observations are made.")
. 
.         estimates clear
.         
.         *****************************************************************************
.    **** (3a) Non-linear health
.    *****************************************************************************
.         local out "$Tables/Twin/`TwinPred'_alt.xls"
.         fvset base 1 _cou
.         fvset base 1 child_yob
. 
.         eststo: reg twind100 $twinpredict bmi_sq height_sq `wt', `se'
.         foreach inc in =="L" !="L"  {
  2.                 eststo: reg twind100 $twinpredict bmi_sq height_sq `wt' if /*
>                 */ inc_status`inc', `se'
  3.         }
.         estout est1 est2 est3 using `out', ///
>           keep($twinout bmi_sq height_sq) ///
>           title("Probability of Giving Birth to Twins (DHS)") ///
>           varlabels(motherage "Age" motheragesq "Age Squared"  agefirstbirth ///
>           "Age First Birth" educf "Education (years)" educfyrs_sq  ///
>           "Education squared" height "Height" bmi "BMI" bmi_sq "BMI squared" ///
>           height_sq "height squared") `estopt' replace
. 
.         estimates clear
.         
.         *****************************************************************************
.    **** (3b) Z-scores
.    *****************************************************************************
.         local out "$Tables/Twin/`TwinPred'_Z.xls"
.         fvset base 1 _cou
.         fvset base 1 child_yob
.         foreach var of varlist educf height bmi {
  2.                 egen `var'_sd=sd(`var')
  3.                 egen `var'_mean=mean(`var')     
  4.                 gen Z`var'=(`var'-`var'_mean)/`var'_sd
  5.                 drop `var'_sd `var'_mean
  6.         }
. 
.         eststo: reg twind motherage motheragesq agefirstbirth Zeducf Zbmi Zheight /*
>         */ i.child_yob i.bord `wt', `se'
. 
.         drop Zbmi Zheight Zeducf
.         foreach var of varlist educf height bmi {
  2.                 bys _cou: egen `var'_sd=sd(`var')
  3.                 bys _cou: egen `var'_mean=mean(`var')   
  4.                 gen Z`var'=(`var'-`var'_mean)/`var'_sd
  5.                 drop `var'_sd `var'_mean
  6.         }
.         eststo: reg twind motherage motheragesq agefirstbirth Zeducf Zbmi Zheight /*
>         */ i.child_yob i.bord `wt', `se'
.         
.         estout est1 est2 using `out', keep(motherage motheragesq agefirstbirth ///
>           Zeducf Zbmi Zheight) title("Probability of Giving Birth to Twins (DHS)") ///
>           varlabels(motherage "Age" motheragesq "Age Squared"  agefirstbirth ///
>           "Age First Birth" Zeducf "Education (Z-score)" educfyrs_sq  ///
>           "Education squared" height "Height" bmi "BMI" bmi_sq "BMI squared" ///
>           height_sq "height squared") `estopt' replace
.         estimates clear
. }

. 
. ********************************************************************************
. **** (4) Simple OLS of Q-Q (can then apply Altonji)
. ********************************************************************************
. if `ols'==1 {
.         local out "$Tables/OLS/QQ_ols.xls"
. 
.         gen desiredbirth=bord<=idealnumkids
.         gen fertXdesired=fert*desiredbirth
.         local count = 0
.         foreach y of varlist $outcomes {
  2.                 qui reg `y' fert `base' $age  $S $H [pw=sweight], `se'
  3.                 reg `y' fert `base' $age [pw=sweight] if e(sample)==1, `se'
  4.                 if `count'==0 outreg2 fert $age using `out', replace
  5.                 else if `count'!=0 outreg2 fert $age using `out', append
  6.                 reg `y' fert `base' $age $S [pw=sweight] if e(sample)==1, `se'
  7.                 outreg2 fert $age $S using `out', append
  8.                 reg `y' fert `base' $age $S $H [pw=sweight], `se'
  9.                 outreg2 fert $age $S $H using `out', excel append
 10.                 reg `y' fert fertXdesired `base' $age $S $H [pw=sweight], `se'
 11.                 outreg2 fert* $age $S $H using `out', excel append
 12. 
.                 local ++count
 13.         }
.         
.         foreach inc in low mid {
  2.                 foreach y of varlist $outcomes {
  3.                         qui reg `y' fert `base' $age $S $H if income==`"`inc'"', `se'
  4.                         reg `y' fert `base' $age `wt' if income==`"`inc'"'&e(sample), `se'
  5.                         outreg2 fert $age using `out', excel append
  6. 
.                         reg `y' fert `base' $age $S `wt' if income==`"`inc'"'&e(sample), `se'
  7.                         outreg2 fert $age $S using `out', excel append
  8. 
.                         reg `y' fert `base' $age $S $H `wt' if income==`"`inc'"', `se'
  9.                         outreg2 fert $age $S $H using `out', excel append
 10. 
.                         reg `y' fert fertXdesired `base' $age $S $H `wt' /*
>                         */ if income==`"`inc'"', `se'
 11.                         outreg2 fert* $age $S $H using `out', excel append
 12.                 }
 13.         }
. }

. 
. ********************************************************************************
. **** (5) IV (using twin at order n), subsequent inclusion of twin predictors
. ********************************************************************************
. if `IV'==1 {
.         tokenize `fnames'
.         foreach condition of local conditions {
  2.                 
.                 local n1=1
  3.                 local n2=2
  4.                 local n3=3
  5.                 local estimates
  6.                 local fstage
  7. 
.                 local OUT "$Tables/IV/`1'"
  8. 
.                 foreach n in `gplus' {
  9.                         preserve
 10.                         keep `cond'&`condition'&`n'_plus==1                     
 11. 
.                         foreach y of varlist $outcomes {
 12.                                 eststo: ivreg2 `y' `base' $age $S $H (fert=twin_`n'_fam) `wt',    /*
>                                 */ `se' savefirst savefp(f`n3')
 13.                                 eststo: ivreg2 `y' `base' $age $H (fert=twin_`n'_fam) `wt'        /*
>                                 */ if e(sample), `se' savefirst savefp(f`n2')
 14.                                 eststo: ivreg2 `y' `base' (fert=twin_`n'_fam) `wt' if e(sample),  /*
>                                 */ `se' savefirst savefp(f`n1')
 15. 
.                                 local estimates `estimates'  est`n3' est`n2' est`n1' 
 16.                                 local fstage `fstage' f`n1'fert f`n2'fert f`n3'fert
 17.                                 local n1=`n1'+3
 18.                                 local n2=`n2'+3
 19.                                 local n3=`n3'+3
 20.                         }
 21.                         restore
 22.                 }
 23. 
.                 estout `estimates' using "`OUT'.xls", replace `estopt' `varlab' /*
>                 */ keep(fert $age $S $H)
 24.                 estout `fstage' using "`OUT'_first.xls", replace `estopt' `varlab' /*
>                 */ keep(twin_* $age $S $H)
 25. 
.                 estimates clear
 26.                 macro shift
 27.         }
. }

. 
. ********************************************************************************
. **** (6) IV including twins and pre-twins
. ********************************************************************************
. if `IVtwin'==1 {
.         local n1=1
.         local n2=2
.         local n3=3
.         local estimates
.         local firststage
. 
.         foreach n in `gplus' {
  2.                 preserve
  3.                 keep `cond'&`n'_plus_twins==1
  4. 
.                 foreach y of varlist $outcomes {
  5.                         eststo: ivreg2 `y' `base' $age $S $H (fert=twin_`n'_fam) `wt', /*
>                         */ `se' savefirst savefp(f`n3')
  6.                         eststo: ivreg2 `y' `base' $age $S (fert=twin_`n'_fam) `wt' if e(sample),   /*
>                         */ `se' savefirst savefp(f`n2')
  7.                         eststo: ivreg2 `y' `base' (fert=twin_`n'_fam) `wt' if e(sample), /*
>                         */ `se' savefirst savefp(f`n1')
  8. 
.                         local estimates `estimates' est`n3' est`n2' est`n1' 
  9.                         local firststage `firststage' f`n1'fert f`n2'fert f`n3'fert
 10.                         local n1=`n1'+3
 11.                         local n2=`n2'+3
 12.                         local n3=`n3'+3
 13.                 }
 14.                 restore
 15.         }
. 
.         estout `estimates' using "$Tables/IV/`IVt'.xls", replace ///
>         keep(fert malec $age $S $H) `estopt' `varlab'
. 
.         estout `firststage' using "$Tables/IV/`IVt1'.xls", replace ///
>         keep(twin_* malec $age $S $H) `estopt' `varlab' 
.         
.         estimates clear
. }

. 
. 
. ********************************************************************************
. **** (7) IV with twin threshold
. ********************************************************************************
. if `desire'==1 {
.         *gen idealbarrier=floor(idealnumkids)
.         gen idealbarrier=floor(desiredfert_region)
.         
.         local endog fert fertXthreshold
.         foreach inc in /*all low*/ mid F M {
  2.                 if "`inc'"=="all" local cex
  3.                 else if "`inc'"=="low"|"`inc'"=="mid" local cex &income=="`inc'"
  4.                 else if "`inc'"=="F"|"`inc'"=="M" local cex &gender=="`inc'"
  5. 
.                 local n1=1
  6.                 local n2=2
  7.                 local n3=3
  8.                 local estimates
  9.                 local firststage
 10. 
.                 local t=2
 11.                 foreach n in `gplus' {
 12.                         preserve
 13.                         keep `cond'&`n'_plus==1 `cex'
 14.                         gen threshold=(twin_`n'_fam==1 & idealbarrier==`t')
 15.                         gen fertXthreshold=fert*threshold
 16.                         gen desired=idealbarrier<=`t'
 17.                         
.                         cap gen twin`n'Xthreshold = twin_`n'_fam*threshold
 18.                         local insts twin_`n'_fam twin`n'Xthreshold
 19. 
.                         foreach y of varlist $outcomes {
 20.                                 eststo: ivreg2 `y' `base' $age $S $H desired (`endog' = `insts') /*
>                                 */ `wt', `se' savefirst savefp(f`n3')
 21.                                 eststo: ivreg2 `y' `base' $age $S desired (`endog' = `insts') /*
>                                 */ `wt' if e(sample), `se' savefirst savefp(f`n2')
 22.                                 eststo: ivreg2 `y' `base' desired (`endog' = `insts') /*
>                                 */ `wt' if e(sample), `se' savefirst savefp(f`n1')
 23. 
.                                 local estimates `estimates' est`n3' est`n2' est`n1'
 24.                                 local firststage `firststage' f`n1'fert f`n2'fert f`n3'fert
 25.                 
.                                 local n1=`n1'+3
 26.                                 local n2=`n2'+3
 27.                                 local n3=`n3'+3
 28.                                 }
 29.                         local ++t
 30.                         drop threshold fertXthreshold desired
 31.                         restore
 32.                 }
 33. 
.                 estout `estimates' using "$Tables/IV/`IVdes'_`inc'.xls", replace ///
>                  keep(fert fertXthreshold $age $S $H) `estopt' `varlab'
 34. 
.                 estout `firststage' using "$Tables/IV/`IVdes1'_`inc'.xls", replace ///
>                  keep(twin* $age $S $H) `estopt' `varlab'
 35.         
.                 estimates clear
 36.         }
. }

. 
. *NOTE: for coefficients estimated separately by desire, roll back and see here.
. ********************************************************************************
. **** (9) New results 04/01/2013.  This first section is a quick look at whether
. ***  truncated and non truncated fertility look similar in terms of 1st stage.
. ***  Also, the IMR test (pre-twins) is included as `twinoccur'
. ********************************************************************************
. if `compl_fert'==1 {
.         local n1=1
.         local n2=2
.         local n3=3
.         local estimates
. 
.         foreach age of numlist 35 40 {
  2.                 foreach n in `gplus' {
  3.                         local c  `cond'&agemay>`age'&`n'_plus==1
  4.                         local ce `cond'&agemay>`age'&`n'_plus==1&e(sample)
  5.                         foreach y of varlist $outcomes {
  6.                                 eststo: reg fert `base' $age $S $H twin_`n'_fam `wt' `c'&`y'!=., `se'
  7.                                 eststo: reg fert `base' $age $S twin_`n'_fam `wt' `ce', `se'
  8.                                 eststo: reg fert `base' twin_`n'_fam `wt' `ce', `se'
  9. 
.                                 local estimates `estimates' est`n3' est`n2' est`n1' 
 10.                                 local n1=`n1'+3
 11.                                 local n2=`n2'+3
 12.                                 local n3=`n3'+3
 13.                         }
 14.                 }
 15.         }
.                 
.         estout `estimates' using "$Tables/New/NewFirst.xls", replace ///
>         keep(twin* malec $age $S $H _contracep*) `estopt'
.         
.         estimates clear
. }

. 
. if `twinoccur_ols'==1 {
.         preserve
.         use "$Data/DHS_twins_mortality"
.         
.         gen ta=age if twind==1
.         bys id: egen twinage=min(ta)
.         gen twinagedif=twinage-age
.         
.         gen treated=twinfamily>=1&twinagedif>1&twinagedif!=.
.         replace treated=. if twinfamily>=1&twinagedif<1
.         tab treated
. 
.         local n1=1
.         local n2=2
.         local n3=3
.         local estimates
. 
.         replace infantmortality=infantmortality*100
.         foreach n in `gplus' {
  2.                 local c  `cond'&`n'_plus==1
  3.                 local ce `cond'&`n'_plus==1&e(sample)
  4.                 eststo: reg infantmortality `base' $age $S $H treated `wt' `c', `se'
  5.                 eststo: reg infantmortality `base' $age $S treated `wt' `ce', `se'
  6.                 eststo: reg infantmortality `base' $age treated `wt' `ce', `se'
  7. 
.                 local estimates `estimates' est`n3' est`n2' est`n1' 
  8.                 local n1=`n1'+3
  9.                 local n2=`n2'+3
 10.                 local n3=`n3'+3
 11.         }
.         
.                 
.         estout `estimates' using "$Tables/New/PreTwinTest.xls", replace ///
>         keep(treated malec $age $S $H) `estopt' 
.         estimates clear
. 
.         restore
. }

. if `twinoccur_iv'==1 {
.         preserve
.         use "$Data/DHS_twins_mortality"
. 
.         local n1=1
.         local n2=2
.         local n3=3
.         local estimates
.         local firststage
.         tempfile before
.         
.         foreach n in `gplus' {
  2.                 save `before'
  3.                 keep `cond'&`n'_plus==1
  4.                 foreach y of varlist infantmortality {
  5.                         eststo: ivreg2 `y' `base' $age $S $H (fert=twin_`n'_fam) `wt', /*
>                         */ `se' savefirst savefp(f`n3')
  6.                         eststo: ivreg2 `y' `base' $age $S (fert=twin_`n'_fam) `wt' /*
>                         */ if e(sample), `se' savefirst savefp(f`n2')
  7.                         eststo: ivreg2 `y' `base' (fert=twin_`n'_fam) `wt' if e(sample), /*
>                         */ `se' savefirst savefp(f`n1')
  8. 
.                         local estimates `estimates' est`n3' est`n2' est`n1' 
  9.                         local firststage `firststage' f`n1'fert f`n2'fert f`n3'fert
 10.                         local n1=`n1'+3
 11.                         local n2=`n2'+3
 12.                         local n3=`n3'+3
 13.                 }
 14.                 use `before', clear
 15.         }
. 
.         estout `estimates' using "$Tables/New/IMRtest.xls", replace ///
>         keep(fert malec $age $S $H) `estopt' `varlab'
. 
.         estout `firststage' using "$Tables/New/IMRtest_f.xls", replace ///
>         keep(twin_* malec $age $S $H) `estopt' `varlab' 
.         
.         estimates clear
.         restore
. }

. 
. 
. ********************************************************************************
. **** (10) Conley et al approach
. ***  Here we are assuming that:
. ***     quality  = beta*quantity + gamma*twin + epsilon.
. ***     quantity = pi*twin + nu
. ***
. ***  Typical instrumental assumption is that gamma=0, but Conley et al relax
. ***  this so that gamma can be a small effect, or as they say, we have "prior
. ***  information that implies that gamma is near 0 but perhaps not exactly 0".
. ********************************************************************************
. if `conley'==1 {
. 
.         *****************************************************************************
.         *** (10a) Union of Confidence Intervals (have now removed $S and $H)
.         *****************************************************************************   
.         matrix conbounds = J(5,4,1)
.         local ii=3
.         foreach n in `gplus' {
  2.                 *local c `cond'&`n'_plus==1&income=="`inc'"
.                 local c `cond'&`n'_plus==1
  3. 
.                 reg school_zscore fert `base' $age `c'
  4.                 outreg2 fert using "$Tables/Conley/ConleyReg.xls", excel append         
  5.                 reg school_zscore fert twin_`n'_fam `base' $age `c'
  6.                 outreg2 twin_`n'_fam fert using "$Tables/Conley/ConleyReg.xls", excel append
  7.                 local estimate `=_b[twin_`n'_fam]'
  8. 
.                 foreach num of numlist 1 /*2*/ {
  9.                         dis "estimating for `num' times the estimated coefficient on twins"
 10.                         local est2=`estimate'*`num'
 11.                         plausexog uci school_zscore `base' $age (fert = twin_`n'_fam) `c', /*
>                         */ gmin(0) gmax(`est2') grid(2) level(.95) robust
 12.                 }
 13.                 mat conbounds[`ii',1]=e(lb_fert)
 14.                 mat conbounds[`ii',2]=e(ub_fert)                
 15.                 **************************************************************************
.                 *** (10b) Local to Zero Approach
.                 **************************************************************************
.                 local items = `e(numvars)'
 16.                 matrix omega_eta = J(`items',`items',0)
 17.                 matrix omega_eta[1,1] = (`estimate'/sqrt(12))^2
 18.                 matrix mu_eta = J(`items',1,0)
 19.                 matrix mu_eta[1,1] = `estimate'/2
 20. 
.                 foreach num of numlist 1(1)5 {
 21.                         matrix om`num'=omega_eta
 22.                         matrix om`num'[1,1] = ((`num'/5)*`estimate'/sqrt(12))^2
 23.                         matrix mu`num'=mu_eta
 24.                         matrix mu`num'[1,1]= (`num'/5)*`estimate'/2
 25.                 }
 26. 
.                 foreach num of numlist 1(1)5{
 27.                         local nd`num'=(`num'/5)*`estimate'
 28.                 }
 29.                 
.                 plausexog ltz school_zscore `base' $age (fert = twin_`n'_fam) `c', /*
>                 */ omega(omega_eta) mu(mu_eta) level(0.95) robust graph(fert) /*
>                 */ graphomega(om1 om2 om3 om4 om5) graphmu(mu1 mu2 mu3 mu4 mu5) /*
>                 */ graphdelta(`nd1' `nd2' `nd3' `nd4' `nd5')
 30.                 graph export "$Graphs/Conley/LTZ_`n'.eps", as(eps) replace
 31. 
.                 mat conbounds[`ii',3]=_b[fert]-1.96*_se[fert]
 32.                 mat conbounds[`ii',4]=_b[fert]+1.96*_se[fert]
 33. 
.                 mat conbounds[5,`ii']=`estimate'
 34.                 local ++ii
 35.                 
.                 mat colnames conbounds = LowerBound UpperBound LowerBound UpperBound
 36.                 mat rownames conbounds = TwoPlus ThreePlus FourPlus FivePlus deltas
 37.         }
.         *****************************************************************************
.         *** (10c) Write Conley et al results to file
.         *****************************************************************************
.         mat2txt, matrix(conbounds) saving("$Tables/Conley/ConleyResults.txt") /*
>                 */ format(%6.4f) replace
. }

. 
. ********************************************************************************
. *** (11) Is twins crossing desired threshold related to family characteristics?
. *** First version compares twins crossing threshold to all families, second only
. *** to other twin families (more reasonable).
. ********************************************************************************
. if `thresholdtest'==1 {
.         gen threshold2=(twin_two_fam==1   & idealnumkids==2)
.         gen threshold3=(twin_three_fam==1 & idealnumkids==3)
.         gen threshold4=(twin_four_fam==1  & idealnumkids==4)
.         gen threshold5=(twin_five_fam==1  & idealnumkids==5)    
. 
.         gen threshold=threshold2+threshold3+threshold4+threshold5
. 
.         replace threshold=threshold*100
.         sum threshold*
. 
. /*      reg threshold $twinpredict `wt', `se'
>         outreg2 $twinout using $Tables/crossing.xls, excel replace
>         test educf educfyrs_sq height bmi
>         local Ftestall=r(p)
>         
>         local t=2
>         foreach num in `gplus' {
>                 reg threshold`t' $twinpredict `wt' if `num'_plus==1, `se'
>                 outreg2 $twinout using $Tables/crossing.xls, excel append
>                 test educf educfyrs_sq height bmi
>                 local Ftest`num'=r(p)
>                 
>                 local ++t
>         }
> */
.         preserve
.         keep if twinfamily>0&twinfamily!=.
.         *collapse threshold motherage motheragesq agefirstbirth educf educfyrs_sq /*
>         **/ height bmi child_yob _cou sweight, by(id)
.         *replace child_yob=round(child_yob)
.         reg threshold $twinpredict `wt', `se'
.         outreg2 $twinout using $Tables/crossing_twins.xls, excel replace
.         test educf educfyrs_sq height bmi
.         local Ftwinall=r(p)
.         restore
. /*
>         local t=2
>         foreach num in `gplus' {
>                 reg threshold`t' $twinpredict `wt' if twinfamily>0&twinfamily!=.&`num'_plus==1, `se'
>                 outreg2 $twinout using $Tables/crossing_twins.xls, excel append
>                 test educf educfyrs_sq height bmi
>                 local Ftwin`num'=r(p)
>                 
>                 local ++t
>         }       
>         
>         dis "`Ftestall' `Ftesttwo' `Ftestthree' `Ftestfour' `Ftestfive'"
>         dis "`Ftwinall' `Ftwintwo' `Ftwinthree' `Ftwinfour' `Ftwinfive'"
> 
>         
> 
>         gen fertshortfall=fert-idealnumkids
>         reg idealnumkids $twinpredict `wt', `se'
>         outreg2 $twinout using $Tables/desiredtest.tex, tex(pretty) replace
>         reg fertshortfall $twinpredict `wt', `se'
>         outreg2 $twinout using $Tables/desiredtest.tex, tex(pretty) append
> */      
.         /*
>         gen lowinc=income=="low"
>         cap log close
>         log using "$Base/Results/Sum/Desired/DesiredSum.txt", text replace
>         foreach num of numlist -1 0 1 {
>                 sum fert idealnumkids agemay educf height bmi educ school_zscore /*
>                 */ noeduc highschool infantmortality childmortality agefirstbirth /*
>                 */ motherage lowinc if idealfam==`num'
>         }
>         cap log close
>         */
. }

. 
. ********************************************************************************
. **** (12) Twin treated versus untreated balance
. ********************************************************************************
. if `balance'==1 {
.         estimates clear
.         do "$Source/myttests.ado"
. 
. 
.         foreach opt in /*child*/ mother {
  2.                 gen Treated=1 if twinfamily>0&twinfamily!=.
  3.                 replace Treated=0 if twinfamily==0
  4.                 tab wealth, gen(_wealth)
  5. 
. 
.                 if `"`opt'"'=="mother" {
  6.                         collapse $balance _wealth* Treated, by(id)
  7.                 }
  8. 
.                 lab var fert "Total Fertilty"
  9.                 lab var idealnumkids "Desired Fertility"
 10.                 lab var agefirstbirth "Age First Birth"
 11.                 lab var educf "Mother's Education"
 12.                 lab var educp "Father's Education"
 13.                 lab var height "Mother's Height"
 14.                 lab var underweight "Pr(BMI $<$ 18.5)"
 15.                 *lab var antenatal "Number of Antenatal Checks"
.                 lab var prenate_doc "Prenatal care (doctor)"
 16.                 lab var prenate_nurse "Prenatal care (nurse)"           
 17.                 lab var prenate_none "Prenatal care (none)"
 18.                 lab var motherage "Mother's Age"
 19.                 lab var _wealth1 "Wealth Quintile 1"
 20.                 lab var _wealth2 "Wealth Quintile 2"
 21.                 lab var _wealth3 "Wealth Quintile 3"
 22.                 lab var _wealth4 "Wealth Quintile 4"
 23.                 lab var _wealth5 "Wealth Quintile 5"
 24.                 lab var childmortality "Child Mortality"
 25.                 lab var infantmortality "Infant Mortality"              
 26. 
.                 
.                 myttests $balance _wealth*, by(Treated)
 27.                 ereturn list
 28.                 *esttab using $Tables/Balance.xls, nomtitle nonumbers noobs ///
>                 *  cells("mu_1(fmt(a3)) mu_2 d(star pvalue(d_p))" " . . d_se(par)") replace
. 
.                 esttab using $Tables/Balance_`opt'.tex, nomtitle nonumbers noobs ///
>                   booktabs title(Test of Balance of Observables: Twins versus Non-twins ///
>                   \label{TWINtab:comp}) label ///
>                   cells("mu_1(fmt(a3)) mu_2 d(star pvalue(d_p))" " . . d_se(par)") replace
 29. 
.         }
. }

. 
. ********************************************************************************
. **** (14) Run for each country
. ********************************************************************************
. if `country'==1 {
.         levelsof country
.         local countries = `"`r(levels)'"'
. 
.         local n1=1
.         local estimates
.         local firststage
.         local colnames
. 
.         local base malec _yb* _age* _contracep* `add'
.         
.         foreach cc of local countries {
  2.                 preserve
  3.                 keep if country=="`cc'"
  4.                 count
  5.                 if `r(N)'== 0 {
  6.                         restore
  7.                         exit
  8.                 }
  9. 
.                 foreach n in `gplus' {
 10.                         local c  `cond'&`n'_plus==1
 11.                         foreach y of varlist $outcomes {
 12.                                 eststo: ivreg2 `y' `base' $age $S $H (fert=twin_`n'_fam) `wt' `c', /*
>                                 */ `se' savefirst savefp(f`n1')
 13. 
.                                 local estimates `estimates' est`n1' 
 14.                                 local firststage `firststage' f`n1'fert
 15.                                 local colnames `cc'
 16.                                 local ++n1
 17.                         }
 18.                 }
 19.                 restore 
 20.         }       
. 
.         estout `estimates' using "$Tables/IV/Countries.xls", replace ///
>         keep(fert malec $age $S $H) mlabels(`colnames') `estopt' `varlab'
. 
.         estout `firststage' using "$Tables/IV/Countries_f.xls", replace ///
>         keep(twin_* malec $age $S $H) mlabels(`colnames') `estopt' `varlab' 
.         
.         estimates clear 
. }

. 
. ********************************************************************************
. **** (15a) IV Using adjusted fertility and adjusted twins (survival only)
. ********************************************************************************
. if `adj_fert'==1&`ADJIV'==1 {
.         tokenize `fnames'
.         foreach condition of local conditions {
  2.                 
.                 local n1=1
  3.                 local n2=2
  4.                 local n3=3
  5.                 local estimates
  6.                 local fstage
  7. 
.                 local OUT "$Tables/IV/ADJ`1'"
  8. 
.                 foreach n in `gplus' {
  9.                         preserve
 10.                         keep `cond'&`condition'&ADJ`n'_plus==1                  
 11. 
.                         foreach y of varlist $outcomes {
 12.                                 eststo: ivreg2 `y' `base' $age $S $H (ADJfert=ADJtwin_`n'_fam) `wt',/*
>                                 */ `se' savefirst savefp(f`n3')
 13.                                 eststo: ivreg2 `y' `base' $age $H (ADJfert=ADJtwin_`n'_fam) `wt'    /*
>                                 */ if e(sample), `se' savefirst savefp(f`n2')
 14.                                 eststo: ivreg2 `y' `base' (ADJfert=ADJtwin_`n'_fam) `wt'            /*
>                                 */ if e(sample), `se' savefirst savefp(f`n1')
 15. 
.                                 local estimates `estimates'  est`n3' est`n2' est`n1' 
 16.                                 local fstage `fstage' f`n1'fert f`n2'fert f`n3'fert
 17.                                 local n1=`n1'+3
 18.                                 local n2=`n2'+3
 19.                                 local n3=`n3'+3
 20.                         }
 21.                         restore
 22.                 }
 23. 
.                 estout `estimates' using "`OUT'.xls", replace `estopt' `varlab' /*
>                 */ keep(ADJfert $age $S $H)
 24.                 estout `fstage' using "`OUT'_first.xls", replace `estopt' `varlab' /*
>                 */ keep(ADJtwin_* $age $S $H)
 25. 
.                 estimates clear
 26.                 macro shift
 27.         }
(3184304 observations deleted)
(sum of wgt is     2.7263e+11)
