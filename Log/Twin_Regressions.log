-----------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /home/damiancclarke/investigacion/Activa/Twins/Log/Twin_Regressions.log
  log type:  text
 opened on:  22 May 2014, 00:30:54

. use "$Data/DHS_twins", clear

. 
. replace bmi=. if bmi>50
(67938 real changes made, 67938 to missing)

. replace height=. if height>240
(55830 real changes made, 55830 to missing)

. replace height=. if height<80
(3636 real changes made, 3636 to missing)

. replace educ=. if age<6
(1381441 real changes made, 1381441 to missing)

. replace educ=. if educ>25
(0 real changes made)

. replace educf=. if educf>25
(2548 real changes made, 2548 to missing)

. replace birthspacing=. if birthspacing<8|birthspacing==999
(3064 real changes made, 3064 to missing)

. 
. tab _cou, gen(_country)

   country (numeric code) |      Freq.     Percent        Cum.
--------------------------+-----------------------------------
                  Albania |     12,766        0.19        0.19
                  Armenia |     30,007        0.45        0.64
               Azerbaijan |     13,565        0.20        0.84
               Bangladesh |    203,857        3.04        3.89
                    Benin |     95,989        1.43        5.32
                  Bolivia |    161,456        2.41        7.73
                   Brazil |     53,232        0.79        8.52
             Burkina-Faso |    140,498        2.10       10.62
                  Burundi |     36,406        0.54       11.17
                 Cambodia |    118,958        1.78       12.94
                 Cameroon |     86,954        1.30       14.24
 Central-African-Republic |     16,936        0.25       14.49
                     Chad |     47,187        0.70       15.20
                 Colombia |    233,372        3.48       18.68
                  Comoros |      7,913        0.12       18.80
        Congo-Brazzaville |     48,635        0.73       19.53
Congo-Democratic-Republic |     29,548        0.44       19.97
            Cote-d-Ivoire |     74,014        1.11       21.07
       Dominican-Republic |    171,678        2.56       23.64
                  Ecuador |     11,835        0.18       23.81
                    Egypt |    294,830        4.40       28.21
              El-Salvador |      6,383        0.10       28.31
                 Ethiopia |    129,595        1.94       30.24
                    Gabon |     39,987        0.60       30.84
                    Ghana |     67,676        1.01       31.85
                Guatemala |     53,451        0.80       32.65
                   Guinea |     50,058        0.75       33.40
                   Guyana |     15,852        0.24       33.63
                    Haiti |     92,827        1.39       35.02
                 Honduras |     99,356        1.48       36.50
                    India |    800,833       11.96       48.46
                Indonesia |    538,817        8.05       56.51
                   Jordan |    125,811        1.88       58.39
               Kazakhstan |     14,972        0.22       58.61
                    Kenya |    101,418        1.51       60.12
          Kyrgyz-Republic |      8,781        0.13       60.25
                  Lesotho |     29,137        0.44       60.69
                  Liberia |     39,387        0.59       61.28
               Madagascar |    109,847        1.64       62.92
                   Malawi |    164,935        2.46       65.38
                 Maldives |     20,136        0.30       65.68
                     Mali |    150,720        2.25       67.93
                   Mexico |     22,676        0.34       68.27
                  Moldova |      9,903        0.15       68.42
                  Morocco |     80,669        1.20       69.62
               Mozambique |    101,179        1.51       71.13
                  Namibia |     47,840        0.71       71.85
                    Nepal |    111,120        1.66       73.51
                Nicaragua |     70,977        1.06       74.57
                    Niger |     87,107        1.30       75.87
                  Nigeria |    179,246        2.68       78.54
                 Pakistan |     66,418        0.99       79.53
                 Paraguay |     15,346        0.23       79.76
                     Peru |    189,917        2.84       82.60
              Philippines |    127,450        1.90       84.50
                   Rwanda |    109,753        1.64       86.14
    Sao-Tome-and-Principe |      7,620        0.11       86.25
                  Senegal |    145,057        2.17       88.42
             Sierra-Leone |     21,136        0.32       88.74
             South-Africa |     22,934        0.34       89.08
                Sri-Lanka |     17,705        0.26       89.34
                    Sudan |     25,805        0.39       89.73
                Swaziland |     11,410        0.17       89.90
                 Tanzania |    164,843        2.46       92.36
                 Thailand |     17,803        0.27       92.63
                     Togo |     37,051        0.55       93.18
      Trinidad-and-Tobago |      7,837        0.12       93.30
                  Tunisia |     16,463        0.25       93.54
                   Turkey |     59,996        0.90       94.44
                   Uganda |    120,935        1.81       96.24
                  Ukraine |      8,007        0.12       96.36
               Uzbekistan |      9,650        0.14       96.51
                  Vietnam |     29,900        0.45       96.95
                    Yemen |     29,803        0.44       97.40
                   Zambia |     92,092        1.38       98.77
                 Zimbabwe |     82,134        1.23      100.00
--------------------------+-----------------------------------
                    Total |  6,697,397      100.00

. tab year_birth, gen(_yb)

   Mother's |
    year of |
      birth |      Freq.     Percent        Cum.
------------+-----------------------------------
       1935 |         28        0.00        0.00
       1936 |        642        0.01        0.01
       1937 |      5,153        0.08        0.09
       1938 |      9,648        0.14        0.23
       1939 |     11,907        0.18        0.41
       1940 |     17,946        0.27        0.68
       1941 |     17,568        0.26        0.94
       1942 |     29,411        0.44        1.38
       1943 |     37,975        0.57        1.95
       1944 |     44,000        0.66        2.60
       1945 |     54,788        0.82        3.42
       1946 |     62,891        0.94        4.36
       1947 |     72,415        1.08        5.44
       1948 |     82,877        1.24        6.68
       1949 |     92,797        1.39        8.06
       1950 |    117,391        1.75        9.82
       1951 |    111,386        1.66       11.48
       1952 |    135,822        2.03       13.51
       1953 |    135,386        2.02       15.53
       1954 |    153,659        2.29       17.82
       1955 |    162,991        2.43       20.26
       1956 |    178,668        2.67       22.92
       1957 |    195,500        2.92       25.84
       1958 |    212,495        3.17       29.02
       1959 |    215,348        3.22       32.23
       1960 |    253,270        3.78       36.01
       1961 |    218,691        3.27       39.28
       1962 |    257,926        3.85       43.13
       1963 |    250,867        3.75       46.88
       1964 |    246,665        3.68       50.56
       1965 |    247,614        3.70       54.26
       1966 |    230,797        3.45       57.70
       1967 |    213,281        3.18       60.89
       1968 |    231,401        3.46       64.34
       1969 |    203,061        3.03       67.37
       1970 |    224,706        3.36       70.73
       1971 |    182,932        2.73       73.46
       1972 |    191,406        2.86       76.32
       1973 |    174,972        2.61       78.93
       1974 |    156,908        2.34       81.27
       1975 |    157,900        2.36       83.63
       1976 |    143,151        2.14       85.77
       1977 |    124,695        1.86       87.63
       1978 |    123,093        1.84       89.47
       1979 |    105,509        1.58       91.04
       1980 |    110,410        1.65       92.69
       1981 |     84,190        1.26       93.95
       1982 |     81,306        1.21       95.16
       1983 |     69,486        1.04       96.20
       1984 |     56,404        0.84       97.04
       1985 |     49,259        0.74       97.78
       1986 |     40,873        0.61       98.39
       1987 |     29,234        0.44       98.82
       1988 |     25,825        0.39       99.21
       1989 |     16,490        0.25       99.46
       1990 |     14,157        0.21       99.67
       1991 |      9,177        0.14       99.81
       1992 |      6,513        0.10       99.90
       1993 |      3,531        0.05       99.96
       1994 |      1,821        0.03       99.98
       1995 |        866        0.01      100.00
       1996 |        287        0.00      100.00
       1997 |         31        0.00      100.00
------------+-----------------------------------
      Total |  6,697,397      100.00

. tab age, gen(_age)

Child's age |
   in years |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |    316,192        4.72        4.72
          1 |    302,729        4.52        9.24
          2 |    296,976        4.43       13.68
          3 |    300,959        4.49       18.17
          4 |    298,118        4.45       22.62
          5 |    291,951        4.36       26.98
          6 |    319,424        4.77       31.75
          7 |    303,176        4.53       36.28
          8 |    304,502        4.55       40.82
          9 |    278,274        4.15       44.98
         10 |    303,572        4.53       49.51
         11 |    262,120        3.91       53.42
         12 |    285,399        4.26       57.68
         13 |    260,939        3.90       61.58
         14 |    250,923        3.75       65.33
         15 |    239,339        3.57       68.90
         16 |    227,965        3.40       72.31
         17 |    209,195        3.12       75.43
         18 |    210,847        3.15       78.58
         19 |    174,779        2.61       81.19
         20 |    184,612        2.76       83.94
         21 |    147,046        2.20       86.14
         22 |    146,634        2.19       88.33
         23 |    125,759        1.88       90.21
         24 |    112,178        1.67       91.88
         25 |    106,656        1.59       93.47
         26 |     84,864        1.27       94.74
         27 |     70,533        1.05       95.79
         28 |     61,969        0.93       96.72
         29 |     46,304        0.69       97.41
         30 |     44,000        0.66       98.07
         31 |     29,183        0.44       98.50
         32 |     24,366        0.36       98.87
         33 |     18,578        0.28       99.14
         34 |     14,152        0.21       99.36
         35 |     11,153        0.17       99.52
         36 |      8,560        0.13       99.65
         37 |      6,775        0.10       99.75
         38 |      5,266        0.08       99.83
         39 |      3,894        0.06       99.89
         40 |      2,751        0.04       99.93
         41 |      1,919        0.03       99.96
         42 |      1,196        0.02       99.98
         43 |        826        0.01       99.99
         44 |        441        0.01       99.99
         45 |        226        0.00      100.00
         46 |        105        0.00      100.00
         47 |         43        0.00      100.00
         48 |         15        0.00      100.00
         49 |          5        0.00      100.00
         50 |          7        0.00      100.00
         51 |          1        0.00      100.00
         52 |          1        0.00      100.00
------------+-----------------------------------
      Total |  6,697,397      100.00

. tab contracep_intent, gen(_contracep)

contraceptive use and intention |      Freq.     Percent        Cum.
--------------------------------+-----------------------------------
            using modern method |  2,202,376       33.17       33.17
       using traditional method |    501,290        7.55       40.72
non-user - intends to use later |  1,502,563       22.63       63.35
         does not intend to use |  2,433,037       36.65      100.00
                  never had sex |          1        0.00      100.00
--------------------------------+-----------------------------------
                          Total |  6,639,267      100.00

. tab bord, gen(_bord)

    Child's |
birth order |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |  1,848,161       27.60       27.60
          2 |  1,486,566       22.20       49.79
          3 |  1,095,137       16.35       66.14
          4 |    772,132       11.53       77.67
          5 |    536,110        8.00       85.68
          6 |    367,741        5.49       91.17
          7 |    244,693        3.65       94.82
          8 |    156,114        2.33       97.15
          9 |     93,046        1.39       98.54
         10 |     51,971        0.78       99.32
         11 |     25,849        0.39       99.70
         12 |     11,959        0.18       99.88
         13 |      4,654        0.07       99.95
         14 |      1,922        0.03       99.98
         15 |        798        0.01       99.99
         16 |        331        0.00      100.00
         17 |        114        0.00      100.00
         18 |         55        0.00      100.00
         19 |         24        0.00      100.00
         20 |         11        0.00      100.00
         21 |          3        0.00      100.00
         22 |          1        0.00      100.00
         23 |          1        0.00      100.00
         24 |          1        0.00      100.00
         25 |          1        0.00      100.00
         26 |          1        0.00      100.00
         27 |          1        0.00      100.00
------------+-----------------------------------
      Total |  6,697,397      100.00

. local base malec _country* _yb* _age* _contracep* `add'

. drop if twinfamily>2
(6723 observations deleted)

. 
. gen cat="Low Inc, Singleton" if twind==0 & inc_status=="L"
(2797625 missing values generated)

. replace cat="Low Inc, Twin" if twind==1 & inc_status=="L"
(96511 real changes made)

. replace cat="Mid Inc, Single" if twind==0 & inc_status!="L"
(2646406 real changes made)

. replace cat="Mid Inc, Twin" if twind==1 & inc_status!="L"
(54708 real changes made)

. encode cat, gen(catnum)

. 
. save "$Data/DHS_twins_mortality", replace
file ~/investigacion/Activa/Twins/Data/DHS_twins_mortality.dta saved

. 
. keep if _merge==3
(2889332 observations deleted)

. 
. *******************************************************************************
. *** (2) Summary Stats
. *******************************************************************************
. if `sumstats'==1 {
.         
.         if c(os)=="Windows" local format png
.         else if c(os)=="Unix" local format eps
.         ***************************************************************************
.         *** (2a) Tables
.         ***************************************************************************
.         * (A) By twins
.         local opts cells("count mean sd min max")
.         local sep &             
.         local numkids "Number of Children (Education)"
.         local numkidsF "Number of Children (Ever Born)"
.         local nummothers "Number of Mothers"
.         local numcountry "Number of Countries"
. 
.         foreach num of numlist 1(1)4 {
  2.                 cap drop count 
  3.                 gen count = 1 `cond'
  4.                 replace count=. if catnum!=`num'
  5.                 foreach var of local sumstatsC {
  6.                         replace count=. if `var'==.
  7.                 }
  8.                 count if count==1
  9.                 local kk = "`: display %9.0fc r(N)'"
 10. 
.                 local numkids "`numkids' `sep'" "`kk'"
 11. 
.                 bys id: gen n=_n
 12.                 count if count==1&n==1
 13.                 local mm = "`: display %9.0fc r(N)'"
 14.                 local nummothers "`nummothers' `sep'" "`mm'"
 15.                 drop n
 16. 
.                 bys _cou count: gen n=_n
 17.                 count if count==1&n==1
 18.                 if `num'==1|`num'==3 {
 19.                         local numcountry "`numcountry' `sep' `r(N)'`sep'`r(N)' "
 20.                 }
 21.                 drop n
 22.         }
. 
.         count `cond'
.         local kidcount = "`: display %9.0fc r(N)'"
.         sum twind
.         scalar at = "`: display %7.4f r(mean)'"
.         scalar as = "`: display %7.4f r(sd)'"   
.         sum twind if inc_status=="L"
.         scalar lt = "`: display %7.4f r(mean)'"
.         scalar ls = "`: display %7.4f r(sd)'"
.         sum twind if inc_status!="L"
.         scalar mt = "`: display %7.4f r(mean)'"
.         scalar ms = "`: display %7.4f r(sd)'"
. 
.         sum bord if twind==1
.         scalar abm = "`: display %7.3f r(mean)'"
.         scalar abs = "`: display %7.3f r(sd)'"
.         sum bord if twind==1 & inc_status=="L"
.         scalar lbm = "`: display %7.3f r(mean)'"
.         scalar lbs = "`: display %7.3f r(sd)'"
.         sum bord if twind==1 &  inc_status!="L"
.         scalar mbm = "`: display %7.3f r(mean)'"
.         scalar mbs = "`: display %7.3f r(sd)'"
. 
. 
.         preserve
.         gen exceedfam=idealfam==1
.         keep `cond'
.         collapse $sumstatsM, by(id cat)
.         count
.         local mothercount = "`: display %9.0fc r(N)'"
.         
.         estpost tabstat $sumstatsM, by(cat) statistics(mean sd) listwise ///
>          columns(statistics)
.         esttab using "$Tables/Summary/`Sum'.txt", replace main(mean) aux(sd) /*
>         */ nostar unstack noobs nonote nomtitle nonumber
.         restore
. 
.         estpost tabstat $sumstatsC, by(cat) statistics(mean sd) listwise ///
>          columns(statistics)
.         esttab using "$Tables/Summary/`SumC'.txt", replace main(mean) aux(sd) /*
>         */ nostar unstack noobs nonote nomtitle nonumber
. 
.         preserve
.         use "$Data/DHS_twins_mortality.dta", clear
.         estpost tabstat $sumstatsF, by(cat) statistics(mean sd) listwise ///
>          columns(statistics)
.         esttab using "$Tables/Summary/`SumF'.txt", replace main(mean) aux(sd) /*
>         */ nostar unstack noobs nonote nomtitle nonumber
. 
.         foreach num of numlist 1(1)4 {
  2.                 cap drop count
  3.                 gen count = 1 `cond'
  4.                 replace count=. if catnum!=`num'
  5.                 foreach var of local sumstatsF {
  6.                         replace count=. if `var'==.
  7.                 }
  8.                 count if count==1
  9.                 local kk = "`: display %9.0fc r(N)'"
 10. 
.                 local numkidsF "`numkidsF' `sep'" "`kk'"
 11.         }
.         count `cond'
.         local kidcountF = "`: display %9.0fc r(N)'"
.         
.         clear
.         restore
. 
. 
.         file open resfile using "$Tables/Summary/Count.txt", write replace
.         file write resfile "`numcountry' & 67 \\" _n
.         file write resfile "`nummothers' & `mothercount' \\" _n
.         file write resfile "`numkids' & `kidcount' \\" _n
.         file write resfile "`numkidsF' & `kidcountF' \\" _n
.         
.         file write resfile "Fraction Twin & \multicolumn{2}{c}{ `=scalar(lt)'" ///
>           "}& \multicolumn{2}{c}{ `=scalar(mt)' } & `=scalar(at)'\\" _n
.         file write resfile "& \multicolumn{2}{c}{(`=scalar(ls)')" ///
>           "}& \multicolumn{2}{c}{(`=scalar(ms)')} & (`=scalar(as)')\\" _n
.         file write resfile "Birth Order Twin & \multicolumn{2}{c}{ `=scalar(lbm)'" ///
>           "}& \multicolumn{2}{c}{ `=scalar(mbm)' }& `=scalar(abm)'\\" _n
.         file write resfile "& \multicolumn{2}{c}{(`=scalar(lbs)')" ///
>           "}& \multicolumn{2}{c}{(`=scalar(mbs)')}& (`=scalar(abs)')\\" _n
.         file write resfile "`mothercount'"
.         file close resfile
. 
.         preserve
.         decode _cou, gen(WBcountry)
.         gen colvar=inc_status=="L"
.         collapse colvar, by(WBcountry _year)
.         gen income="Low" if colvar==1
.         replace income="Middle" if colvar==0
.         drop colvar
.         order WBcountry income _year
.         sort WBc _year
.         outsheet using "$Tables/Summary/Countries.csv", delimit(;) nonames replace
.         restore
.         
.    ***************************************************************************
.         *** (2b) Graphical
.         *** graph 1: total births by family type (twins vs non-twins)
.         *** graph 2: total births by family type for families who exceed desired
.         *** graph 3: Proportion of twins by birth order
.         *** graph 4: Desired family size
.         *** graphs 5-7: Desired family size by mother's characteristics
.         ***************************************************************************
.         if `graphs'==1 {
. 
.         twoway kdensity fert if twinfamily>0&twinfamily!=., lpattern(dash) bw(2) || ///
>           kdensity fert if twinfamily==0, bw(2) scheme(s1color) ytitle("Density") ///
>           legend(label(1 "Twin Family") label(2 "Singleton Family")) ///
>           title("Total births by Family Type") xtitle("total children ever born") 
.         graph save "$Graphs/`famsize'", replace
.         graph export "$Graphs/`famsize'.`format'", as(`format') replace
. 
. 
.         twoway kdensity fert if twinfamily>0&twinfamily!=. & fert > idealnumkids, ///
>           bw(2) lpattern(dash) || kdensity fert if twinfamily==0 & ///
>           fert > idealnumkids & twin_bord >= idealnumkids, bw(2) scheme(s1color) ///
>           legend(label(1 "Twin Family") label(2 "Singleton Family")) ///
>           ytitle("Density") title("Total births by Family Type") ///
>           xtitle("total children ever born") ///
>           subtitle("For families who exceed desired family size")
.         graph save "$Graphs/`famsize_e'", replace
.         graph export "$Graphs/`famsize_e'.`format'", as(`format') replace
. 
.         
.         local note1 "Single births are 1-frac(twins). "
.         local note2 "Total fraction of twins is represented by the solid line."
.         local gnote "`note1' `note2'"
.         sum twind
.         local twinave=r(mean)   
.         preserve
.         collapse twind [pw=sweight], by(bord)
.         gen twinave=`twinave'   
.         line twind bord if bord<11, lpattern(dash) title("Twinning by birth order") ///
>           ytitle("Fraction twins") xtitle("Birth Order") yline(0.0189) ///
>           note(`gnote') scheme(s1color)
.         graph save "$Graphs/`twinbord'", replace
.         graph export "$Graphs/`twinbord'.`format'", as(`format') replace
. 
.         twoway bar twind bord if bord<11 || ///
>         line twinave bord if bord<11, title("Twinning by birth order") ///
>           ytitle("Fraction twins") xtitle("Birth Order")  ///
>           note(`gnote') scheme(s1color)
.         graph save "$Graphs/`twinbord'_hist", replace
.         graph export "$Graphs/`twinbord'_hist.`format'", as(`format') replace
.         restore
. 
.         
.         local n1 "Total sample of families is 1,586,899.  2.61% of families report "
.         local n2 "'up to god', and 4.39% provide"
.         local n3 "a non-numeric response. These are omitted here."      
.         preserve
.         collapse idealnumkids [pw=sweight], by(id)
.         gen idealnum=idealnumkids if idealnumkids<=9
.         replace idealnum=9 if idealnumkids>10 & idealnumkids<=30
.         lab def n 0 "0" 1 "1" 2 "2" 3 "3" 4 "4" 5 "5" 6 "6" 7 "7" 8 "8" 9 "9+"
.         lab val idealnum n
.         hist idealnum,  note("`n1' `n2'" "`n3'") frac scheme(s1color) ///
>           xtitle("Ideal Family Size") title("Self Reported Ideal Family Size") ///
>           xla(0/9, valuelabel) bcolor(navy)
.         graph save "$Graphs/`idealfam'", replace
.         graph export "$Graphs/`idealfam'.`format'", as(`format') replace
.         restore
. 
.         foreach c of varlist agemay agefirstbirth fert {
  2.                 preserve
  3.                 if `"`c'"'=="agemay" {
  4.                         local cond agemay>=15&agemay<=45
  5.                         local char "Age of mother at time of question"
  6.                 }
  7.                 else if `"`c'"'=="agefirstbirth" {
  8.                         local cond agefirstbirth>=15&agefirstbirth<45
  9.                         local char "Age of Mother at First birth"
 10.                 }
 11.                 else if `"`c'"'=="fert"{
 12.                         local cond fert<=10
 13.                         local char "Total births at time of question"
 14.                 }
 15.                 bys id: gen num=_n
 16.                 keep if num==1
 17.                 collapse idealnumkids [pw=sweight], by(`c')
 18.                 if `"`c'"'=="fert" {
 19.                         sort idealnumkids
 20.                         gen vert=fert
 21.                         twoway line idealnumkids `c' if `cond' || line vert `c' if `cond', ///
>                         lpattern(dash) lcolor(black) title("Ideal Family Size by `char'")  ///
>                         scheme(s1color) ytitle("Average Desired Family Size") ///
>                         legend(label(1 "Ideal Number of Kids") label(2 "45 degrees")) ///         
>                         xtitle("`char'")
 22.                 }               
 23.                 else {  
 24.                         line idealnumkids `c' if `cond', title("Ideal Family Size by `char'") ///
>                         scheme(s1color) xtitle("`char'") ytitle("Average Desired Family Size")
 25.                 }
 26.            graph save "$Graphs/idealfam_`c'", replace
 27.            graph export "$Graphs/idealfam_`c'.`format'", as(`format') replace
 28.                 restore
 29.         }
. 
.         local ii=1
.         foreach condition in income=="low" income=="mid" income=="low"|income=="mid" {
  2.                 if `ii'==1 local name "Low"
  3.                 else if `ii'==2 local name "Middle"
  4.                 else if `ii'==3 local name "All"
  5.                 preserve
  6.                 gen attend1=1 if attendance==1|attendance==2
  7.                 replace attend1=0 if attendance==0
  8.                 gen attend2=1 if attendance==2
  9.                 replace attend2=0 if attendance==1|attendance==0
 10.                 keep `cond'&`condition'
 11.                 collapse attend1 attend2 educ, by(age)
 12.                 drop if age>19
 13.                 gen theoretical=age-5
 14.                 twoway line educ age if age>5 || line theoretical age if age>5, /*
>                 */ title("Education by Age Group") subtitle("`name' Income") /*
>                 */ xtitle("Child's age in years") ytitle("Education") scheme(s1color)
 15.                 graph export "$Graphs/EducAge`name'.eps", as(eps) replace
 16.                 twoway bar attend1 age if age>5, scheme(s1color) bcolor(navy) /*
>                 */ title("Attendance by Age Group") subtitle("`name' Income") /*
>                 */ xtitle("Child's age in years") ytitle("Proportion Attending") /*
>                 */ note("Attendance refers to children who report always or sometimes attending")
 17.                 graph export "$Graphs/Attend1`name'.eps", as(eps) replace
 18.                 twoway bar attend2 age if age>5, scheme(s1color) bcolor(navy) /*
>                 */ title("Attendance by Age Group") subtitle("`name' Income") /*
>                 */ xtitle("Child's age in years") ytitle("Proportion Always Attending") /*
>                 */ note("Attendance refers to children who report always attending")
 19.                 graph export "$Graphs/Attend2`name'.eps", as(eps) replace
 20.                 restore
 21.                 local ++ii
 22.         }       
.         }
. }

. 
. if `sumstats2'==1 {
. 
.         *****************************************************************************
.         *** (2d) Descriptive of desired
.         *****************************************************************************
.         estpost tab idealfam `cond'
.         esttab using "$Tables/Summary/Ideal.xls", cells("b pct") replace
.         estpost tab idealfam `cond'&twinfam==0
.         esttab using "$Tables/Summary/Ideal.xls", cells("b pct") append
.         estpost tab idealfam `cond'&twinfam>=1
.         esttab using "$Tables/Summary/Ideal.xls", cells("b pct") append
.         foreach num in `gplus' {
  2.                 estpost tab idealnumkids `cond'&`num'_plus==1&twin_`num'_fam==0
  3.                 esttab using "$Tables/Summary/Ideal.xls", cells("b pct") append
  4. 
.                 estpost tab idealnumkids `cond'&`num'_plus==1&twin_`num'_fam==1
  5.                 esttab using "$Tables/Summary/Ideal.xls", cells("b pct") append
  6.         }
. 
.         local t=2       
.         foreach n in `gplus' {
  2.                 gen threshold`n'=(twin_`n'_fam==1 & idealnumkids==`t')
  3.                 replace threshold`n'=. if twin_`n'_fam==0
  4.                 local ++t
  5.         }
.         gen threshold2_5=1 if thresholdtwo==1|thresholdthree==1|thresholdfour==1|/*
>         */thresholdfive==1
.         replace threshold2_5=0 if thresholdtwo==0|thresholdthree==0|/*
>         */thresholdfour==0|thresholdfive==0
. 
.         preserve
. 
.         gen inclevel="L" if inc_status=="L"
.         replace inclevel="M" if inc_status=="LM"|inc_status=="UM"
.         keep threshold* id inclevel
.         collapse threshold*, by(id inclevel)
.         
.         estpost tabstat threshold2_5 thresholdt* thresholdfour thresholdfive, /*
>         */ by(inclevel) statistics(mean sd count) columns(statistics)
.         mat counts = e(count)
. 
.         esttab using "$Tables/Summary/Threshold.txt", replace main(mean) aux(sd) /*
>         */ nostar unstack nonote nomtitle nonumber
.         esttab matrix(counts) using "$Tables/Summary/Threshold.txt", append
.         
.         restore
.         
.    *****************************************************************************
.         *** (2e) Descriptive of maternal health
.         *****************************************************************************   
.         if `graphs2'==1 {
.                 preserve
.                 collapse height weightk bmi [pw=sweight] `cond', by(id)
.                 hist weightk if weightk>30&weightk<200, frac scheme(s1color) ///
>                   xtitle("Weight in kg") title("Mother's Weight at time of Survey")
.                 graph export "$Graphs/MotherWeight.eps", as(eps) replace
.                 hist height, frac scheme(s1color) ///
>                   xtitle("Height in cm") title("Mother's Height at time of Survey")
.                 graph export "$Graphs/MotherHeight.eps", as(eps) replace
.                 hist bmi, frac scheme(s1color) ///
>                   xtitle("BMI") title("Mother's BMI at time of Survey") ///
>                   note("BMI is experessed as weight in kg squared/height in km")
.                 graph export "$Graphs/MotherBMI.eps", as(eps) replace
.                 restore
.         }       
. 
.         gen lowheight=height<157.48
.         replace lowheight=. if height==.
.         gen lowweight=bmi<18.5
.         replace lowweight=. if bmi==.
.         
.         estpost tab lowheight `cond'
.         esttab using "$Tables/Summary/Health.xls", cells("b pct") replace
.         estpost tab lowweight `cond'
.         esttab using "$Tables/Summary/Health.xls", cells("b pct") append
. }

. 
. if `trends'==1 {
.         foreach inc in all low mid {
  2.                 if "`inc'"=="all" local cex
  3.                 else if "`inc'"=="low"|"`inc'"=="mid" local cex &income=="`inc'"        
  4.                 **************************************************************************
.                 *** (2f) Trends in education/fertility
.                 **************************************************************************
.                 preserve
  5.                 keep `cond'&age>15`cex'
  6.                 collapse educ `w', by(child_yob)
  7.                 sort child_yob
  8.                 twoway line educ child_yob, /* 
>                 */ title("Average years of Education by Birth Cohort") scheme(s1color) /*
>                 */ xtitle("DHS Birth Cohort") ytitle("Years of Education")
  9.                 graph export "$Graphs/eductrend_kids_`inc'.eps", as(eps) replace
 10.                 restore
 11. 
.                 preserve
 12.                 keep `cond'`cex'
 13.                 bys id: gen keepcrit=_n
 14.                 keep if keepcrit==1
 15.                 collapse educf `w', by(year_birth)
 16.                 sort year_birth
 17.                 twoway line educf year_birth if year_birth>=1940&year_birth<1997, /* 
>                 */ title("Average years of Education by Birth Cohort") scheme(s1color) /*
>                 */ xtitle("DHS Birth Cohort") ytitle("Years of Education")
 18.                 graph export "$Graphs/eductrend_`inc'.eps", as(eps) replace
 19.                 restore
 20. 
.                 
.                 foreach aa of numlist 0 35 {
 21.                         if `aa'==0 local title "Fertility (All women)"
 22.                         if `aa'==35 local title "Fertility (Women aged 35+)"
 23.                         preserve
 24.                         keep `cond'&agemay>`aa'`cex'
 25.                         bys id: gen keepcrit=_n
 26.                         keep if keepcrit==1
 27.                         collapse fert idealnumkids `w', by(year_birth)
 28.                         sort year_birth
 29.                         twoway line fert year_bi, lpattern(dash) || line idealnumkids year_birth, /*
>                         */ scheme(s1color) legend(label(1 "Fertility per Woman") /*
>                         */ label(2 "Desired Fertility")) title(`title') ytitle("Births per Woman")
 30.                         graph export "$Graphs/ferttrend_`aa'_`inc'.eps", as(eps) replace
 31.                         restore
 32.                 }
 33.         }
. }

. 
. 
. ********************************************************************************
. **** (3) Twin predict regressions
. ********************************************************************************
. if `twin'== 1 {
.         local out "$Tables/Twin/`TwinPred'.xls"
.         fvset base 1 _cou
.         fvset base 1 child_yob
.         
.         eststo: reg twind100 $twinpredict `wt', `se'
. 
.         foreach inc in =="L" !="L"  {
  2.                 eststo: reg twind100 $twinpredict `wt' if inc_status`inc', `se'
  3.         }
.         
.         local cond1 child_yob>1989
.         local cond2 child_yob<=1989
. 
.         foreach condtn in cond1 cond2 {
  2.                 eststo: reg twind100 $twinpredict `wt' if ``condtn'', `se'
  3.         }
. 
.         eststo: reg twind100 $twinpredict /*antenatal*/ prenate* `wt', `se'
. 
.         estout est1 est2 est3 est4 est5 est6 using `out', keep($twinout /*ante**/ pre*) ///
>           title("Probability of Giving Birth to Twins (DHS)") ///
>           varlabels(motherage "Age" motheragesq "Age Squared"  agefirstbirth ///
>           "Age First Birth" educf "Education (years)" educfyrs_sq  ///
>           "Education squared" height "Height" bmi "BMI") `estopt' replace ///
>           note("Notes: All specifications include a full set of year of birth and" ///
>           " country dummies, and are estimated as linear probability models. " ///
>           "Twin is multiplied by 100 for presentation.  Height is measured in cm" ///
>           " and BMI is weight in kg divided by height in metres squared. l" ///
>           " Prenatal care variables are only recoreded for recent births.  As" ///
>           " such, column (6) is estimated only for that subset of births where " ///
>           "these observations are made.")
. 
.         estimates clear
.         
.         *****************************************************************************
.    **** (3a) Non-linear health
.    *****************************************************************************
.         local out "$Tables/Twin/`TwinPred'_alt.xls"
.         fvset base 1 _cou
.         fvset base 1 child_yob
. 
.         eststo: reg twind100 $twinpredict bmi_sq height_sq `wt', `se'
.         foreach inc in =="L" !="L"  {
  2.                 eststo: reg twind100 $twinpredict bmi_sq height_sq `wt' if /*
>                 */ inc_status`inc', `se'
  3.         }
.         estout est1 est2 est3 using `out', ///
>           keep($twinout bmi_sq height_sq) ///
>           title("Probability of Giving Birth to Twins (DHS)") ///
>           varlabels(motherage "Age" motheragesq "Age Squared"  agefirstbirth ///
>           "Age First Birth" educf "Education (years)" educfyrs_sq  ///
>           "Education squared" height "Height" bmi "BMI" bmi_sq "BMI squared" ///
>           height_sq "height squared") `estopt' replace
. 
.         estimates clear
.         
.         *****************************************************************************
.    **** (3b) Z-scores
.    *****************************************************************************
.         local out "$Tables/Twin/`TwinPred'_Z.xls"
.         fvset base 1 _cou
.         fvset base 1 child_yob
.         foreach var of varlist educf height bmi {
  2.                 egen `var'_sd=sd(`var')
  3.                 egen `var'_mean=mean(`var')     
  4.                 gen Z`var'=(`var'-`var'_mean)/`var'_sd
  5.                 drop `var'_sd `var'_mean
  6.         }
. 
.         eststo: reg twind motherage motheragesq agefirstbirth Zeducf Zbmi Zheight /*
>         */ i.child_yob i.bord `wt', `se'
. 
.         drop Zbmi Zheight Zeducf
.         foreach var of varlist educf height bmi {
  2.                 bys _cou: egen `var'_sd=sd(`var')
  3.                 bys _cou: egen `var'_mean=mean(`var')   
  4.                 gen Z`var'=(`var'-`var'_mean)/`var'_sd
  5.                 drop `var'_sd `var'_mean
  6.         }
.         eststo: reg twind motherage motheragesq agefirstbirth Zeducf Zbmi Zheight /*
>         */ i.child_yob i.bord `wt', `se'
.         
.         estout est1 est2 using `out', keep(motherage motheragesq agefirstbirth ///
>           Zeducf Zbmi Zheight) title("Probability of Giving Birth to Twins (DHS)") ///
>           varlabels(motherage "Age" motheragesq "Age Squared"  agefirstbirth ///
>           "Age First Birth" Zeducf "Education (Z-score)" educfyrs_sq  ///
>           "Education squared" height "Height" bmi "BMI" bmi_sq "BMI squared" ///
>           height_sq "height squared") `estopt' replace
.         estimates clear
. }

. 
. ********************************************************************************
. **** (4) Simple OLS of Q-Q (can then apply Altonji)
. ********************************************************************************
. if `ols'==1 {
.         local out "$Tables/OLS/QQ_ols.xls"
. 
.         gen desiredbirth=bord<=idealnumkids
.         gen fertXdesired=fert*desiredbirth
.         local count = 0
.         foreach y of varlist $outcomes {
  2.                 qui reg `y' fert `base' $age  $S $H [pw=sweight], `se'
  3.                 reg `y' fert `base' $age [pw=sweight] if e(sample)==1, `se'
  4.                 if `count'==0 outreg2 fert $age using `out', replace
  5.                 else if `count'!=0 outreg2 fert $age using `out', append
  6.                 reg `y' fert `base' $age $S [pw=sweight] if e(sample)==1, `se'
  7.                 outreg2 fert $age $S using `out', append
  8.                 reg `y' fert `base' $age $S $H [pw=sweight], `se'
  9.                 outreg2 fert $age $S $H using `out', excel append
 10.                 reg `y' fert fertXdesired `base' $age $S $H [pw=sweight], `se'
 11.                 outreg2 fert* $age $S $H using `out', excel append
 12. 
.                 local ++count
 13.         }
.         
.         foreach inc in low mid {
  2.                 foreach y of varlist $outcomes {
  3.                         qui reg `y' fert `base' $age $S $H if income==`"`inc'"', `se'
  4.                         reg `y' fert `base' $age `wt' if income==`"`inc'"'&e(sample), `se'
  5.                         outreg2 fert $age using `out', excel append
  6. 
.                         reg `y' fert `base' $age $S `wt' if income==`"`inc'"'&e(sample), `se'
  7.                         outreg2 fert $age $S using `out', excel append
  8. 
.                         reg `y' fert `base' $age $S $H `wt' if income==`"`inc'"', `se'
  9.                         outreg2 fert $age $S $H using `out', excel append
 10. 
.                         reg `y' fert fertXdesired `base' $age $S $H `wt' /*
>                         */ if income==`"`inc'"', `se'
 11.                         outreg2 fert* $age $S $H using `out', excel append
 12.                 }
 13.         }
. }

. 
. ********************************************************************************
. **** (5) IV (using twin at order n), subsequent inclusion of twin predictors
. ********************************************************************************
. if `IV'==1 {
.         tokenize `fnames'
.         foreach condition of local conditions {
  2.                 
.                 local n1=1
  3.                 local n2=2
  4.                 local n3=3
  5.                 local estimates
  6.                 local fstage
  7. 
.                 local OUT "$Tables/IV/`1'"
  8. 
.                 foreach n in `gplus' {
  9.                         preserve
 10.                         keep `cond'&`condition'&`n'_plus==1                     
 11. 
.                         foreach y of varlist $outcomes {
 12.                                 eststo: ivreg2 `y' `base' $age $S $H (fert=twin_`n'_fam) `wt',    /*
>                                 */ `se' savefirst savefp(f`n3')
 13.                                 eststo: ivreg2 `y' `base' $age $H (fert=twin_`n'_fam) `wt'        /*
>                                 */ if e(sample), `se' savefirst savefp(f`n2')
 14.                                 eststo: ivreg2 `y' `base' (fert=twin_`n'_fam) `wt' if e(sample),  /*
>                                 */ `se' savefirst savefp(f`n1')
 15. 
.                                 local estimates `estimates'  est`n3' est`n2' est`n1' 
 16.                                 local fstage `fstage' f`n1'fert f`n2'fert f`n3'fert
 17.                                 local n1=`n1'+3
 18.                                 local n2=`n2'+3
 19.                                 local n3=`n3'+3
 20.                         }
 21.                         restore
 22.                 }
 23. 
.                 estout `estimates' using "`OUT'.xls", replace `estopt' `varlab' /*
>                 */ keep(fert $age $S $H)
 24.                 estout `fstage' using "`OUT'_first.xls", replace `estopt' `varlab' /*
>                 */ keep(twin_* $age $S $H)
 25. 
.                 estimates clear
 26.                 macro shift
 27.         }
(3234643 observations deleted)
(sum of wgt is     2.4786e+11)
Warning - collinearities detected
Vars dropped:       _country20 _country22 _country32 _country43 _country44
                    _country52 _country53 _country55 _country60 _country61
                    _country62 _country65 _country67 _country68 _country71
                    _country73 _country74 _country76 _yb1 _yb2 _yb3 _yb4 _yb5
                    _yb6 _yb7 _yb57 _yb58 _yb59 _yb60 _yb61 _yb62 _yb63 _age1
                    _age2 _age3 _age4 _age5 _age6 _age19 _age20 _age21 _age22
                    _age23 _age24 _age25 _age26 _age27 _age28 _age29 _age30
                    _age31 _age32 _age33 _age34 _age35 _age36 _age37 _age38
                    _age39 _age40 _age41 _age42 _age43 _age44 _age45 _age46
                    _age47 _age48 _age49 _age50 _age51 _age52 _age53 _contracep4
                    _contracep5

Stored estimation results
-------------------------
---------------------------------------------------------------------------
        name | command      depvar       npar  title 
-------------+-------------------------------------------------------------
      f3fert | ivreg2       fert          133  First-stage regression: fert
---------------------------------------------------------------------------

IV (2SLS) estimation
--------------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on id

Number of clusters (id) =       249536                Number of obs =   249536
                                                      F(132,249535) = 12868.11
                                                      Prob > F      =   0.0000
Total (centered) SS     =  227504.7498                Centered R2   =   0.1726
Total (uncentered) SS   =  230628.2659                Uncentered R2 =   0.1839
Residual SS             =  188226.7883                Root MSE      =    .8685

-------------------------------------------------------------------------------
              |               Robust
school_zscore |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
--------------+----------------------------------------------------------------
         fert |   -.026371   .0261416    -1.01   0.313    -.0776076    .0248656
        malec |  -.0237293   .0048033    -4.94   0.000    -.0331436   -.0143149
    _country1 |  -.3596484   .0327834   -10.97   0.000    -.4239027   -.2953941
    _country2 |  -.5164591   .0320038   -16.14   0.000    -.5791854   -.4537327
    _country3 |  -.4352985   .0340148   -12.80   0.000    -.5019662   -.3686308
    _country4 |   .4432809   .0258933    17.12   0.000     .3925311    .4940308
    _country5 |   .6288297    .023215    27.09   0.000     .5833291    .6743302
    _country6 |   .0906697   .0205284     4.42   0.000     .0504348    .1309047
    _country7 |   .3227108   .0385533     8.37   0.000     .2471476     .398274
    _country8 |   .5615853    .022015    25.51   0.000     .5184368    .6047338
    _country9 |   .3798848   .0455624     8.34   0.000     .2905841    .4691854
   _country10 |   .4373855   .0232278    18.83   0.000       .39186    .4829111
   _country11 |   .2067806   .0316536     6.53   0.000     .1447407    .2688204
   _country12 |   .5788677   .0444582    13.02   0.000     .4917312    .6660042
   _country13 |   .5748467   .0294469    19.52   0.000     .5171317    .6325616
   _country14 |  -.0426347   .0228431    -1.87   0.062    -.0874064    .0021369
   _country15 |   .5304389   .0782193     6.78   0.000     .3771319     .683746
   _country16 |   .1248066   .0389773     3.20   0.001     .0484126    .2012007
   _country17 |   .3010189   .0518813     5.80   0.000     .1993334    .4027044
   _country18 |   .5477578   .0327256    16.74   0.000     .4836168    .6118987
   _country19 |  -.0838841   .0308473    -2.72   0.007    -.1443437   -.0234245
   _country21 |   .0511917   .0182853     2.80   0.005     .0153532    .0870302
   _country23 |   .5695075   .0255102    22.32   0.000     .5195084    .6195067
   _country24 |   .2494059   .0475629     5.24   0.000     .1561843    .3426274
   _country25 |    .227627   .0253325     8.99   0.000     .1779762    .2772778
   _country26 |    .579084   .0339822    17.04   0.000       .51248     .645688
   _country27 |     .59609   .0321126    18.56   0.000     .5331506    .6590295
   _country28 |  -.4281329   .0416145   -10.29   0.000    -.5096958   -.3465701
   _country29 |   .4686738    .028379    16.51   0.000      .413052    .5242956
   _country30 |   .1242822   .0207328     5.99   0.000     .0836467    .1649178
   _country31 |      .3978   .0238691    16.67   0.000     .3510175    .4445826
   _country33 |  -.0951366   .0432901    -2.20   0.028    -.1799837   -.0102895
   _country34 |  -.2471743   .0417799    -5.92   0.000    -.3290613   -.1652872
   _country35 |   .2102218   .0276654     7.60   0.000     .1559986     .264445
   _country36 |  -.2710334   .0400329    -6.77   0.000    -.3494965   -.1925703
   _country37 |   -.047357   .0334353    -1.42   0.157     -.112889     .018175
   _country38 |    .380919   .0392374     9.71   0.000     .3040151     .457823
   _country39 |   .4792914    .026213    18.28   0.000      .427915    .5306678
   _country40 |   .2474586    .023186    10.67   0.000     .2020149    .2929023
   _country41 |   .1415982   .0368697     3.84   0.000     .0693349    .2138616
   _country42 |   .6796616   .0277938    24.45   0.000     .6251867    .7341365
   _country45 |   .5020819   .0225021    22.31   0.000     .4579787    .5461851
   _country46 |    .378559   .0246518    15.36   0.000     .3302423    .4268757
   _country47 |   .0388755   .0319625     1.22   0.224    -.0237699    .1015208
   _country48 |   .4439475   .0254798    17.42   0.000      .394008    .4938869
   _country49 |   .3780257   .0227957    16.58   0.000      .333347    .4227043
   _country50 |    .577323   .0307418    18.78   0.000     .5170701    .6375759
   _country51 |   .3289376    .030533    10.77   0.000      .269094    .3887812
   _country54 |   .1815552   .0204452     8.88   0.000     .1414833    .2216271
   _country56 |   .1741435    .027866     6.25   0.000     .1195272    .2287597
   _country57 |   .1355615    .056883     2.38   0.017     .0240729    .2470501
   _country58 |   .5706896   .0316411    18.04   0.000     .5086741    .6327051
   _country59 |    .403914   .0492034     8.21   0.000      .307477    .5003509
   _country63 |   -.134318   .0470143    -2.86   0.004    -.2264643   -.0421717
   _country64 |   .2603929   .0253522    10.27   0.000     .2107036    .3100822
   _country66 |   .5377465   .0470949    11.42   0.000     .4454422    .6300509
   _country69 |   .1331333   .0259511     5.13   0.000     .0822702    .1839965
   _country70 |   .3442674   .0361054     9.54   0.000     .2735021    .4150327
   _country72 |  -.2778347   .0380702    -7.30   0.000     -.352451   -.2032184
   _country75 |   .2951819   .0260986    11.31   0.000     .2440296    .3463342
         _yb8 |  -2.863709   .5048535    -5.67   0.000    -3.853203   -1.874214
         _yb9 |  -1.711948   .7275791    -2.35   0.019    -3.137976   -.2859188
        _yb10 |  -.2138247   .6692701    -0.32   0.749     -1.52557    1.097921
        _yb11 |  -1.232525   .5684958    -2.17   0.030    -2.346757   -.1182942
        _yb12 |  -.8025106   .5340336    -1.50   0.133    -1.849197    .2441761
        _yb13 |   -1.11441   .4998767    -2.23   0.026     -2.09415   -.1346692
        _yb14 |  -.9940728   .4854107    -2.05   0.041     -1.94546   -.0426853
        _yb15 |  -1.095047   .4863656    -2.25   0.024    -2.048306    -.141788
        _yb16 |  -1.059055   .4808253    -2.20   0.028    -2.001456   -.1166551
        _yb17 |  -.8865221   .4789061    -1.85   0.064    -1.825161    .0521167
        _yb18 |  -.8691969   .4765694    -1.82   0.068    -1.803256     .064862
        _yb19 |  -.9299916   .4757874    -1.95   0.051    -1.862518    .0025346
        _yb20 |  -.8814975   .4744497    -1.86   0.063    -1.811402    .0484067
        _yb21 |  -.8612096   .4743604    -1.82   0.069    -1.790939    .0685198
        _yb22 |  -.8768362   .4739742    -1.85   0.064    -1.805809    .0521362
        _yb23 |  -.8657872    .473627    -1.83   0.068    -1.794079    .0625047
        _yb24 |  -.8021206   .4727478    -1.70   0.090    -1.728689     .124448
        _yb25 |  -.8158502   .4724491    -1.73   0.084    -1.741833    .1101329
        _yb26 |  -.8389923   .4722536    -1.78   0.076    -1.764592    .0866078
        _yb27 |  -.8322148   .4721226    -1.76   0.078    -1.757558    .0931285
        _yb28 |   -.798574   .4719411    -1.69   0.091    -1.723561    .1264136
        _yb29 |  -.7798781    .471659    -1.65   0.098    -1.704313    .1445565
        _yb30 |  -.7788893   .4713657    -1.65   0.098    -1.702749    .1449705
        _yb31 |  -.7996159   .4712767    -1.70   0.090    -1.723301    .1240694
        _yb32 |  -.7789997   .4711597    -1.65   0.098    -1.702456    .1444564
        _yb33 |  -.7549079   .4709734    -1.60   0.109    -1.677999     .168183
        _yb34 |  -.7805345   .4708801    -1.66   0.097    -1.703443    .1423736
        _yb35 |  -.7407011   .4707492    -1.57   0.116    -1.663353    .1819503
        _yb36 |  -.7349235   .4706699    -1.56   0.118     -1.65742    .1875727
        _yb37 |  -.7212311   .4706107    -1.53   0.125    -1.643611    .2011489
        _yb38 |  -.6984742   .4705257    -1.48   0.138    -1.620688    .2237392
        _yb39 |  -.7015857   .4705007    -1.49   0.136     -1.62375    .2205787
        _yb40 |  -.6600645   .4703831    -1.40   0.161    -1.581999    .2618695
        _yb41 |  -.6583872   .4702879    -1.40   0.162    -1.580135    .2633601
        _yb42 |  -.6458113   .4703167    -1.37   0.170    -1.567615    .2759925
        _yb43 |  -.6547942   .4702011    -1.39   0.164    -1.576371    .2667829
        _yb44 |  -.6513524   .4701351    -1.39   0.166      -1.5728    .2700954
        _yb45 |  -.6165502   .4701131    -1.31   0.190    -1.537955    .3048545
        _yb46 |  -.6210042   .4700271    -1.32   0.186     -1.54224    .3002319
        _yb47 |  -.6418641   .4699857    -1.37   0.172    -1.563019     .279291
        _yb48 |  -.6085111     .46992    -1.29   0.195    -1.529537    .3125152
        _yb49 |  -.5996382   .4698714    -1.28   0.202    -1.520569    .3212928
        _yb50 |  -.6287909   .4700295    -1.34   0.181    -1.550032      .29245
        _yb51 |   -.642179   .4703328    -1.37   0.172    -1.564014    .2796563
        _yb52 |  -.6519173    .470294    -1.39   0.166    -1.573677     .269842
        _yb53 |  -.6781094   .4709666    -1.44   0.150    -1.601187    .2449682
        _yb54 |  -.7545462   .4715587    -1.60   0.110    -1.678784    .1696918
        _yb55 |  -.7334599   .4782336    -1.53   0.125    -1.670781    .2038608
        _yb56 |  -.8639788   .4736747    -1.82   0.068    -1.792364    .0644066
        _age7 |  -.3333659   .0450045    -7.41   0.000    -.4215732   -.2451587
        _age8 |  -.2656697   .0402869    -6.59   0.000    -.3446305   -.1867089
        _age9 |  -.2171545   .0352045    -6.17   0.000    -.2861541    -.148155
       _age10 |  -.1997695   .0309505    -6.45   0.000    -.2604314   -.1391075
       _age11 |  -.1578696   .0262631    -6.01   0.000    -.2093442    -.106395
       _age12 |  -.1595364   .0234227    -6.81   0.000     -.205444   -.1136289
       _age13 |  -.1125129   .0195119    -5.77   0.000    -.1507555   -.0742703
       _age14 |  -.1028461   .0172903    -5.95   0.000    -.1367344   -.0689578
       _age15 |  -.0791103    .014734    -5.37   0.000    -.1079885   -.0502322
       _age16 |  -.0539105   .0138798    -3.88   0.000    -.0811144   -.0267067
       _age17 |  -.0586016   .0129473    -4.53   0.000    -.0839779   -.0332253
       _age18 |  -.0539453   .0126538    -4.26   0.000    -.0787462   -.0291444
  _contracep1 |   .2154486   .0069223    31.12   0.000     .2018812    .2290161
  _contracep2 |   .1683051    .009765    17.24   0.000     .1491661    .1874441
  _contracep3 |   .0639772   .0117784     5.43   0.000      .040892    .0870625
    motherage |   .0044647   .0271897     0.16   0.870    -.0488262    .0577556
  motheragesq |     .00496   .0011697     4.24   0.000     .0026674    .0072525
 motheragecub |  -.0000799   .0000162    -4.93   0.000    -.0001117   -.0000481
agefirstbirth |  -.0776004    .004747   -16.35   0.000    -.0869044   -.0682964
        educf |   .1170555   .0028974    40.40   0.000     .1113766    .1227343
  educfyrs_sq |  -.0039655   .0001062   -37.33   0.000    -.0041737   -.0037573
       height |   .0044619   .0003695    12.08   0.000     .0037378    .0051861
          bmi |   .0163111   .0007286    22.39   0.000      .014883    .0177392
        _cons |  -.7047448   .4986134    -1.41   0.158    -1.682009    .2725196
-------------------------------------------------------------------------------
Underidentification test (Kleibergen-Paap rk LM statistic):            598.831
                                                   Chi-sq(1) P-val =    0.0000
------------------------------------------------------------------------------
Weak identification test (Cragg-Donald Wald F statistic):             1187.779
                         (Kleibergen-Paap rk Wald F statistic):        850.092
Stock-Yogo weak ID test critical values: 10% maximal IV size             16.38
                                         15% maximal IV size              8.96
                                         20% maximal IV size              6.66
                                         25% maximal IV size              5.53
Source: Stock-Yogo (2005).  Reproduced by permission.
NB: Critical values are for Cragg-Donald F statistic and i.i.d. errors.
------------------------------------------------------------------------------
Warning: estimated covariance matrix of moment conditions not of full rank.
         model tests should be interpreted with caution.
Possible causes:
         number of clusters insufficient to calculate robust covariance matrix
         singleton dummy variable (dummy with one 1 and N-1 0s or vice versa)
partial option may address problem.
------------------------------------------------------------------------------
Instrumented:         fert
Included instruments: malec _country1 _country2 _country3 _country4 _country5
                      _country6 _country7 _country8 _country9 _country10
                      _country11 _country12 _country13 _country14 _country15
                      _country16 _country17 _country18 _country19 _country21
                      _country23 _country24 _country25 _country26 _country27
                      _country28 _country29 _country30 _country31 _country33
                      _country34 _country35 _country36 _country37 _country38
                      _country39 _country40 _country41 _country42 _country45
                      _country46 _country47 _country48 _country49 _country50
                      _country51 _country54 _country56 _country57 _country58
                      _country59 _country63 _country64 _country66 _country69
                      _country70 _country72 _country75 _yb8 _yb9 _yb10 _yb11
                      _yb12 _yb13 _yb14 _yb15 _yb16 _yb17 _yb18 _yb19 _yb20
                      _yb21 _yb22 _yb23 _yb24 _yb25 _yb26 _yb27 _yb28 _yb29
                      _yb30 _yb31 _yb32 _yb33 _yb34 _yb35 _yb36 _yb37 _yb38
                      _yb39 _yb40 _yb41 _yb42 _yb43 _yb44 _yb45 _yb46 _yb47
                      _yb48 _yb49 _yb50 _yb51 _yb52 _yb53 _yb54 _yb55 _yb56
                      _age7 _age8 _age9 _age10 _age11 _age12 _age13 _age14
                      _age15 _age16 _age17 _age18 _contracep1 _contracep2
                      _contracep3 motherage motheragesq motheragecub
                      agefirstbirth educf educfyrs_sq height bmi
Excluded instruments: twin_two_fam
Dropped collinear:    _country20 _country22 _country32 _country43 _country44
                      _country52 _country53 _country55 _country60 _country61
                      _country62 _country65 _country67 _country68 _country71
                      _country73 _country74 _country76 _yb1 _yb2 _yb3 _yb4 _yb5
                      _yb6 _yb7 _yb57 _yb58 _yb59 _yb60 _yb61 _yb62 _yb63 _age1
                      _age2 _age3 _age4 _age5 _age6 _age19 _age20 _age21 _age22
                      _age23 _age24 _age25 _age26 _age27 _age28 _age29 _age30
                      _age31 _age32 _age33 _age34 _age35 _age36 _age37 _age38
                      _age39 _age40 _age41 _age42 _age43 _age44 _age45 _age46
                      _age47 _age48 _age49 _age50 _age51 _age52 _age53
                      _contracep4 _contracep5
------------------------------------------------------------------------------
(est1 stored)
(sum of wgt is     2.4786e+11)
Warning - collinearities detected
Vars dropped:       _country20 _country22 _country32 _country43 _country44
                    _country52 _country53 _country55 _country60 _country61
                    _country62 _country65 _country67 _country68 _country71
                    _country73 _country74 _country76 _yb1 _yb2 _yb3 _yb4 _yb5
                    _yb6 _yb7 _yb57 _yb58 _yb59 _yb60 _yb61 _yb62 _yb63 _age1
                    _age2 _age3 _age4 _age5 _age6 _age19 _age20 _age21 _age22
                    _age23 _age24 _age25 _age26 _age27 _age28 _age29 _age30
                    _age31 _age32 _age33 _age34 _age35 _age36 _age37 _age38
                    _age39 _age40 _age41 _age42 _age43 _age44 _age45 _age46
                    _age47 _age48 _age49 _age50 _age51 _age52 _age53 _contracep4
                    _contracep5
