/* Regressions 3.01              damiancclarke             yyyy-mm-dd:2013-04-15
*---|----1----|----2----|----3----|----4----|----5----|----6----|----7----|----8
*/

/* This file contains all regression results that are being used in the Twin 
Instrument paper.  These include
	- Summary.xls (sum stats)
	- Summary_Birthorder.xls
   - Twin_Predict.xls
   - ...

This do file uses as input the data file DHS_Twins, which is generated by the
file Twin_Setup.do.  Currently it includes all DHS files available up until 
October 2013.  Files are downloaded and imported to Stata using the files 
DHS_Import.py and DHS_Multicountry.do.

Last edit:
* December 17th, 2013: considerable rewrite based on comments in 22 Nov email.
Can revert by going back to git commit Nov 11 2013.
* September 12th, 2013: Address Paul Dev's comment about treatment
* August 5th, 2013: Update figures and tables based on Sonia's comme-
nts on early draft.
*/


clear all
version 11.2
cap log close
set more off
set mem 2000m

*******************************************************************************
*** (0) Globals and Locals
*******************************************************************************
* DIRECTORIES
global Base "~/investigacion/Activa/Twins"
global Data "$Base/Data"
global Results "$Base/Results"
global Tables "$Results/Outreg"
global Graphs "$Results/Graphs"
global Log "$Base/Log"
global ConAdos "$Base/Do/PlausExog"

* VARIABLES
global outcomes school_zscore
****OLD OUTCOMES/*noeduc /*highschool*/ childmortal infantmortal*/
global sumstats bord fert idealnumkids agemay educf height bmi educ         /*
*/ school_zscore noeduc /*highschool*/ infantmortality childmortality
global twinpredict motherage motheragesq agefirstbirth educf educfyrs_sq /*
*/ height bmi i.child_yob i._cou 
global twinout motherage motheragesq agefirstbirth educf educfyrs_sq height bmi
global base malec i._cou i.year_birth i.age i.contracep_intent
global age motherage motheragesq motheragecub agefirstbirth
global S educf educfyrs_sq
global H height bmi 


* SPECIFICATIONS
local se cluster(id)
local wt [pw=sweight]
local cond if agefirstbirth>=15&age<19


* FILE NAMES
local Sum      Summary
local SumBord  Summary_Birthorder
local TwinPred Twin_Predict
local IV       Base_IV
local IV1      Base_IV_firststage
local IVt      Base_IV_twins
local IVt1     Base_IV_twins_firststage
local IVinc    Income_IV
local IVinc1   Income_IV_firststage
local IVdes    Desire_IV
local IVdes1   Desire_IV_firststage
local IVpref   PrefThreshold_IV
local IVpref1  PrefThreshold_IV_firststage


* FIGURES
local famsize   famsize
local famsize_e famsize_exceed
local twinbord  twinbybord
local idealfam  idealfamsize


* REPEATED OPTIONS
local estopt cells(b(star fmt(%-9.3f)) se(fmt(%-9.3f) par)) /*
*/ stats (r2 N, fmt(%9.2f %9.0g)) starlevel ("*" 0.10 "**" 0.05 "***" 0.01)
local varlab varlabels(malec "Male Child" agemay "Mother's age" magesq    /*
*/ "Mother's Age Squared" agefirstbirth "Age First Birth" educf           /*
*/ "Mother's Education" educfyrs_sq "Mother's Education Squared" height   /*
*/ "Height" bmi "BMI")
local sep "&"
local lineend "\\"
local linedraw "\hline"
local prenote "\begin{table}[htpb!]\caption{`cap'}\label{`label'}\begin{center}"


*SWITCHES (1 if run, else not run)
local sumstats 0
  local graphs 0
local sumstats2 0
  local graphs2 0
local twin 0
local ols 0
local IV 0
local IVtime 0
local IVtwin 0
local income 0
local desire 0
local pref 0
local new 0
local twinoccur 0
local conley 0
local thresholdtest 1

*******************************************************************************
*** (1) Setup (+ discretionary choices)
*******************************************************************************
log using "$Log/Twin_Regressions.log", text replace
use "$Data/DHS_twins", clear

gen motherage    = agemay - age
gen motheragesq  = motherage^2
gen motheragecub = motherage^3
gen mage3        = agemay^3

replace bmi=. if bmi>50
replace height=. if height>240
replace height=. if height<80
replace educ=. if age<6
replace educ=. if educ>25
replace educf=. if educf>25

drop if twinfamily==3|twinfamily==4
keep if _merge==3

tab _cou, gen(_country)
tab year_birth, gen(_yb)
tab age, gen(_age)
tab contracep_intent, gen(_contracep)
local base malec _country* _yb* _age* _contracep*

foreach ado in ivreg2 outreg2 estout ranktest {
	cap which `ado'
	if _rc!=0 ssc install `ado'
}

*******************************************************************************
*** (2) Summary Stats
*******************************************************************************
if `sumstats'==1 {

	if c(os)=="Windows" local format png
	else if c(os)=="Unix" local format eps

	***************************************************************************
	*** (2a) Graphical
	*** graph 1: total births by family type (twins vs non-twins)
	*** graph 2: total births by family type for families who exceed desired
	*** graph 3: Proportion of twins by birth order
	*** graph 4: Desired family size
	*** graphs 5-7: Desired family size by mother's characteristics
	***************************************************************************
	if `graphs'==1 {
	twoway kdensity fert if twinfamily==1, lpattern(dash) bw(2) || ///
	  kdensity fert if twinfamily==0, bw(2) scheme(s1color) ytitle("Density") ///
	  legend(label(1 "Twin Family") label(2 "Singleton Family")) ///
	  title("Total births by Family Type") xtitle("total children ever born") 
	graph save "$Graphs/`famsize'", replace
	graph export "$Graphs/`famsize'.`format'", as(`format') replace


	twoway kdensity fert if twinfamily==1 & fert > idealnumkids, ///
	  bw(2) lpattern(dash) || kdensity fert if twinfamily==0 & ///
	  fert > idealnumkids & twin_bord >= idealnumkids, bw(2) scheme(s1color) ///
	  legend(label(1 "Twin Family") label(2 "Singleton Family")) ///
	  ytitle("Density") title("Total births by Family Type") ///
	  xtitle("total children ever born") ///
	  subtitle("For families who exceed desired family size")
	graph save "$Graphs/`famsize_e'", replace
	graph export "$Graphs/`famsize_e'.`format'", as(`format') replace

	
	local note1 "Single births are 1-frac(twins). "
	local note2 "Total fraction of twins is represented by the solid line."
	local gnote "`note1' `note2'"
	preserve
	collapse twind [pw=sweight], by(bord)
	line twind bord if bord<11, lpattern(dash) title("Twinning by birth order") ///
	  ytitle("Fraction twins") xtitle("Birth Order") yline(0.0189) ///
	  note(`gnote') scheme(s1color)
	graph save "$Graphs/`twinbord'", replace
	graph export "$Graphs/`twinbord'.`format'", as(`format') replace
	restore

	
	local n1 "Total sample of families is 1,416,924.  2.61% of families report "
	local n2 "'up to god', and 4.39% provide"
	local n3 "a non-numeric response. These are classed as 10+ in graphical output."	
	preserve
	collapse idealnumkids [pw=sweight], by(id)
	gen idealnum=idealnumkids if idealnumkids<=10
	replace idealnum=10 if idealnumkids>10 & idealnumkids!=.
	lab def n 0 "0" 1 "1" 2 "2" 3 "3" 4 "4" 5 "5" 6 "6" 7 "7" 8 "8" 9 "9" 10 "10+"
	lab val idealnum n
	hist idealnum,  note("`n1' `n2'" "`n3'") frac scheme(s1color) ///
	  xtitle("Ideal Family Size") title("Self Reported Ideal Family Size") ///
	  xla(0/10, valuelabel) bcolor(navy)
	graph save "$Graphs/`idealfam'", replace
	graph export "$Graphs/`idealfam'.`format'", as(`format') replace
	restore

	
	foreach c of varlist agemay agefirstbirth fert {
		preserve
		if `"`c'"'=="agemay" {
			local cond agemay>=15&agemay<=45
			local char "Age of mother at time of question"
		}
		else if `"`c'"'=="agefirstbirth" {
			local cond agefirstbirth>=15&agefirstbirth<45
			local char "Age of Mother at First birth"
		}
		else if `"`c'"'=="fert"{
			local cond fert<=10
			local char "Total births at time of question"
		}
		bys id: gen num=_n
		keep if num==1
		collapse idealnumkids [pw=sweight], by(`c')
		line idealnumkids `c' if `cond', title("Ideal Family Size by `char'") ///
		  scheme(s1color) xtitle("`char'") ytitle("Average Desired Family Size")
	   graph save "$Graphs/idealfam_`c'", replace
	   graph export "$Graphs/idealfam_`c'.`format'", as(`format') replace
		restore
	}
	}

	***************************************************************************
	*** (2b) Tables
	***************************************************************************
	* (A) By twins
	local opts cells("count mean sd min max")
	
	gen cat="Low Inc, Singleton" if twind==0 & income=="low"
	replace cat="Low Inc, Twin" if twind==1 & income=="low"
	replace cat="Mid Inc, Single" if twind==0 & income=="mid"
	replace cat="Mid Inc, Twin" if twind==1 & income=="mid"
	encode cat, gen(catnum)
	
	local numkids "Number of Children `sep'"
	local nummothers "Number of Mothers `sep'"
	local numcountry "Number of Countries `sep'"
	foreach num of numlist 1(1)4 {
		cap drop count
		gen count = 1
		replace count=. if catnum!=`num'
		foreach var of local sumstats {
			replace count=. if `var'==.
		}
		count if count==1
		local numkids "`numkids' `r(N)'`sep'"

		bys id: gen n=_n
		count if count==1&n==1
		local nummothers "`nummothers' `r(N)'`sep'"
		drop n

		bys _cou: gen n=_n
		count if count==1&n==1
		local numcountry "`numcountry' `r(N)'`sep'"
		drop n
	}

	sum twind if income=="low"
	scalar lt = `r(mean)'
	scalar ls = `r(sd)'
	sum twind if income=="mid"
	scalar mt = `r(mean)'
	scalar ms = `r(sd)'
	local twinlow "`=scalar(lt)' (`=scalar(ls)')"
	local twinmid "`=scalar(mt)' (`=scalar(ms)')"

	local cap "Summary Statistics"
	local label "TWINtab:sumstats"
	
	estpost tabstat $sumstats, by(cat) statistics(mean sd) listwise ///
	 columns(statistics)
	estout using "$Tables/Summary/`Sum'.tex", unstack ///
	  cells("mean(fmt(3)) sd(par fmt(3))") prehead("`prenote'") ///
	  posthead(\begin{tabular}{lccccc}\toprule&\multicolumn{2}{c}{Low Income} ///
		& \multicolumn{2}{c}{Middle Income} & Total \\ \cmidrule(r){2-3}       ///
		\cmidrule(r){4-5} \cmidrule(r){6} & Single & Twins & Single & Twins \\ ///
		\midrule) /*delimit(";")*/                                             ///
	   varlabels(bord "Birth Order" fert "Fertility" idealnumkids             ///
	  "Ideal family size" agemay "Age" educf "Education" height "Height" bmi  ///
	  "BMI" educ "Education (Years)" school_zscore "Education (Z-Score)"      ///
	  noeduc "No Education (Percent)" infantmortality "Infant Mortality"      ///
	  childmortality "Child Mortality") style(tex) replace                    ///
	  prefoot(\multcolumn{6}{p{10cm}}{Fraction twin low income: `twinlow',    ///
	  "middle income: `twinmid' `lineend' `linedraw' `numcountry' `lineend' " ///
	 "`nummothers' `lineend' `numkids' `lineend' `linedraw'"                  ///
	 "Notes: Education is reported as total years attained, attendance is a " ///
	 "binary variable indicating current attendance status. Infant mortality" ///
	 " refers to the proportion of children who die before 1 year of age, "   ///
	 "while child mortality refers to the proportion who die before 5 years " ///
	 "years.  Maternal height is reported in cm.  For a full list of country" ///
	  "and years of survey see appendix table REF."})                         ///
	 postfoot("\bottomrule\end{tabular}\end{center}\end{table}")
}

if `sumstats2'==1 {

	*****************************************************************************
	*** (2d) Descriptive of desired
	*****************************************************************************
	estpost tab idealfam `cond'
	esttab using "$Tables/Summary/Ideal.xls", cells("b pct") replace
	estpost tab idealfam `cond'&twinfam==0
	esttab using "$Tables/Summary/Ideal.xls", cells("b pct") append
	estpost tab idealfam `cond'&twinfam>=1
	esttab using "$Tables/Summary/Ideal.xls", cells("b pct") append
	foreach num in two three four five {
		estpost tab idealnumkids `cond'&`num'_plus==1&twin_`num'_fam==0
		esttab using "$Tables/Summary/Ideal.xls", cells("b pct") append

		estpost tab idealnumkids `cond'&`num'_plus==1&twin_`num'_fam==1
		esttab using "$Tables/Summary/Ideal.xls", cells("b pct") append
	}
	*****************************************************************************
	*** (2e) Descriptive of maternal health
	*****************************************************************************	
	if `graphs2'==1 {
		preserve
		collapse height weightk bmi [pw=sweight] `cond', by(id)
		hist weightk if weightk>30&weightk<200, frac scheme(s1color) ///
		  xtitle("Weight in kg") title("Mother's Weight at time of Survey")
		graph export "$Graphs/MotherWeight.eps", as(eps) replace
		hist height, frac scheme(s1color) ///
		  xtitle("Height in cm") title("Mother's Height at time of Survey")
		graph export "$Graphs/MotherHeight.eps", as(eps) replace
		hist bmi, frac scheme(s1color) ///
		  xtitle("BMI") title("Mother's BMI at time of Survey") ///
		  note("BMI is experessed as weight in kg squared/height in km")
		graph export "$Graphs/MotherBMI.eps", as(eps) replace
		restore
	}	

	gen lowheight=height<157.48
	replace lowheight=. if height==.
	gen lowweight=bmi<18.5
	replace lowweight=. if bmi==.
	
	estpost tab lowheight `cond'
	esttab using "$Tables/Summary/Health.xls", cells("b pct") replace
	estpost tab lowweight `cond'
	esttab using "$Tables/Summary/Health.xls", cells("b pct") append
}
********************************************************************************
**** (3) Twin predict regressions
********************************************************************************
if `twin'== 1 {
	
	fvset base 1 _cou
	fvset base 1 child_yob
	
	eststo: reg twind100 $twinpredict `wt', `se'

	foreach inc in low mid {
		eststo: reg twind100 $twinpredict `wt' if income=="`inc'", `se'
	}
	
	local cond1 child_yob>1989
	local cond2 child_yob<=1989

	foreach condtn in cond1 cond2 {
		eststo: reg twind100 $twinpredict `wt' if ``condtn'', `se'
	}

	estout est1 est2 est3 est4 est5 using "$Tables/Twin/`TwinPred'.xls", ///
	  keep($twinout) title("Probability of Giving Birth to Twins (DHS)") ///
	  varlabels(motherage "Age" motheragesq "Age Squared"  agefirstbirth ///
	  "Age First Birth" educf "Education (years)" educfyrs_sq  ///
	  "Education squared" height "Height" bmi "BMI") `estopt' replace ///
	  note("Notes: All specifications include a full set of year of birth and" ///
	  " country dummies, and are estimated as linear probability models. " ///
	  "Twin is multiplied by 100 for presentation.  Height is measured in cm" ///
	  " and BMI is weight in kg divided by height in cm squared.")

	estimates clear
}

********************************************************************************
**** (4) Simple OLS of Q-Q (can then apply Altonji)
********************************************************************************
if `ols'==1 {
	cap rm "$Results/Outreg/OLS/QQ_ols.xls"
	cap rm "$Results/Outreg/OLS/QQ_ols.txt"
	local out "$Results/Outreg/OLS/QQ_ols.xls"

	foreach y of varlist $outcomes {
		qui reg `y' fert `base' $age  $S $H [pw=sweight], `se'
		reg `y' fert `base' $age [pw=sweight] if e(sample)==1, `se'
		outreg2 fert $age using `out', excel append
		reg `y' fert `base' $age $S [pw=sweight] if e(sample)==1, `se'
		outreg2 fert $age $S using `out', excel append
		reg `y' fert `base' $age $S $H [pw=sweight], `se'
		outreg2 fert $age $S $H using `out', excel append
	}

	foreach inc in low mid {
		foreach y of varlist $outcomes {
			qui reg `y' fert `base' $age $S $H if income==`"`inc'"', `se'
			reg `y' fert `base' $age [pw=sweight] if income==`"`inc'"'&e(sample)/*
			*/, `se'
			outreg2 fert $age using `out', excel append

			reg `y' fert `base' $age $S [pw=sweight] if income==`"`inc'"'&e(sample),/*
			*/ `se'
			outreg2 fert $age $S using `out', excel append

			reg `y' fert `base' $age $S $H [pw=sweight] if income==`"`inc'"',/*
			*/ `se'
			outreg2 fert $age $S $H using `out', excel append
		}
	}
}

********************************************************************************
**** (5) IV (using twin at order n), subsequent inclusion of twin predictors
********************************************************************************
if `IV'==1 {
	local n1=1
	local n2=2
	local n3=3
	local estimates
	local firststage

	*foreach n in two three four five {
		local c  `cond'&two_plus==1
		local ce `cond'&two_plus==1&e(sample)
		foreach y of varlist $outcomes {
			eststo: ivreg2 `y' `base' $age $S $H (fert=twin_three_fam) `wt' `c', /*
			*/ `se' savefirst savefp(f`n3')
			eststo: ivreg2 `y' `base' $age $S (fert=twin_three_fam) `wt' `ce',   /*
			*/ `se' savefirst savefp(f`n2')
			eststo: ivreg2 `y' `base' (fert=twin_three_fam) `wt' `ce',           /*
			*/ `se' savefirst savefp(f`n1')

			local estimates `estimates' est`n3' est`n2' est`n1' 
			local firststage `firststage' f`n1'fert f`n2'fert f`n3'fert
			local n1=`n1'+3
			local n2=`n2'+3
			local n3=`n3'+3
		}
	*}

	estout `estimates' using "$Tables/IV/`IV'_alt.xls", replace ///
	keep(fert malec $age $S $H) `estopt' `varlab'

	estout `firststage' using "$Tables/IV/`IV1'_alt.xls", replace ///
	keep(twin_* malec $age $S $H) `estopt' `varlab' 
	
	estimates clear
}

********************************************************************************
**** (5b) IV with before and after 1984
********************************************************************************
if `IVtime'==1 {
	foreach time in before after {

		local n1=1
		local n2=2
		local n3=3
		local estimates
		local firststage

		if `"`time'"'=="before" local newy child_yob<=1984
		else if `"`time'"'=="after" local newy child_yob>1984 
		
		foreach n in two three {
			local c  `cond'&`n'_plus==1&`newy'
			local ce `cond'&`n'_plus==1&`newy'&e(sample)
			foreach y of varlist $outcomes {
				eststo: ivreg2 `y' `base' $age $S $H (fert=twin_`n'_fam) `wt' /*
				*/ `c',  `se' savefirst savefp(f`n3')
				eststo: ivreg2 `y' `base' $age $S (fert=twin_`n'_fam) `wt'    /*
				*/ `ce', `se' savefirst savefp(f`n2')
				eststo: ivreg2 `y' `base' (fert=twin_`n'_fam) `wt' `ce',      /*
				*/ `se' savefirst savefp(f`n1')

				local estimates `estimates' est`n3' est`n2' est`n1' 
				local firststage `firststage' f`n1'fert f`n2'fert f`n3'fert
				local n1=`n1'+3
				local n2=`n2'+3
				local n3=`n3'+3
			}
		}
		estout `estimates' using "$Tables/IV/`IV'_time_`time'.xls", replace ///
		  keep(fert malec $age $S $H) `estopt' `varlab'

		estout `firststage' using "$Tables/IV/`IV1'_time_`time'.xls", replace ///
		  keep(twin_* malec $age $S $H) `estopt' `varlab' 
	
		estimates clear
	}
}


********************************************************************************
**** (6) IV including twins and pre-twins
********************************************************************************
if `IVtwin'==1 {
	local n1=1
	local n2=2
	local n3=3
	local estimates
	local firststage

	foreach n in two three four five {
		local c  `cond'&`n'_plus_twins==1
		local ce `cond'&`n'_plus_twins==1&e(sample)
		foreach y of varlist $outcomes {
			eststo: ivreg2 `y' `base' $age $S $H (fert=twin_`n'_fam) `wt' `c', /*
			*/ `se' savefirst savefp(f`n3')
			eststo: ivreg2 `y' `base' $age $S (fert=twin_`n'_fam) `wt' `ce',   /*
			*/ `se' savefirst savefp(f`n2')
			eststo: ivreg2 `y' `base' (fert=twin_`n'_fam) `wt' `ce',           /*
			*/ `se' savefirst savefp(f`n1')

			local estimates `estimates' est`n3' est`n2' est`n1' 
			local firststage `firststage' f`n1'fert f`n2'fert f`n3'fert
			local n1=`n1'+3
			local n2=`n2'+3
			local n3=`n3'+3
		}
	}

	estout `estimates' using "$Tables/IV/`IVt'.xls", replace ///
	keep(fert malec $age $S $H) `estopt' `varlab'

	estout `firststage' using "$Tables/IV/`IVt1'.xls", replace ///
	keep(twin_* malec $age $S $H) `estopt' `varlab' 
	
	estimates clear
}

********************************************************************************
**** (7) IV by income
********************************************************************************
if `income'==1 {
	foreach inc in low mid {
		local n1=1
		local n2=2
		local n3=3
		local estimates
		local firststage

		foreach n in two three four five {
			local c  `cond'&`n'_plus==1&income=="`inc'"
			local ce `cond'&`n'_plus==1&income=="`inc'"&e(sample)
			foreach y of varlist $outcomes {
				eststo: ivreg2 `y' `base' $age $S $H (fert=twin_`n'_fam) `wt' `c',/*
				*/ `se' savefirst savefp(f`n3')
				eststo: ivreg2 `y' `base' $age $S (fert=twin_`n'_fam) `wt' `ce', /*
				*/ `se' savefirst savefp(f`n2')
				eststo: ivreg2 `y' `base' (fert=twin_`n'_fam) `wt' `ce', /*
				*/ `se' savefirst savefp(f`n1')


				local estimates `estimates' est`n3' est`n2' est`n1' 
				local firststage `firststage' f`n1'fert f`n2'fert f`n3'fert
				local n1=`n1'+3
				local n2=`n2'+3
				local n3=`n3'+3
			}
		}

	estout `estimates' using "$Tables/IV/`IVinc'_`inc'.xls", replace ///
	keep(fert malec $age $S $H) `estopt' `varlab'

	estout `firststage' using "$Tables/IV/`IVinc1'_`inc'.xls", replace ///
	keep(twin_* malec $age $S $H) `estopt' `varlab'
	
	estimates clear
	}
}

********************************************************************************
**** (8) IV with twin threshold
********************************************************************************
if `desire'==1 {
	local endog fert fertXthreshold

	foreach inc in /*all*/ low mid {
		if "`inc'"=="all" local cex
		else if "`inc'"=="low"|"`inc'"=="mid" local cex &income=="`inc'"

		local n1=1
		local n2=2
		local n3=3
		local estimates
		local firststage

		local t=2
		foreach n in two three {
			local c  `cond'&`n'_plus==1 `cex'
			local ce `cond'&`n'_plus==1&e(sample) `cex'

			gen threshold=(twin_`n'_fam==1 & idealnumkids==`t')
			gen fertXthreshold=fert*threshold
			gen desired=idealnumkids<=`t'
			
			cap gen twin`n'Xthreshold = twin_`n'_fam*threshold
			local insts twin_`n'_fam twin`n'Xthreshold

			foreach y of varlist $outcomes {
				eststo: ivreg2 `y' `base' $age $S $H desired (`endog' = `insts') /*
				*/ `wt' `c', `se' savefirst savefp(f`n3')
				eststo: ivreg2 `y' `base' $age $S desired (`endog' = `insts') /*
				*/ `wt' `ce', `se' savefirst savefp(f`n2')
				eststo: ivreg2 `y' `base' desired (`endog' = `insts') /*
				*/ `wt' `ce', `se' savefirst savefp(f`n1')

				local estimates `estimates' est`n3' est`n2' est`n1'
				local firststage `firststage' f`n1'fert f`n2'fert f`n3'fert
		
				local ++t
				local n1=`n1'+3
				local n2=`n2'+3
				local n3=`n3'+3
			}
			drop threshold fertXthreshold desired
		}

		estout `estimates' using "$Tables/IV/`IVdes'_`inc'.xls", replace ///
		 keep(fert fertXthreshold malec $age $S $H) `estopt' `varlab'

		estout `firststage' using "$Tables/IV/`IVdes1'_`inc'.xls", replace ///
		 keep(twin* malec $age $S $H) `estopt' `varlab'
	
		estimates clear
	}
}

********************************************************************************
**** (9) IV with twin threshold condition on same fertility preference
********************************************************************************
if `pref'==1 {
	local endog fert fertXthreshold

	foreach inc in all /*low mid*/ {
		if "`inc'"=="all" local cex
		else if "`inc'"=="low"|"`inc'"=="mid" local cex &income=="`inc'"

		local n1=1
		local n2=2
		local n3=3
		local estimates
		local firststage

		local t=2
		foreach n in three four five {
			local c  `cond'&`n'_plus==1 `cex'
			local ce `cond'&`n'_plus==1&e(sample) `cex'

			local ik idealnumkids
			
			gen threshold=(twin_`n'_fam==1 & idealnumkids==`t')
			gen fertXthreshold=fert*threshold
			
			cap gen twin`n'Xthreshold = twin_`n'_fam*threshold
			local insts twin_`n'_fam twin`n'Xthreshold

			foreach y of varlist $outcomes {
				eststo: ivreg2 `y' `base' $age $S $H `ik' (`endog' = `insts') /*
				*/ `wt' `c', `se' savefirst savefp(f`n3')
				eststo: ivreg2 `y' `base' $age $S `ik' (`endog' = `insts') /*
				*/ `wt' `ce', `se' savefirst savefp(f`n2')
				eststo: ivreg2 `y' `base' `ik' (`endog' = `insts') /*
				*/ `wt' `ce', `se' savefirst savefp(f`n1')

				local estimates `estimates' est`n3' est`n2' est`n1'
				local firststage `firststage' f`n1'fert f`n2'fert f`n3'fert
		
				local ++t
				local n1=`n1'+3
				local n2=`n2'+3
				local n3=`n3'+3
			}
			drop threshold fertXthreshold
		}

		estout `estimates' using "$Tables/IV/`IVpref'_`inc'.xls", replace ///
		 keep(fert fertXthreshold malec $age $S $H) `estopt' `varlab'

		estout `firststage' using "$Tables/IV/`IVpref1'_`inc'.xls", replace ///
		 keep(twin* malec $age $S $H) `estopt' `varlab'
	
		estimates clear
	}
}



********************************************************************************
**** (10) New results 04/01/2013.  This first section is a quick look at whether
***  truncated and non truncated fertility look similar in terms of 1st stage.
***  Also, the IMR test (pre-twins) is included as `twinoccur'
********************************************************************************
if `new'==1 {
	local n1=1
	local n2=2
	local n3=3
	local estimates

	foreach age of numlist 35 40 {
		foreach n in two three four five {
			local c  `cond'&agemay>`age'&`n'_plus==1
			local ce `cond'&agemay>`age'&`n'_plus==1&e(sample)
			foreach y of varlist $outcomes {
				eststo: reg fert `base' $age $S $H twin_`n'_fam `wt' `c'&`y'!=., `se'
				eststo: reg fert `base' $age $S twin_`n'_fam `wt' `ce', `se'
				eststo: reg fert `base' twin_`n'_fam `wt' `ce', `se'

				local estimates `estimates' est`n3' est`n2' est`n1' 
				local n1=`n1'+3
				local n2=`n2'+3
				local n3=`n3'+3
			}
		}
	}
		
	estout `estimates' using "$Tables/New/NewFirst.xls", replace ///
	keep(twin* malec $age $S $H _contracep*) `estopt'

	
	estimates clear
}

if `twinoccur'==1 {
	gen ta=age if twind==1
	bys id: egen twinage=min(ta)
	gen twinagedif=twinage-age
	
	gen treated=twinfamily>=1&twinagedif>1&twinagedif!=.
	replace treated=. if twinfamily>=1&twinagedif<1
	tab treated

	local n1=1
	local n2=2
	local n3=3
	local estimates

	foreach n in two three four five {
		local c  `cond'&`n'_plus==1
		local ce `cond'&`n'_plus==1&e(sample)
 		eststo: reg infantmortality `base' $age $S $H treated `wt' `c', `se'
		eststo: reg infantmortality `base' $age $S treated `wt' `ce', `se'
		eststo: reg infantmortality `base' treated `wt' `ce', `se'

		local estimates `estimates' est`n3' est`n2' est`n1' 
		local n1=`n1'+3
		local n2=`n2'+3
		local n3=`n3'+3
	}
	
		
	estout `estimates' using "$Tables/New/PreTwinTest.xls", replace ///
	keep(treated malec $age $S $H) `estopt'

	
	estimates clear
}

********************************************************************************
**** (11) Conley et al approach
***  Here we are assuming that:
***     quality  = beta*quantity + gamma*twin + epsilon.
***     quantity = pi*twin + nu
***
***  Typical instrumental assumption is that gamma=0, but Conley et al relax
***  this so that gamma can be a small effect, or as they say, we have "prior
***  information that implies that gamma is near 0 but perhaps not exactly 0".
********************************************************************************
if `conley'==1 {
	do $ConAdos/uci.ado
	do $ConAdos/ltz.ado

	*foreach inc in low mid {
	*****************************************************************************
	*** (11a) Union of Confidence Intervals (have now removed $S and $H)
	*****************************************************************************	
	foreach n in two three { 
		*local c `cond'&`n'_plus==1&income=="`inc'"
		local c `cond'&`n'_plus==1
		local varsin
		local varsin2
		local items=1


		reg school_zscore fert twin_two_fam `base' $age `c'
		local estimate `=_b[twin_two_fam]'
		
		qui reg fert twin_`n'_fam `base' $age `c'
		foreach var of varlist `base' $age {
			if _se[`var']!=0 {
				local varsin `varsin' `var'
				}
			}
		qui reg school_zscore fert `varsin' `c'
		foreach var of varlist `varsin' {
			if _se[`var']!=0 {
				local varsin2 `varsin2' `var'
				local ++items
			}
		}	
		dis "`varsin2'"
		foreach num of numlist 1 2 {
			dis "estimating for `num' times the estimated coefficient on twins"
			local est2=`estimate'*`num'
			cap uci school_zscore (fert `varsin2' = twin_`n'_fam `varsin2') `c', /*
			*/ inst(twin_`n'_fam) g1min(0) g1max(`est2') grid(2) /*
			*/ level(.95) robust
		}

		**************************************************************************
		*** (11b) Local to Zero Approach
		**************************************************************************
		matrix omega_eta = J(`items',`items',0)
		matrix omega_eta[1,1] = (`estimate'/sqrt(12))^2
		matrix mu_eta = J(`items',1,0)
		matrix mu_eta[1,1] = `estimate'/2

		cap ltz omega_eta mu_eta school_zscore /*
		*/ (fert `varsin2' = twin_`n'_fam `varsin2') `c', level(.95) robust
	}
	*}	
}

********************************************************************************
**** (12) Is twins crossing desired threshold related to family characteristics?
********************************************************************************
if `thresholdtest'==1 {
	gen threshold2=(twin_two_fam==1 & idealnumkids==2)
	gen threshold3=(twin_three_fam==1 & idealnumkids==3)
	gen threshold4=(twin_four_fam==1 & idealnumkids==4)
	gen threshold5=(twin_five_fam==1 & idealnumkids==5)	

	gen threshold=threshold2+threshold3+threshold4+threshold5

	sum threshold*


	reg threshold $twinpredict `wt', `se'
	outreg $twinout using $Tables/crossing.xls, excel replace

	local t=2
	foreach num in two three four five {
		reg threshold`t' $twinpredict `wt' if `num'_plus==1, `se'
		outreg $twinout using $Tables/crossing.xls, excel append
		
		local ++t
	}


	reg threshold $twinpredict `wt' if twinfamily>0, `se'
	outreg $twinout using $Tables/crossing_twins.xls, excel replace

	local t=2
	foreach num in two three four five {
		reg threshold`t' $twinpredict `wt' if twinfamily>0&`num'_plus==1, `se'
		outreg $twinout using $Tables/crossing_twins.xls, excel append
		
		local ++t
	}	

}
