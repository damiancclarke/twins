/* analysisDHS 4.00              damiancclarke             yyyy-mm-dd:2017-11-03
*---|---------|---------|------  soniabhalotra  ------|---------|---------|----*
*---|----1----|----2----|----3----|----4----|----5----|----6----|----7----|----8

This file contains all summary statistics, figures, regressions and bounds tests
presented in the Twin Instrument paper.  Full details regarding creating this p-
aper from source including downloading and merging DHS, creating crude data and
formatting tables can be found in the README file located in this directory.

This do file uses as input the data file DHS_Twins, which is generated by the f-
ile Twin_Setup.do. Currently it includes all DHS files available up until Octob-
er 2013. To replicate results exactly no DHS files released after 2013 should be
included.

This file requires a number of user written ados which can be installed from the
SSC. These are ivreg2, outreg2, estout, ranktest, mat2txt and plausexog. This is
automated in lines 46-49.  The file can be completely controlled in Section (0).
Here directory locations are defined as global variables, and, if desired, swi-
tches can be set to determine which sections of the file to run. Note that runn-
ing the entire file can take some time. On a machine with 16GB of virtual memory
the run-time is ~ 30 hours.  The time to run individual sections is considerably
shorter.

For optimal viewing set tab width equal to 4 in text editor.

Questions should be directed to damian.clarke@usach.cl

NOTE TO DAMIAN: An earlier file was called Twin_Regressions which has been
cleaned up and turned into this permanent file.

*/


clear all
version 11
set more off
cap log close
set matsize 2000

foreach ado in ivreg2 estout ranktest mat2txt plausexog arrowplot leebounds {
    cap which `ado'
    if _rc!=0 ssc install `ado'
}

*******************************************************************************
*** (0) Globals and Locals
*******************************************************************************
* DIRECTORIES
global DAT "~/investigacion/Activa/Twins/Data"
global LOG "~/investigacion/Activa/Twins/Log"
global OUT "~/investigacion/Activa/Twins/Results/"

cap mkdir "$OUT/tables"
cap mkdir "$OUT/figures"

log using "$LOG/analysisDHS.txt", text replace


*SWITCHES (1 if run, else not run)
local samp5         0
local resave        0


* VARIABLES
global outcomes school_zscore
global twinout motherage motheragesq agefirstbirth educf educfyrs_sq height bmi
global base malec i._cou i.year_birth i.age i.contracep_intent 
global age motherage motheragesq motheragecub agefirstbirth 
global S _educf* _wealth*
global H height bmi preClustD preClustN preClustZ
global HP height bmi prenateCluster

* ECONOMETRIC SPECIFICATIONS
local se   cluster(id)
local wt   [pw=sweight]
local cond if age<19


* REPEATED OPTIONS
#delimit ;
local estopt cells(b(star fmt(%-9.3f)) se(fmt(%-9.3f) par))
   stats (r2 N, fmt(%9.2f %9.0g)) starlevel ("*" 0.10 "**" 0.05 "***" 0.01);
local varlab varlabels(agemay "Mother's age" magesq "Mother's Age Squared"
      agefirstbirth "Age First Birth" educf "Mother's Education" educfyrs_sq
      "Mother's Education Squared" height "Height" bmi "BMI");
local varlab varlabels(agemay "Mother's age" magesq "Mother's Age Squared"
      agefirstbirth "Age First Birth" educf "Mother's Education" educfyrs_sq
      "Mother's Education Squared" height "Height");

local conditions ALL==1;
local fnames     All;
local conditions ALL==1 gender=="F" gender=="M" income=="low" income=="mid";
local fnames     All    Girls       Boys        LowIncome     MidIncome;
#delimit cr

/*
********************************************************************************
**** (1) Estimate Table 4 panel A using Infant Mortality File
********************************************************************************
use "$DAT/DHS_twins_sonsdaughters", clear
tab wealth, gen(_wealth)
tab educf , gen(_educf)

gen tta=age if twind==1
bys id: egen twinage=min(tta)
gen twinagedif=twinage-age

gen treated=twinfamily>=1&twinagedif>1&twinagedif!=.
replace treated=. if twinfamily>=1&twinagedif<1
tab treated
lab var treated "Treated"

replace infantmortality=infantmortality*100
local bvar $age i._cou i.year_birth twind
foreach n in two three four {
    local c  if age>=1&age<16&`n'_plus==1
    local ce `cond'&`n'_plus==1&e(sample)
    eststo: reg infantmortality treated `bvar' $S $H `wt' `c', `se'
    eststo: reg infantmortality treated `bvar' $S    `wt' `ce', `se'
    eststo: reg infantmortality treated `bvar'       `wt' `ce', `se'
    eststo: reg infantmortality treated $age         `wt' `ce', `se'
    sum treated if e(sample)==1
    estadd scalar mval = r(mean)*100
}

#delimit ;
esttab est4 est8 est12 using $OUT/tables/IMRTest_DHS.tex, keep(treated)
b(%-9.3f) se(%-9.3f) starlevel ("*" 0.10 "**" 0.05 "***" 0.01) 
stats(mval N, fmt(%9.3f %9.0gc) label("Mean Value" "Observations"))
label nonotes mlabels(, none) nonumbers style(tex) fragment replace noline;
#delimit cr
estimates clear

*******************************************************************************
*** (2) Estimate Table 6: Selection into twinning based on healthy survival
***     Estimate Figure 1: Height and selective survival
***     Appendix Table XX: Lee Bounds 
*******************************************************************************
use "$DAT/DHS_twins_sonsdaughters", clear
keep if _merge == 3
bys id: gen mothercount=_n
keep if mothercount==1
merge 1:1 id using "$DAT/TwinsMMR", gen(_mergeMM)

gen anyMMR=numMaternalDeaths>=1&numMaternalDeaths<=5 if numMaternalDeaths!=.
gen deathsperSister=numMaternalDeaths/numSisters
gen SMA2=SiblingMeanAge^2
gen SMA3=SiblingMeanAge^3
gen heightLess140=height<140
    
qui reg anyMMR $age malec i._cou i.year_birth i.age i.contracep_intent
predict concentratedMMR if e(sample), residuals
    
foreach num of numlist 1(1)4 {
    gen unhealthy`num' = height<(135+5*`num')|bmi<(15.5+0.5*`num')
    gen healthy`num'  = (unhealthy`num'-1)*-1
}

****************************************************************************
*** (2a) Alderman-style bounds
****************************************************************************
local tvars motherage motheragesq agefirstbirth educf educfyrs_sq height bmi 
local FEs   i.child_yob i._cou 

tab educf
gen twinfam100=100 if twinfamily==1|twinfamily==2
replace twinfam100=0 if twinfamily==0

eststo: reg twinfam100 `tvars' `FE' `wt' `cond'
 
foreach num of numlist 1(1)4 {
    sum deathsperSister if healthy`num'==1
    local healthexp   =round(`r(mean)'*`r(N)')
    dis `healthexp'
    sum deathsperSister if healthy`num'==0
    local unhealthexp =round(`r(mean)'*`r(N)')
    dis `unhealthexp'
    
    set seed 2203
    gen rnumb = runiform()
    sort healthy`num' rnumb
    bys healthy`num': gen counter=_n
    gen     repeat=1 if counter<=`healthexp'&healthy`num'==1
    replace repeat=1 if counter<=`unhealthexp'&healthy`num'==0

    expand 2 if repeat==1, gen(created)
    replace twinfam100 = 100 if created==1&healthy`num'==0
    replace twinfam100 = 0   if created==1&healthy`num'==1
    eststo: reg twinfam100 $twinpredict `wt' `cond'
 
    drop if created==1
    drop rnumb repeat counter created
}

lab var height "Height"
lab var bmi    "BMI"
#delimit ;
esttab est1 est2 est3 est4 est5 using $OUT/tables/Alderman.tex, b(%-9.3f) 
keep(height bmi) se(%-9.3f) starlevel ("*" 0.10 "**" 0.05 "***" 0.01) 
stats(N r2, fmt(%9.0gc %5.3f) label("Observations" "R-Squared"))
label nonotes mlabels(, none) nonumbers style(tex) fragment replace noline;
#delimit cr
estimates clear
exit
****************************************************************************
*** (2b) Graph of sister height and MMR
****************************************************************************
gen cut=.
local it=1
foreach cut of numlist 140 145 150 155 160 165 170 175 {
    replace cut=`it' if height<`cut'&cut==.
    local ++it
}
label def ht 1 "<140" 2 "145" 3 "150" 4 "155" 5 "160" 6 "165" 7 "170" 8 "175+"
label values cut ht
 
sum height, d
local mid = r(p50)
local psd = r(p50)+r(sd)
local msd = r(p50)-r(sd)
dis "`mid'"
 
 
preserve
collapse concentratedMMR (semean) se_MMR=concentratedMMR, by(cut)
gen ub = concentratedMMR+1.96*se_MMR
gen lb = concentratedMMR-1.96*se_MMR
#delimit ;    
twoway rcap ub lb cut, xlabel(1 2 3 4 5 6 7 8, valuelabel) scheme(s1mono) ||  
scatter concentratedMMR cut, xtitle("Height (woman)")
    ytitle("Maternal Mortality (sisters)") xline(4.1, lpattern(solid))
    mcolor(black) msymbol(o) legend(order(2 "Maternal Mortality" 1 "95% CI"));
graph export "$OUT/figures/MMRcuts.eps", as(eps) replace;
#delimit cr
restore

*******************************************************************************
*** (2c) Lee Bounds [APPENDIX ONLY]
*******************************************************************************
local con if motherage>14&motherage<46&_mergeMM==3&age<19

local UB "Upper Bound "
local LB "Lower Bound "
local ti tight(motherage)
file open lee using "$OUT/tables/LeeBounds.tex", write replace
foreach n of numlist 1(1)4 {
    leebounds twinfam100 healthy`n' `con' `wt', select(anyMMR) cie
    local ub = string(e(ciupper),"%-5.3f")
    local lb = string(e(cilower),"%-5.3f")
    local UB "`UB'& `ub'"
    local LB "`LB'& `lb'"
}
drop twinfam100
file write lee "`LB' \\" _n
file write lee "`UB' \\" _n
file close lee

*/
***************************************************************************
*** (3) Make Figure 2 panel A: Twins shift fertility distribution outward
***      Make Appendix Figure A5: Proportion of Twins by Birth Order
***      Make Appendix Figure A10 a/b: Trends over time
***************************************************************************
use "$DAT/DHS_twins_sonsdaughters", clear
keep if _merge==3
tab wealth, gen(_wealth)
tab educf , gen(_educf)

sum two_plus three_plus four_plus
gen n234 = two_plus==0&three_plus==0&four_plus==0
sum n234


/*
#delimit ;
twoway kdensity fert if twinfamily>0&twinfamily!=., lpattern(dash) bw(2) ||
       kdensity fert if twinfamily==0, bw(2) scheme(s1color)
       legend(label(1 "Twin Family") label(2 "Singleton Family"))               
       ytitle("Density") xtitle("total children ever born");
graph export "$OUT/figures/famsize.eps", as(eps) replace;
#delimit cr


sum twind
local twinave=r(mean)	
preserve
collapse twind [pw=sweight], by(bord)
drop if bord==0
#delimit ;
line twind bord if bord<11, lpattern(dash) ytitle("Fraction twins")
xtitle("Birth Order") yline(0.0185, lcolor(red)) scheme(s1mono);
graph export "$OUT/figures/twinbybord.eps", as(eps) replace;
#delimit cr
restore


preserve
bys id: gen keepcrit=_n
keep if keepcrit==1
collapse educf, by(year_birth)
sort year_birth
#delimit ;
twoway line educf year_birth if year_birth>=1940&year_birth<1997,
    scheme(s1color) xtitle("DHS Birth Cohort") ytitle("Years of Education");
graph export "$OUT/figures/eductrend_all.eps", as(eps) replace;
#delimit cr
restore

preserve
keep if agemay>35
bys id: gen keepcrit=_n
keep if keepcrit==1
collapse fert idealnumkids, by(year_birth)
sort year_birth
#delimit ;
twoway line fert year_bi, lpattern(dash) || line idealnumkids year_birth,
scheme(s1color) ytitle("Births per Woman")
legend(label(1 "Fertility per Woman") label(2 "Desired Fertility"));
graph export "$OUT/figures/ferttrend_35_all.eps", as(eps) replace;
#delimit cr
restore
*/


*******************************************************************************
*** (4) OLS estimates for Table 7 panel A
*******************************************************************************
keep if age<19
egen keeper = rowmiss(`y' _cou year_bi age contracep_i bord $age $H educf fert)
keep if keeper == 0

local base malec i._cou i.year_birth i.age i.contracep_intent i.bord
local c1 `base' $age
local c2 `base' $age $H 
local c3 `base' $age $S $H 
local y  school_zscore
local x  fert

gen bound = _n in 1/20
gen LB    = .
gen UB    = .
gen point = .

lab var fert "Fertility"
/*
tokenize `fnames'
foreach condition of local conditions {
    local i = 1
    foreach n in two three four {
        preserve
        keep if `condition'&`n'_plus==1
        
        foreach e of numlist 1(1)3 {
            eststo: reg school_zscore fert `c`e'' `wt'
            local b`e'= _b[fert]
            local stde= _se[fert]
            if `e'==3 {
                local AltonjiR = `b3'/(`b1'-`b3')
                estadd scalar Altonji = `AltonjiR'
            }
        }
        restore
        if `"`1'"'=="All" {
            dis `b3'
            replace point = `b3' if bound == `i'
            replace LB    = `b3'-invnormal(0.975)*`stde' if bound == `i'
            replace UB    = `b3'+invnormal(0.975)*`stde' if bound == `i'
            local i = `i'+7
        }
    }
    #delimit ;
    esttab est1 est2 est3 est4 est5 est6 est7 est8 est9 using
    "$OUT/tables/DHS`1'OLS.tex", keep(fert) nogaps
    b(%-9.3f) se(%-9.3f) starlevel("*" 0.10 "**" 0.05 "***" 0.01) 
    stats(N r2 Altonji, fmt(%9.0gc %5.3f %5.3f)
          label("\\ Observations" "R-Squared" "Altonji et al.\ Ratio"))
    label nonotes mlabels(, none) nonumbers style(tex) fragment replace noline;
    #delimit cr
    estimates clear
    macro shift
}

*******************************************************************************
*** (5) IV estimates for Table 8
*******************************************************************************
local base malec i._cou i.year_birth i.age i.contracep_intent i.bord
local c1 `base' $age
local c2 `base' $age $H
local c3 `base' $age $S $H 
local y  school_zscore
local x  fert

local boundstwo   "Two Plus & "
local boundsthree "Three Plus & "
local boundsfour  "Four Plus & "

lab var fert "Fertility"
tokenize `fnames'
foreach condition of local conditions {
    local ests1
    local ests2
    local ecnt 1
    local OUT "$OUT/IV/`1'"

    local i = 2
    foreach n in two three four {
        preserve
        keep if `condition'&`n'_plus==1        
        gen Twins = twin_`n'_fam
        
        local p partial(`base') savefirst
        local z Twins

        
        foreach e of numlist 1(1)3 {
            eststo: ivreg2 `y' `c`e'' (`x'=`z') `wt', `se' `p' savefp(fst`ecnt')
            local beta`e' =  _b[fert]
            local stde`e' = _se[fert]
            local ests2 `ests2' est`ecnt'
            local ests1 `ests1' fst`ecnt'fert
            mat first=e(first)
            estadd scalar KPF=first[8,1]: fst`ecnt'fert
            estadd scalar KPp=first[7,1]: fst`ecnt'fert

            **Generate residuals for equality of coefficient tests
            foreach var in x y z {
                reg ``var'' `c`e'' `wt'
                predict `var'res`e', resid
            }
            if `e'!=1 {
                #delimit ;
                gmm (eq1: yres1-{b1}*xres1-{b0}) (eq2: yres`e'-{c1}*xres`e'-{c0})
                 `wt', instruments(eq1: zres1) instruments(eq2: zres`e') 
                onestep winitial(unadjusted, indep) vce(cluster id);
                #delimit cr
                test ([b1]_cons = [c1]_cons)
                estadd scalar c = r(p): est`ecnt'
            }
            local ++ecnt
        }
        restore
        if `"`1'"'=="All" {
            foreach e of numlist 1(1)3 {                
                replace point = `beta`e'' if bound == `i'
                replace LB    = `beta`e''-invnormal(0.975)*`stde`e'' if bound == `i'
                replace UB    = `beta`e''+invnormal(0.975)*`stde`e'' if bound == `i'
                local i=`i'+1
            }
            local i = `i'+4
            local bshort = string(`beta3',"%5.4f") 
            local bounds`n' "`bounds`n'' `bshort' & "
            dis "`bounds`n''"
        }
    }
    
    #delimit ;
    esttab `ests2' using "$OUT/tables/`1'.tex", keep(fert) nogaps
    b(%-9.3f) se(%-9.3f) starlevel("*" 0.10 "**" 0.05 "***" 0.01) 
    stats(N c, fmt(%9.0gc %5.3f) label("\\ Observations" "Coefficient Difference"))
    label nonotes mlabels(, none) nonumbers style(tex) fragment replace noline;

    gen Twins = .;
    esttab `ests1' using "$OUT/tables/`1'_first.tex", b(%-9.3f) se(%-9.3f)
    keep(Twins) starlevel ("*" 0.10 "**" 0.05 "***" 0.01) nogaps
    stats(KPF KPp, fmt(%9.2f %9.3f)
          label("\\ Kleibergen-Paap rk statistic" "p-value of rk statistic"))
    label nonotes mlabels(, none) nonumbers style(tex) fragment replace noline;
    #delimit cr
    
    if `"`1'"'=="All" {
        lab var height "Mother's Height"
        lab var bmi    "Mother's BMI"
        lab var preClustD "Doctor Availability"
        lab var preClustN "Nurse Availability"
        lab var preClustZ "No Prenatal Care Available"
        lab var _wealth1 "Poorest Quintile"
        lab var _wealth2 "Quintile 2"
        lab var _wealth3 "Quintile 3"
        lab var _wealth4 "Quintile 4"
        lab var _wealth5 "Richest Quintile"        
        #delimit ;
        esttab est2 est3 est5 est6 est8 est9 using "$OUT/tables/DHSIV_full.tex",
        keep(fert $H _wealth*) nogaps b(%-9.3f) se(%-9.3f)
        starlevel("*" 0.10 "**" 0.05 "***" 0.01)  replace noline
        stats(N r2, fmt(%9.0gc %5.3f) label("\\ Observations" "R-Squared"))
        label nonotes mlabels(, none) nonumbers style(tex) fragment;
        #delimit cr
    }
    estimates clear
    macro shift
    drop Twins
}


*******************************************************************************
*** (6) Imperfect IV Bounds
*******************************************************************************
tab _cou            , gen(_cc)
tab year_birth      , gen(_yb)
tab age             , gen(_aa)
tab contracep_intent, gen(_ci)
tab bord            , gen(_bb)
local base2 malec _cc* _yb* _aa* _ci* _bb*

local i = 5
foreach n in two three four {
    preserve
    keep if `n'_plus==1
    *drop if _cou==""|year_birth==.|age==.|contracep_intent==.|bord==.
    replace twin_`n'_fam = -twin_`n'_fam
    
    local p partial(`base') 
    local z twin_`n'_fam
    local y school_zscore    
    imperfectiv_dc `y' `base2' $age $S $H (fert=`z') `wt', ncorr vce(cluster id)
    matrix LRbounds = e(LRbounds)
    local LB = LRbounds[1,1]
    local UB = LRbounds[1,4]
    local LBshort = string(`LB', "%5.4f")
    local UBshort = string(`UB', "%5.4f")
    local p`n' "[`LBshort', `UBshort']"
    local N`n' = string(e(N),"%9.0gc")
    restore
    
    replace LB = `LB' if bound == `i'
    replace UB = `UB' if bound == `i'
    local i = `i'+7
}
file open NRfile using "$OUT/tables/NevoRosenDHS.tex", write replace
file write NRfile "School Z-Score&`ptwo'&`pthree'&`pfour'\\"   _n
file write NRfile "95\% CI End Points&&&\\"   _n
file write NRfile "Observations&`Ntwo'&`Nthree'&`Nfour'\\"   _n
file close NRfile

*******************************************************************************
*** (7) Plausibly Exogenous Bounds
*******************************************************************************
local i = 6
foreach n in two three four {
    preserve
    keep if `n'_plus==1
    gen j = _n
    merge 1:1 j using "$DAT/gammasNigeria", gen(_mergeGamma)
    #delimit ;
    plausexog uci school_zscore `base' $age $S $H (fert = twin_`n'_fam), 
    gmin(0) gmax(0.008) grid(2) level(.95) vce(robust);
    #delimit cr
    local c1 = e(lb_fert)
    local c2 = e(ub_fert)
    local LB1= string(`c1',"%5.4f")
    local UB1= string(`c2',"%5.4f")              
    dis "lower bound = `c1', upper bound=`c2'"
    local bounds`n' "`bounds`n'' `LB1' & `UB1' &"
    **Apply Frisch-Waugh-Lovell
    foreach var in school_zscore fert twin_`n'_fam {
        qui reg `var' `c3' `wt'
        predict `var'res, resid
    }
    #delimit ;
    plausexog ltz school_zscoreres (fertres = twin_`n'_famres), 
    distribution(special, gamma) seed(2702) level(.95) vce(robust);
    #delimit cr
    local LB = e(lb_fertres)
    local UB = e(ub_fertres)
    local LB1= string(`LB',"%5.4f")
    local UB1= string(`UB',"%5.4f")              
    local bounds`n' "`bounds`n'' `LB1' & `UB1' \\"

    local mval = 0.05
    foreach num of numlist 0(1)10 {
        local om`num' = ((`num'/10)*`mval'/sqrt(12))^2
        local mu`num' = (`num'/10)*`mval'/2
        local d`num' = (`num'/10)*`mval'
    }
    #delimit ;
    qui plausexog ltz school_zscoreres (fertres = twin_`n'_famres), 
    omega(0.05) mu(0.00416667) level(0.95) graph(fertres)
    graphomega(`om0' `om1' `om2' `om3' `om4' `om5' `om6' `om7' `om8' `om9' `om10')
    graphmu(`mu0' `mu1' `mu2' `mu3' `mu4' `mu5' `mu6' `mu7' `mu8' `mu9' `mu10')
    graphdelta(`d0' `d1' `d2' `d3' `d4' `d5' `d6' `d7' `d8' `d9' `d10')
    ytitle({&beta}) xtitle({&delta}) xline(0.008, lcolor(red) lpattern(longdash))
    note("Methodology described in Conley et al. (2012)")
    legend(order(1 "Point Estimate (LTZ)" 2 "95% CI")) scheme(s1mono);
    graph export "$OUT/figures/LTZ_`n'.eps", as(eps) replace;
    #delimit cr
    restore

    replace LB = `LB' if bound == `i'
    replace UB = `UB' if bound == `i'
    local i = `i'+7
}
file open  conleyfile using "$OUT/tables/Conleyetal_DHS.tex", write replace
file write conleyfile "`boundstwo'"   _n
file write conleyfile "`boundsthree'" _n
file write conleyfile "`boundsfour'"  _n
file close conleyfile


*******************************************************************************
*** (8) Bounds plot
*******************************************************************************
#delimit ;
twoway rcap LB UB bound in 1/20, scheme(sj) 
||  scatter point bound in 1/20, legend(off)
xlabel(1  "OLS" 2  "Base IV"  3 "+H IV" 4  "+S&H IV" 5  "Nevo Rosen" 6  "Conley et al"
       8  "OLS" 9  "Base IV" 10 "+H IV" 11 "+S&H IV" 12 "Nevo Rosen" 13 "Conley et al"
       15 "OLS" 16 "Base IV" 17 "+H IV" 18 "+S&H IV" 19 "Nevo Rosen" 20 "Conley et al",
       angle(45)) yline(0, lcolor(red) lpattern(dash) lwidth(thin))
xtitle("") ytitle("Estimated Q-Q 95% Bounds") ylabel(-0.10(0.05)0.10)
text(0.075 4 "Two-Plus") text(0.075 11 "Three-Plus") text(0.075 18 "Four-Plus");
graph export "$OUT/figures/boundsDHS.eps", replace;
#delimit cr


*******************************************************************************
*** ALL BELOW IS APPENDICES ONLY
*******************************************************************************


*******************************************************************************
*** (9a) Evidence of maternal health indicators on outcomes -- investments
*******************************************************************************
gen homebirth = m15==11 if m15!=.
local cc if e(sample)==1

foreach var of varlist antenatal homebirth {
    eststo: reg `var' `base' _educf* _wealth* i.fert bmi height `wt'     , `se'
    sum `var' if e(sample)==1
    estadd scalar mean = r(mean)
    eststo: reg `var' `base' _educf* _wealth* i.fert bmi        `wt' `cc', `se'
    sum `var' if e(sample)==1
    estadd scalar mean = r(mean)
    eststo: reg `var' `base' _educf* _wealth* i.fert height     `wt' `cc', `se'
    sum `var' if e(sample)==1
    estadd scalar mean = r(mean)
}
lab var bmi    "Mother's BMI"
lab var height "Mother's Height"
#delimit ;
esttab est2 est3 est1 est5 est6 est4 using "$OUT/tables/HealthInvestments.tex",
keep(bmi height) b(%-9.3f) se(%-9.3f) starlevel ("*" 0.10 "**" 0.05 "***" 0.01)
stats(mean r2 N, fmt(%9.2f %9.2f %9.0gc) 
       label("Mean Value" "R-Squared" "Observations")) replace collabels(none) 
mgroups("Antenatal Appointments (N)" "Births at Home", pattern(1 0 0 1 0 0)
   prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
title("Maternal Health and Child Investment Behaviours"\label{healthInvestment})
postfoot("\bottomrule\multicolumn{7}{p{14.2cm}}{{\footnotesize Regressions of  "
         "investment behaviours on maternal health measures are all conditional"
         " on mother's age, education and wealth fixed effects, as well as     "
         "country and child year of birth fixed effects. Antenatal appointments"
         " refers to the number of appointments check-ups attended by the      "
         "mother, and Birth at home refers to any birth recorded as occurring  "
         "at the respondent's home. Standard errors are clustered by mother.}} "
         "\end{tabular}\end{table}") booktabs mlabels(, none) style(tex) label;
estimates clear;
#delimit cr

*******************************************************************************
*** (9b) Evidence of maternal health indicators on outcomes -- later life
*******************************************************************************
local base malec i._cou i.year_birth i.age i.contracep_intent 
bys v001 _year: egen CprenateDoctor = mean(prenate_doc)
bys v001 _year: egen CprenateNurse  = mean(prenate_nurse)
bys v001 _year: egen CprenateNone   = mean(prenate_none)
gen CprenateAnyC = 1 - CprenateNone
gen obese       = bmi > 30 if bmi!=.

gen noObese   = obese == 0 if obese!= .
gen noUweight = underweight == 0 if underweight != .

factor height noObese noUweight CprenateD CprenateNu CprenateAn, factor(3)
predict healthMom
egen healthMomZ = std(healthMom)

local y     school_zscore

sum twind
reg `y' `base' _educf* _wealth* healthMomZ i.fert `wt', `se'
local healthZ = _b[healthMomZ]
reg healthMomZ twind `base' `wt' if e(sample)==1, `se'
local twinZ = _b[twind]


local gamma = `healthZ'*`twinZ'
dis `gamma'


eststo: reg `y' `base' _educf* _wealth* i.fert bmi height `wt', `se'
preserve
keep if e(sample)==1

eststo: reg `y' `base' _educf* _wealth* i.fert bmi        `wt', `se'
eststo: reg `y' `base' _educf* _wealth* i.fert     height `wt', `se'

foreach var of varlist educf bmi height {
    bys country _year: egen mean`var' = mean(`var')
    bys country _year: egen std`var'  = sd(`var')
    gen Z`var' = (`var'-mean`var')/std`var'
    drop std`var' mean`var'
}
eststo: reg `y' `base' _wealth* i.fert Zeducf Zbmi Zheight `wt', `se'
local educZ   = _b[Zeducf]
local bmiZ    = _b[Zbmi]
local heightZ = _b[Zheight]

eststo: reg `y' `base' _wealth* i.fert Zeducf              `wt', `se'
eststo: reg `y' `base' _wealth* i.fert        Zbmi         `wt', `se'
eststo: reg `y' `base' _wealth* i.fert             Zheight `wt', `se'
eststo: reg `y' `base' _educf* _wealth* i.fert bmi height preClust* `wt', `se'
lab var school_zscore "Child Educ"
lab var Zeducf        "Maternal Education (Z)"
lab var Zbmi          "BMI (Z-Score)"
lab var Zheight       "Height (Z-Score)"
lab var bmi           "Body Mass Index"
lab var height        "Height in Centimetres"
lab var preClustD     "Availability of Doctors"
lab var preClustN     "Availability of Nurses"
lab var preClustZ     "No Prenatal Care"


**BACK OF THE ENVELOPE GAMMA
reg Zeducf  twind `base' $age Zbmi Zheight `wt', `se'
local twinEd = _b[twind]
reg Zbmi    twind `base' $age $S `wt', `se'
local twinBM = _b[twind]
reg Zheight twind `base' $age $S `wt', `se'
local twinHt = _b[twind]
dis `educZ'*`twinEd'
dis `bmiZ'*`twinBM'
dis `heightZ'*`twinHt'
exit
local ests est5 est6 est7 est4 est2 est3 est1 est8
#delimit ;
esttab `ests' using "$OUT/tables/Intergeneration.tex",
replace keep(bmi height Zeducf Zbmi Zheight preClustD preClustN preClustZ)
starlevel ("*" 0.10 "**" 0.05 "***" 0.01) collabels(none) label booktabs
stats(r2 N, fmt(%9.2f %12.0gc) label("R-Squared" "Observations")) b(%-9.3f) 
mgroups("Z-Scores" "Continuous Variables/Indicators", pattern(1 0 0 0 1 0 0)
        prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
title("Maternal Characteristics and Child Educational Outcomes"\label{Intergen})
mlabels("Educ" "Educ" "Educ" "Educ" "Educ" "Educ" "Educ" "Educ") 
postfoot("\bottomrule           "
         "\multicolumn{9}{p{19.9cm}}{\begin{footnotesize} The dependent variable "
         "in each model is each child's standardized educational attainment      "
         "compared with his/her cohort.  Table headers (Z-Scores and Continuous  "
         "Variables) refers to the form of the independent variables at the level"
         "of the mother.  All regressions are "
         "estimated by OLS, and cluster standard errors by mother.  Each      "
         "specification includes fixed effects for mother and child age,      "
         "total fertility, country and year, and family wealth quintile.  In  "
         "columns 5-7 maternal year of education fixed effects are included.  "
         "Columns 1-4 use standardised variables for education, BMI and height,"
         " where Z-scores are constructed comparing each mother to those in   "
         "her country and survey wave."
         "\end{footnotesize}}\end{tabular}\end{table}") style(tex) se(%-9.3f);
estimates clear;
#delimit cr


#delimit ;
estpost correlate educf height bmi wealth preClust*, matrix;
esttab . using "$OUT/tables/TwinPredCorr.tex", not unstack compress noobs
nostar style(tex) nonumber booktabs label replace;
#delimit cr
restore 


preserve
use "$DAT/DHS_twins_mortality", clear
replace wealth=6 if wealth==.
tab wealth, gen(_wealth)
tab educf , gen(_educf)
keep if age>0&age<=16

local y     infantmortality
eststo: reg `y' `base' _educf* _wealth* i.fert bmi height `wt', `se'

keep if e(sample)==1
eststo: reg `y' `base' _educf* _wealth* i.fert bmi        `wt', `se'
eststo: reg `y' `base' _educf* _wealth* i.fert     height `wt', `se'

foreach var of varlist educf bmi height {
    bys country _year: egen mean`var' = mean(`var')
    bys country _year: egen std`var'  = sd(`var')
    gen Z`var' = (`var'-mean`var')/std`var'
    drop std`var' mean`var'
}
eststo: reg `y' `base' _wealth* i.fert Zeducf Zbmi Zheight `wt', `se'
eststo: reg `y' `base' _wealth* i.fert Zeducf              `wt', `se'
eststo: reg `y' `base' _wealth* i.fert        Zbmi         `wt', `se'
eststo: reg `y' `base' _wealth* i.fert             Zheight `wt', `se'


lab var infantmortality "Infant Mort"
lab var Zeducf        "Maternal Education (Z)"
lab var Zbmi          "BMI (Z-Score)"
lab var Zheight       "Height (Z-Score)"
lab var bmi           "Body Mass Index"
lab var height        "Height in Centimetres"

#delimit ;
esttab est5 est6 est7 est4 est2 est3 est1 using "$OUT/tables/Intergen_IMR.tex",
replace keep(bmi height Zeducf Zbmi Zheight) collabels(none) label booktabs
b(%-9.3f) se(%-9.3f) starlevel("*" 0.10 "**" 0.05 "***" 0.01)
mlabels("Alive" "Alive" "Alive" "Alive" "Alive" "Alive" "Alive" "Alive") 
stats(r2 N, fmt(%9.2f %12.0gc) label("R-Squared" "Observations"))
mgroups("Z-Scores" "Continuous Variables/Indicators", pattern(1 0 0 0 1 0 0)
        prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
title("Maternal Characteristics and Child Survival"\label{IntergenIMR})
postfoot("\bottomrule           "
         "\multicolumn{8}{p{18.3cm}}{\begin{footnotesize} The dependent variable "
         "in each model is wheter each child died prior to 1 year of age.  Table "
         "headers  (Z-Scores and Continuous  "
         "Variables) refers to the form of the independent variables at the level"
         "of the mother.  All regressions are "
         "estimated by OLS, and cluster standard errors by mother.  Each      "
         "specification includes fixed effects for mother and child age,      "
         "total fertility, country and year, and family wealth quintile.  In  "
         "columns 5-7 maternal year of education fixed effects are included.  "
         "Columns 1-4 use standardised variables for education, BMI and height,"
         " where Z-scores are constructed comparing each mother to those in   "
         "her country and survey wave."
         "\end{footnotesize}}\end{tabular}\end{table}") style(tex);
estimates clear;
#delimit cr
restore


********************************************************************************
**** (10) OLS Pooled Regressions with birth order
********************************************************************************
local base  malec i._cou i.year_birth i.age i.contracep_intent 
local y     school_zscore

foreach num of numlist 2(1)9 {
    gen _birthOrder`num'= bord==`num'
    lab var _birthOrder`num' "Birth Order `num'"
}
gen _birthOrder10 = bord>=10
lab var _birthOrder10 "Birth Order $ \geq10 $"
lab var fert "Fertility"

eststo: reg `y' fert `base' $age               `wt' 
eststo: reg `y' fert `base' $age $H            `wt' 
eststo: reg `y' fert `base' $age $S $H         `wt' 

eststo: reg `y'      `base' $age    _birthOrder*     `wt' 
eststo: reg `y' fert `base' $age    _birthOrder*     `wt' 
eststo: reg `y' fert `base' $age $H _birthOrder*     `wt' 
eststo: reg `y' fert `base' $age $S $H _birthOrder*  `wt' 

local bb1 _birthOrder2 _birthOrder3 _birthOrder4 _birthOrder5 
local bb2 _birthOrder6 _birthOrder7 _birthOrder8 _birthOrder9 _birthOrder10
#delimit ;
esttab est1 est2 est3 est4 est5 est6 est7 using "$OUT/tables/OLS-bord.tex", 
mgroups("No Birth Order FEs" "Birth Order FEs", pattern(1 0 0 1 0 0 0)
        prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span})) 
b(%-9.3f) se(%-9.3f) replace stats(N, fmt(%12.0gc) label(Observations))
mlabels("Base" "+S" "+S+H" "No Fertility" "Base" "+S" "+S+H") booktabs label 
title("OLS Estimates with and without Birth Order Controls (Pooled DHS Data)"
      \label{tab:bordFE}) starlevels( * 0.10 ** 0.05 *** 0.01) collabels(,none)
keep(fert `bb1' `bb2') style(tex) nonotes;
#delimit cr
estimates clear


********************************************************************************
**** (11) By gender of twin
********************************************************************************
local base malec i._cou i.year_birth i.age i.contracep_intent i.bord
local c1 `base' $age
local c2 `base' $age $H
local c3 `base' $age $S $H 
local y  school_zscore
local x  fert

local ecnt 1
local ests1
foreach n in two three four {
    preserve
    keep if `n'_plus==1
    gen TwinGirl = twinGirl_`n'_fam 
    gen TwinBoy  = twinBoy_`n'_fam 
    
    local p partial(`base') savefirst
    local z1 TwinGirl
    local z2 TwinBoy

    foreach e of numlist 3 {
        eststo: ivreg2 `y' `c`e'' (`x'=`z1') `wt', `se' `p' savefp(fst`ecnt')
        mat first=e(first)
        estadd scalar KPF=first[8,1]: fst`ecnt'fert
        estadd scalar KPp=first[7,1]: fst`ecnt'fert
        local ests1 `ests1' fst`ecnt'fert
        local ++ecnt
        
        eststo: ivreg2 `y' `c`e'' (`x'=`z2') `wt', `se' `p' savefp(fst`ecnt')
        mat first=e(first)
        estadd scalar KPF=first[8,1]: fst`ecnt'fert
        estadd scalar KPp=first[7,1]: fst`ecnt'fert
        local ests1 `ests1' fst`ecnt'fert

        reg `x' `z1' `c`e'' [iw=sweight]
        estimates store fstage1
        reg `x' `z2' `c`e'' [iw=sweight]
        estimates store fstage2
        suest fstage1 fstage2, vce(cluster id)
        test [fstage1_mean]`z1' = [fstage2_mean]`z2'
        estadd scalar feq = r(p): fst`ecnt'fert
        
        **Generate residuals for equality of coefficient tests
        foreach var in x y z1 z2 {
            reg ``var'' `c`e'' `wt'
            predict `var'res, resid
        }

        #delimit ;
        gmm (eq1: yres-{b1}*xres-{b0}) (eq2: yres-{c1}*xres-{c0})
        `wt', instruments(eq1: z1res) instruments(eq2: z2res) 
        onestep winitial(unadjusted, indep) vce(cluster id);
        #delimit cr
        test ([b1]_cons = [c1]_cons)
        estadd scalar c = r(p): est`ecnt'
        local ++ecnt
            
        #delimit ;
        eststo: ivreg2 `y' `c`e'' (sons daughters=`z1' `z2') `wt',
        `se' `p' savefp(fst`ecnt');
        #delimit cr
        test sons=daughters
        estadd scalar c = r(p): est`ecnt'
        local ests1 `ests1' fst`ecnt'daughters
        mat first=e(first)
        estadd scalar KPF_s=first[15,1]: fst`ecnt'sons
        estadd scalar KPF  =first[15,2]: fst`ecnt'daughters
        estadd scalar KPp_s=first[18,1]: fst`ecnt'sons
        estadd scalar KPp  =first[18,2]: fst`ecnt'daughters
        local ++ecnt
    }
    restore
}
#delimit ;
esttab est1 est2 est3 est4 est5 est6 est7 est8 est9 using "$OUT/tables/DHSgend.tex",
keep(fert sons daughters) nogaps b(%-9.3f) se(%-9.3f)
starlevel("*" 0.10 "**" 0.05 "***" 0.01) label nonotes mlabels(, none) 
stats(N c, fmt(%9.0gc %5.3f) label("\\ Observations" "Coefficient Difference"))
nonumbers style(tex) fragment replace noline;

gen TwinGirl = .;
gen TwinBoy = .;
lab var TwinGirl "Girl Twin";
lab var TwinBoy  "Boy Twin";
esttab `ests1' using "$OUT/tables/DHSgend_first.tex", b(%-9.3f) se(%-9.3f)
keep(TwinGirl TwinBoy) starlevel ("*" 0.10 "**" 0.05 "***" 0.01) nogaps
stats(KPF KPp feq, fmt(%9.2f %9.3f %9.3f)
      label("\\ Angrist-Pischke First Stage F-statistic"
            "p-value of AP statistic" "Coefficient Difference"))
label nonotes mlabels(, none) nonumbers style(tex) fragment replace noline;
#delimit cr



*******************************************************************************
*** (12) Size Plots
*******************************************************************************
gen size=m18 if m18<=5
gen yestwin=1 if twind==1
gen notwin=1 if twind==0
collapse (sum) yestwin notwin, by(size)
drop if size==.
replace size=9 if size==1
replace size=8 if size==2
replace size=7 if size==3
replace size=6 if size==4
replace size=size-4
label def sizes 1 "Very Small" 2 "Small" 3 "Average" 4 "Large" 5 "Very Large"
label values size sizes
sum yestwin
replace yestwin=yestwin/(5*r(mean))
sum notwin
replace notwin=notwin/(5*r(mean))

#delimit ;
graph bar notwin yestwin, over(size) bargap(-20) ytitle("Proportion of Children")
legend(label(1 "Singletons") label(2 "Twins"))  scheme(s1mono)
blabel(bar, position(inside) format(%9.2f) color(white));
graph export "$OUT/figures/Size.eps", as(eps) replace;
#delimit cr


*******************************************************************************
*** (13) Summary Stats
*******************************************************************************
local opts nostar unstack noobs nonote nomtitle nonumber
local s    twindfamily


preserve
collapse $sumM educp agefirstbirth, by(id `s')
count
sum `s'
tab `s'

#delimit ;
estpost tabstat fert agemay educf height bmi underweight, by(`s')
        statistics(mean sd) listwise columns(statistics);
esttab using "$OUT/tables/MotherSumDHS.txt", replace main(mean) aux(sd) `opts';
#delimit cr
restore

preserve
use "$DAT/DHS_twins_mortality.dta", clear
keep if age<19
*keep if age>0&age<=16
#delimit ;
estpost tabstat infantmortality, by(`s') statistics(mean sd)
        listwise columns(statistics);
esttab using "$OUT/tables/MortSumDHS.txt", replace main(mean) aux(sd) `opts';
#delimit cr
restore


preserve
count
tab `s'
tab twind
sum bord if twind==1
#delimit ;
estpost tabstat age educ school_zscore noeduc, by(`s') statistics(mean sd)
        listwise columns(statistics);
esttab using "$OUT/tables/ChildSum.txt", replace main(mean) aux(sd) `opts';
#delimit cr
restore


preserve
cap decode _cou, gen(WBcountry)
gen colvar=inc_status=="L"
collapse colvar, by(WBcountry _year)
gen income="Low" if colvar==1
replace income="Middle" if colvar==0
drop colvar
order WBcountry income _year
sort WBc _year
outsheet using "$OUT/tables/Countries.csv", delimit(;) nonames replace
restore


********************************************************************************
**** (14) Twin predict regressions
********************************************************************************
local tvars motherage motheragesq agefirstbirth educf educfyrs_sq height bmi 
local FEs   i.child_yob i._cou 
fvset base 1 _cou
fvset base 1 child_yob

eststo: reg twind100 $twinpredict `wt' `cond', `se'
foreach inc in =="L" !="L"  {
    eststo: reg twind100 `tvars' `FEs' `wt' `cond'&inc_status`inc', `se'
}

local cond1 child_yob>1990
local cond2 child_yob<=1990
foreach condtn in cond1 cond2 {
    eststo: reg twind100 `tvars' `FEs' `wt' if ``condtn'', `se'
}
eststo: reg twind100 `tvars' `FEs' prenate_* `wt', `se'

lab var motherage      "Mother's Age"
lab var motheragesq    "Mother's Age Squared"
lab var agefirstbirth  "Age at First Birth"
lab var educf          "Mother's Education (years)"
lab var educfyrs_sq    "Mother's Education Squared"
lab var height         "Mother's Height (cm)"
lab var bmi            "Mother's BMI"
lab var prenate_doc    "Prenatal Care (Doctor)"
lab var prenate_nurse  "Prenatal Care (Nurse)"
lab var prenate_none   "Prenatal Care (None)"

#delimit ;
esttab est1 est2 est3 est4 est5 est6 using "$OUT/tables/twinsDHS.tex",
b(%-9.3f) se(%-9.3f) keep(`tvars' prenate_doc prenate_nurse prenate_none)
starlevel ("*" 0.10 "**" 0.05 "***" 0.01) nogaps
stats(N r2, fmt(%12.0gc %-5.3f) label(Observations R-Squared))
label nonotes mlabels(, none) nonumbers style(tex) fragment replace noline;
#delimit cr
estimates clear


*******************************************************************************
*** (15) Prior children of twin vs non-twin mothers
*******************************************************************************
gen birthSize    = -m18+6 if m18 <=5
gen smallBirth   = m18==4|m18==5 if m18<=5
gen largeBirth   = m18==1|m18==2 if m18<=5
gen birthweight  = m19 if m19>=500&m19<=5000


foreach var of varlist birthSize smallBirth largeBirth birthweight {
    eststo: reg `var' `base' twin_two_fam if two_plus==1, `se'
    sum `var' if e(sample)==1
    estadd scalar mean = r(mean)
    eststo: reg `var' `base' twin_three_fam if three_plus==1, `se'
    sum `var' if e(sample)==1
    estadd scalar mean = r(mean)
    eststo: reg `var' `base' twin_four_fam  if four_plus==1, `se'
    sum `var' if e(sample)==1
    estadd scalar mean = r(mean)
}
lab var twin_two_fam   "Treated"
lab var twin_three_fam "Treated"
lab var twin_four_fam "Treated"
#delimit ;
esttab est1 est4 est7 est10 using $OUT/tables/pretwinHC_2.tex, keep(twin_two_fam)
b(%-9.3f) se(%-9.3f) starlevel ("*" 0.10 "**" 0.05 "***" 0.01) 
stats(mean N, fmt(%9.2f %9.0gc) label("Mean Values" "Observations"))
label nonotes mlabels(, none) nonumbers style(tex) fragment replace noline;

esttab est2 est5 est8 est11 using $OUT/tables/pretwinHC_3.tex, b(%-9.3f)
se(%-9.3f) keep(twin_three_fam) starlevel("*" 0.10 "**" 0.05 "***" 0.01) 
stats(mean N, fmt(%9.2f %9.0gc) label("Mean Values" "Observations"))
label nonotes mlabels(, none) nonumbers style(tex) fragment replace noline;

esttab est3 est6 est9 est12 using $OUT/tables/pretwinHC_4.tex, b(%-9.3f) 
keep(twin_four_fam) se(%-9.3f) starlevel ("*" 0.10 "**" 0.05 "***" 0.01) 
stats(mean N, fmt(%9.2f %9.0gc) label("Mean Values" "Observations"))
label nonotes mlabels(, none) nonumbers style(tex) fragment replace noline;
#delimit cr
exit


#delimit ;
estout est1 est2 est3 est4 est5 est6 est7 est8 est9 est10 est11 est12
using "$OUT/Twin/pretwin_DHS_birthoutcomes.txt", replace
keep(twin_two_fam twin_three_fam twin_four_fam) 
title("Prior Children's Birth Outcomes of Twin and Non-Twin Mothers")                
cells(b(star fmt(%-9.3f)) se(fmt(%-9.3f) par))
stats (mean r2 N, fmt(%9.2f %9.2f %9.0g))
starlevel ("*" 0.10 "**" 0.05 "***" 0.01);
estimates clear;
#delimit cr
*/
********************************************************************************
**** (16) IV (using twin at order n), only for same sex twins
********************************************************************************
gen sextest = malec if twind == 1
bys id child_yob: egen varsex = sd(sextest)
replace varsex=0 if varsex==.&twind==1
bys id child_yob: egen twingend = max(sextest)
gen samesextwins = varsex == 0 if varsex!=.

local bb = 2
foreach n in two three four five {
    gen sst = 1 if bord==`bb'&samesextwins==1&twin_`n'_fam==1
    local ++bb
    replace sst = 1 if bord==`bb'&samesextwins==1&twin_`n'_fam==1
    bys id: egen twin_`n'_fam_samesex = max(sst)
    replace twin_`n'_fam_samesex=0 if twin_`n'_fam_samesex==.
    drop sst
}

local ests1
local ests2
local ecnt 1

foreach n in two three four {
    preserve
    keep if `n'_plus==1        
    gen Twins = twin_`n'_fam_samesex
        
    local p partial(`base') savefirst
    local z Twins

        
    foreach e of numlist 1(1)3 {
        eststo: ivreg2 `y' `c`e'' (`x'=`z') `wt', `se' `p' savefp(fst`ecnt')
        local beta`e' =  _b[fert]
        local stde`e' = _se[fert]
        local ests2 `ests2' est`ecnt'
        local ests1 `ests1' fst`ecnt'fert
        mat first=e(first)
        estadd scalar KPF=first[8,1]: fst`ecnt'fert
        estadd scalar KPp=first[7,1]: fst`ecnt'fert

        **Generate residuals for equality of coefficient tests
        foreach var in x y z {
            reg ``var'' `c`e'' `wt'
            predict `var'res`e', resid
        }
        if `e'!=1 {
            #delimit ;
            gmm (eq1: yres1-{b1}*xres1-{b0}) (eq2: yres`e'-{c1}*xres`e'-{c0})
            `wt', instruments(eq1: zres1) instruments(eq2: zres`e') 
            onestep winitial(unadjusted, indep) vce(cluster id);
            #delimit cr
            test ([b1]_cons = [c1]_cons)
            estadd scalar c = r(p): est`ecnt'
        }
        local ++ecnt
    }
    restore
}    
#delimit ;
esttab `ests2' using "$OUT/tables/DHSsamesexIV.tex", keep(fert) nogaps
b(%-9.3f) se(%-9.3f) starlevel("*" 0.10 "**" 0.05 "***" 0.01) 
stats(N c, fmt(%9.0gc %5.3f) label("\\ Observations" "Coefficient Difference"))
label nonotes mlabels(, none) nonumbers style(tex) fragment replace noline;

gen Twins = .;
lab var Twins "Same Sex Twins";
esttab `ests1' using "$OUT/tables/DHSsamesexIV_first.tex", b(%-9.3f) se(%-9.3f)
keep(Twins) starlevel ("*" 0.10 "**" 0.05 "***" 0.01) nogaps
stats(KPF KPp, fmt(%9.2f %9.3f)
      label("\\ Kleibergen-Paap rk statistic" "p-value of rk statistic"))
label nonotes mlabels(, none) nonumbers style(tex) fragment replace noline;
#delimit cr
exit



*/
********************************************************************************
**** (7) Non-linear IV estimates of Mogstad and Wiswall
********************************************************************************
keep if fert<=6
local nbstrap 10
***SAMPLE OF FIRST-BORN CHILDREN (two_plus==1)
* (A)
*Want to use fert 2->3
*Want to use fert 3->4
*Want to use fert 4->5
*Want to use fert 5->6
* (B)
*Include up to fertility 6
*(C)
* First stage I is twin-predicted or 0 if fert is less than N
*(D)
* First stage II is predicted fert of 1 if twinning at N

cap program drop nonlinearIV
program nonlinearIV, eclass
  version 11
  syntax varlist(fv), fnum(string) [efficient]
  *GENERATE TWIN STAR

  if `"`fnum'"'=="two" {
      local current two
      local nlist three four five
      local jj=3
      
      *(A) GENERATE FERT VARIABLES
      foreach num of numlist 3(1)6 {
          gen fert`num'=fert>=`num'
      }
      *GENERATE TWIN STAR
      local ints i.educf#c.motherage i.educf#c.motheragesq i.educp#c.motherage i.educp#c.motheragesq
      foreach num in `nlist' {
          qui reg twin_`num'_fam `varlist' `ints' i.agemay i.educp if fert>=`jj'
          predict twinStar_`num' if fert>=`jj'
          replace twinStar_`num' = twin_`num'_fam - twinStar_`num'
          replace twinStar_`num' = 0 if fert<`jj'
          local ++jj
      }
      
      *GENERATE EFFICIENT INSTRUMENTS
      if length(`"`efficient'"')!=0 {
          qui probit fert3 `varlist' i.educf i.agemay 
          predict p2hat
          replace p2hat = 1 if twin_two_fam==1
          local l1 = 3 
          foreach g in three four five {
              local fcontrol i.educf i.agemay
              if `"`g'"'=="five" local fcontrol i.educf twin_two_fam i.agemay
              local l2 = `l1'+1 
              qui probit fert`l2' `varlist' twinStar_`g' `fcontrol'
              predict p`l1'hat
              local ++l1
          }
      }      
      local z  twin_two_fam
      local XF fert3 fert4 fert5 fert6
      local Z1 twin_two_fam twinStar_three twinStar_four twinStar_five
      local Z2 p2hat p3hat p4hat p5hat
  }
  else if `"`fnum'"'=="three" {
      local current three
      local nlist   four five
      local jj=4
      
      *(A) GENERATE FERT VARIABLES
      foreach num of numlist 4(1)6 {
          gen fert`num'=fert>=`num'
      }
      *GENERATE TWIN STAR
      local ints i.educf#c.motherage i.educf#c.motheragesq i.educp#c.motherage i.educp#c.motheragesq
      foreach num in `nlist' {
          qui reg twin_`num'_fam `varlist' `ints' i.agemay i.educp if fert>=`jj'
          predict twinStar_`num' if fert>=`jj'
          replace twinStar_`num' = twin_`num'_fam - twinStar_`num'
          replace twinStar_`num' = 0 if fert<`jj'
          local ++jj
      }
      *GENERATE EFFICIENT INSTRUMENTS
      if length(`"`efficient'"')!=0 {
          qui probit fert4 `varlist' i.educf i.agemay
          predict p3hat
          replace p3hat = 1 if twin_three_fam==1
          local l1 = 4
          foreach g in four five {
              local fcontrol i.educf i.agemay
              if `"`g'"'=="five" local fcontrol i.educf twin_two_fam i.agemay
              local l2 = `l1'+1  
              qui probit fert`l2' `varlist' twinStar_`g' `fcontrol'
              predict p`l1'hat
              local ++l1
          }
      }
      
      local z  twin_three_fam
      local XF fert4 fert5 fert6
      local Z1 twin_three_fam twinStar_four twinStar_five
      local Z2 p3hat p4hat p5hat
  }
  else if `"`fnum'"'=="four" {
      local current four
      local nlist   five
      local jj=5
  
      *(A) GENERATE FERT VARIABLES
      foreach num of numlist 5(1)6 {
          gen fert`num'=fert>=`num'
      }
      *GENERATE TWIN STAR
      local ints i.educf#c.motherage i.educf#c.motheragesq i.educp#c.motherage i.educp#c.motheragesq
      foreach num in `nlist' {
          qui reg twin_`num'_fam `varlist' `ints' i.agemay i.educp if fert>=`jj'
          predict twinStar_`num' if fert>=`jj'
          replace twinStar_`num' = twin_`num'_fam - twinStar_`num'
          replace twinStar_`num' = 0 if fert<`jj'
          local ++jj
      }

      *GENERATE EFFICIENT INSTRUMENTS
      if length(`"`efficient'"')!=0 {
          qui probit fert5 `varlist' i.educf i.agemay
          predict p4hat
          replace p4hat = 1 if twin_three_fam==1
          local l1 = 5
          foreach g in five {
              local fcontrol i.educf i.agemay
              if `"`g'"'=="five" local fcontrol i.educf twin_two_fam i.agemay
              local l2 = `l1'+1  
              qui probit fert`l2' `varlist' twinStar_`g' `fcontrol'
              predict p`l1'hat
              local ++l1
          }
      }

      local z  twin_four_fam
      local XF fert5 fert6
      local Z1 twin_four_fam twinStar_five
      local Z2 p4hat p5hat
  }
  else {
      dis "Error"
      exit
  }
  local y  school_zscore
  local wt [pw=sweight]
  *eststo: ivreg2 `y' `varlist' (fert = `z' ) `wt', savefirst savefp(FM)

  if length(`"`efficient'"')==0 {
      eststo: ivreg2 `y' `varlist' (`XF' = `Z1') `wt', savefirst savefp(FN)
  }
  else {
      eststo: ivreg2 `y' `varlist' (`XF' = `Z2') `wt', savefirst savefp(FO)
  }
  mat beta = e(b)
  ereturn post beta
  *clean up
  cap drop twinSt*
  foreach var in fert3 fert4 fert5 fert6 p2hat p3hat p4hat p5hat {
      cap drop `var'
  }
end

local c2 `base' $age
local c3 `base' $age $H
local c4 `base' $age  i.bord
local y  school_zscore

local mst est1 estNL estEF
local fst FMfert FNfert3 FNfert4 FNfert5 FNfert6 FOfert3 FOfert4 FOfert5 FOfert6

local k=1
foreach tab in two three four {
    ****BASELINE
    set seed 1934
    preserve
    keep `cond'&`tab'_plus==1
    eststo: ivreg2 `y' $age `base' (fert = twin_`tab'_fam) `wt', savefirst savefp(FM)
    keep if e(sample)==1
    bstrap _b, rep(`nbstrap') cluster(id): nonlinearIV $age `base', fnum(`tab')
    estimates store estNL
    *nonlinearIV $age `base', fnum(`tab')
    bstrap _b, rep(`nbstrap') cluster(id): nonlinearIV $age `base', fnum(`tab') efficient
    estimates store estEF
    *nonlinearIV $age `base', fnum(`tab') efficient
    

    estout `mst' using "$OUT/IV/NonLinearIV-`tab'-base.txt", replace `estopt'
    estout `fst' using "$OUT/IV/NonLinearIVfirst-`tab'-base.txt", replace `estopt'
    estimates clear

    ****WITH HEALTH
    local cvars $age `base' $S $H
    eststo: ivreg2 `y' `cvars' (fert = twin_`tab'_fam) `wt', savefirst savefp(FM)
    keep if e(sample)==1
    bstrap _b, rep(`nbstrap') cluster(id): nonlinearIV `cvars', fnum(`tab')
    estimates store estNL
    *nonlinearIV `cvars', fnum(`tab')
    bstrap _b, rep(`nbstrap') cluster(id): nonlinearIV `cvars', fnum(`tab') efficient
    estimates store estEF
    *nonlinearIV `cvars', fnum(`tab') efficient
    
    estout `mst' using "$OUT/IV/NonLinearIV-`tab'-health.txt", replace `estopt'
    estout `fst' using "$OUT/IV/NonLinearIVfirst-`tab'-health.txt", replace `estopt'
    estimates clear
    restore
    local fst FMfert FNfert4 FNfert5 FNfert6 FOfert4 FOfert5 FOfert6
    if `k'==2 local fst FMfert FNfert5 FNfert6 FOfert5 FOfert6
    local ++k    
}

*******************************************************************************
*** (1b) Check match rates [Appendix C.2]
*******************************************************************************
use "$DAT/DHS_twins", clear
egen touse=rowmiss(fert idealnumkids agemay educf height bmi underweight)
replace touse=. if touse!=0
replace touse=1 if touse==0
count if touse==1
count if _merge==3&touse==1
local totmatch=r(N)
count if _merge==3&age<=18&touse==1
local match18=r(N)
dis "Percent of matched offspring under 18: `match18'/`totmatch'"
count if _merge==2&touse==1
local totnonmatch=r(N)
count if _merge==2&(age>18|childageatdeath!=.)&touse==1
local nonmatch18=r(N)
dis "Percent of non-matched offspring 18+/deceased: `nonmatch18'/`totnonmatch'"

gen matched=1 if _merge==3&age<=18&touse==1
replace matched=0 if _merge==2&age<=18&childageatdeath==.&touse==1

foreach var of varlist age child_yob educf height bmi agemay twin malec {
    ttest `var', by(matched)
}


    

********************************************************************************
**** (22) Clean up
********************************************************************************
log close
